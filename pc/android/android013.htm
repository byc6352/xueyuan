<html><head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title></title>
  <link href="images/style.css" rel="stylesheet">
</head>

<body class="stackedit"><div class="stackedit__html">

<div class="article_content clearfix" id="article_content" style="overflow: hidden;">
                                                <div class="article-copyright">
                <span class="creativecommons">
                <a href="http://creativecommons.org/licenses/by-sa/4.0/" rel="license">
                    </a>
            <span>
                版权声明：本文为博主原创文章，遵循<a href="http://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接和本声明。            </span>
               <div class="article-source-link2222">
                    本文链接：<a href="https://blog.csdn.net/beyond702/article/details/51744082">https://blog.csdn.net/beyond702/article/details/51744082</a>
                </div>
            </span>
                    </div>
                                                    <link href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-3019150162.css" rel="stylesheet">
                                        <link href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-3019150162.css" rel="stylesheet">
                <div class="htmledit_views" id="content_views">
                                            
<h1><a name="t0"></a>一、前言</h1>
<p>对于APK里面的Resources.arsc文件大家应该都知道是干什么的（不知道的请看我的另一篇文章<a href="http://blog.csdn.net/beyond702/article/details/49228115" rel="nofollow" data-token="9d24fe2f0b4f9681a48275c24ab95707">Android应用程序资源文件的编译和打包原理</a>），它实际上就是App的资源索引表。下面我会结合实例对它的格式做一下剖析，读完这篇文章应该能够知道Resources.arsc的格式，并可以从二进制的文件中查找到资源的相关信息，或者根据资源的id可以定位到二进制文件中的位置。不过本人对Android资源文件的有一些相关概念并不是特别熟悉，所以文章中有很多地方也并不明白，如有错误欢迎指正！</p>
<p><br></p>
<h1><a name="t1"></a>二、R.java文件及资源ID</h1>
<p>首先先介绍一下我们在Android应用开发过程中程序中用的资源的id，相信大家都知道R.java文件，这个是通过aapt对资源文件进行编译生成的资源id文件，这样我们程序中使用资源文件更加方便。举例我们先看一下原始的资源文件res/values/strings.xml内容如下：</p>
<p></p>
<pre><code class="language-html hljs xml"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="php"><span class="hljs-meta">&lt;?</span>xml version=<span class="hljs-string">"1.0"</span> encoding=<span class="hljs-string">"utf-8"</span><span class="hljs-meta">?&gt;</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-tag">&lt;<span class="hljs-name">resources</span>&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-tag">&lt;<span class="hljs-name">string</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"app_name"</span>&gt;</span>Cert<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-tag">&lt;<span class="hljs-name">string</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"hello_world"</span>&gt;</span>Hello world!<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-tag">&lt;<span class="hljs-name">string</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"action_settings"</span>&gt;</span>Settings<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-tag">&lt;/<span class="hljs-name">resources</span>&gt;</span></div></div></li></ol></code></pre>
<p></p>
<div style="text-align: center;"><strong>代码段1</strong></div>
<p></p>
<p>这里先介绍几个概念，上面的app_name和hello_world这些叫做资源项名称（其它的还有windowActionBar、ActionBarTabStyle类似这种），而它们对应的资源项类型就是string（其它的还有attr、drawable类似这些），资源项的值就是Cert和Hello world!这些。</p>
<p><br></p>
<p>下面是对应R.java文件的内容：</p>
<p></p>
<pre><code class="language-java hljs"><ol class="hljs-ln" style="width: 1252px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">R</span> </span>{</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              ...</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">string</span> </span>{</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                     ...</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"><span class="hljs-comment">/**  Description of the choose target button in a ShareActionProvider (share UI). [CHAR LIMIT=NONE] </span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment">         */</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> abc_shareactionprovider_share_with=<span class="hljs-number">0x7f0a000c</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment"><span class="hljs-comment">/**  Description of a share target (both in the list of such or the default share button) in a ShareActionProvider (share UI). [CHAR LIMIT=NONE] </span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-comment">         */</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> abc_shareactionprovider_share_with_application=<span class="hljs-number">0x7f0a000b</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> action_settings=<span class="hljs-number">0x7f0a000f</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> app_name=<span class="hljs-number">0x7f0a000d</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> hello_world=<span class="hljs-number">0x7f0a000e</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                     ...</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">}</div></div></li></ol></code></pre>
<p style="text-align: center;"><strong>代码段2</strong></p>
可以看到每个资源文件在R中都是一个class，每个资源项名称都分配了一个id，id值是一个四字节无符号整数，格式是这样的：0xpptteeee，（p代表的是package，t代表的是type，e代表的是entry），最高字节代表Package ID，次高字节代表Type ID，后面两个字节代表Entry ID。
<p></p>
<p><span style="text-align: center;">Package ID相当于是一个命名空间，限定资源的来源。Android系统当前定义了两个资源命令空间，其中一个系统资源命令空间，它的Package ID等于0x01，另外一个是应用程序资源命令空间，它的Package ID等于0x7f。所有位于[0x01, 0x7f]之间的Package ID都是合法的，而在这个范围之外的都是非法的Package ID。前面提到的系统资源包package-export.apk的Package ID就等于0x01，而我们在应用程序中定义的资源的Package
 ID的值都等于0x7f，这一点可以通过生成的R.java文件来验证。</span></p>
<p><span style="text-align: center;">Type ID是指资源的类型ID。资源的类型有animator、anim、color、drawable、layout、menu、raw、string和xml等等若干种，每一种都会被赋予一个ID。</span></p>
<p><span style="text-align: center;">Entry ID是指每一个资源在其所属的资源类型中所出现的次序。注意，不同类型的资源的Entry ID有可能是相同的，但是由于它们的类型不同，我们仍然可以通过其资源ID来区别开来。</span></p>
<br><h1><a name="t2"></a>三、解析Resources.arsc</h1>
<div><br></div>
<h3><a name="t3"></a>1. Resources.arsc文件格式</h3>
<p>下面我们开始看Resources.arsc（后面截图给出的resources.arsc文件的二进制内容都是与上面代码段1和代码段2相对应的），首先看一下文件的格式，如下面两个图：</p>
<p><img alt="" src="images/android01301.jpg"><br></p>
<div style="text-align: center;"><strong>图1</strong></div>
<p></p>
<p style="text-align: center;"><img alt="" src="images/android01302.jpg"><br></p>
<p style="text-align: center;"><strong>图2</strong></p>
<p>以上两个图都是Resources.arsc文件的格式，图1是从网上找的，其中很多项都展开了，不了解对应的数据结构肯定看不懂，所以我自己画了图2（画图好蛋疼的说～<img alt="抓狂" src="images/android01303.gif">），相对来说更容易接受一点，这里都放出来做个对照吧。Resources.arsc对应的数据结构的定义在Android源码/frameworks/base/include/androidfw/ResourceType.h中，大家可以自己去看一下。</p>
<p><br></p>
<h3><a name="t4"></a>2. chunk</h3>
<p>下面我来从上到下介绍一下文件的格式，首先是chunk概念，整个文件是由一系列的chunk构成的，算是整个文件划分的基本单位吧，实际上就是把整个文件无差别的划分成多个模块，每个模块就是一个chunk，结构更加清晰。每个chunk是最前面是一个ResChunk_header的结构体，描述这个chunk的信息，ResChunk_header如下：</p>
<p></p>
<pre><code class="language-cpp hljs"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResChunk_header</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">enum</span> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_NULL_TYPE               = <span class="hljs-number">0x0000</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_STRING_POOL_TYPE        = <span class="hljs-number">0x0001</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_TABLE_TYPE              = <span class="hljs-number">0x0002</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_XML_TYPE                = <span class="hljs-number">0x0003</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_XML_FIRST_CHUNK_TYPE    = <span class="hljs-number">0x0100</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_XML_START_NAMESPACE_TYPE= <span class="hljs-number">0x0100</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_XML_END_NAMESPACE_TYPE  = <span class="hljs-number">0x0101</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_XML_START_ELEMENT_TYPE  = <span class="hljs-number">0x0102</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_XML_END_ELEMENT_TYPE    = <span class="hljs-number">0x0103</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_XML_CDATA_TYPE          = <span class="hljs-number">0x0104</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_XML_LAST_CHUNK_TYPE     = <span class="hljs-number">0x017f</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_XML_RESOURCE_MAP_TYPE   = <span class="hljs-number">0x0180</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_TABLE_PACKAGE_TYPE      = <span class="hljs-number">0x0200</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_TABLE_TYPE_TYPE         = <span class="hljs-number">0x0201</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         RES_TABLE_TYPE_SPEC_TYPE    = <span class="hljs-number">0x0202</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//当前这个chunk的类型</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint16_t</span> type;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//当前这个chunk的头部大小</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint16_t</span> headerSize;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//当前这个chunk的大小</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint32_t</span> size;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> };</div></div></li></ol></code></pre>
<p></p>
<div style="text-align: center;"><strong>代码段3</strong></div>
<p></p>
<h3><a name="t5"></a>3. 文件header</h3>
<p>Resources.arsc文件的最开始是整个文件的header，结构是ResTable_header：</p>
<p></p>
<pre><code class="language-cpp hljs"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResTable_header</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResChunk_header</span> <span class="hljs-title">header</span>;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">// The number of ResTable_package structures.</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint32_t</span> packageCount;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">};</div></div></li></ol></code></pre>
<p></p>
<div style="text-align: center;"><strong>代码段4</strong></div>
可以看到header就是一个chunk，以ResChunk_header结构开头来描述这个chunk。resources.arsc文件的header内容如下图中选中部分：
<p></p>
<p style="text-align: center;"><img alt="" src="images/android01304.jpg"><br></p>
<p style="text-align: center;"><strong>图3</strong></p>
<p>图中选中的部分就是header，可以看到类型是0x0002，对应类型是RES_TABLE_TYPE，headerSize是0x0c，整个chunk的大小也就是文件的大小是0x019584，package的数量是1个。</p>
<p><br></p>
<h3><a name="t6"></a>4. 全局字符串池</h3>
<p>紧接着是Global String Pool，全局字符串池，这也是Resources.arsc存在最重要的一个原因之一，就是把所有字符串放到这个池子里，大家复用这些字符串，可以很大的减小APK包的尺寸。从图1和图2可以看到后面还有两个字符串池，那么什么字符串会放到这个全局字符串池中呢？所有的资源文件的路径名，以及资源文件中所定义的资源的值，比如代码段1中的Cert和Hello world!都存在这里。</p>
<p>字符串池的结构体如下：</p>
<p></p>
<pre><code class="language-cpp hljs"><ol class="hljs-ln" style="width: 952px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResStringPool_header</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResChunk_header</span> <span class="hljs-title">header</span>;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-comment">// Number of strings in this pool (number of uint32_t indices that follow in the data).</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-keyword">uint32_t</span> stringCount;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-comment">// Number of style span arrays in the pool (number of uint32_t indices follow the string indices).</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-keyword">uint32_t</span> styleCount;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-comment">// Flags.</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-keyword">enum</span> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-comment">// If set, the string index is sorted by the string values (based on strcmp16()).</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          SORTED_FLAG = <span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">0</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-comment">// String pool is encoded in UTF-8</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          UTF8_FLAG = <span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">8</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-keyword">uint32_t</span> flags;&lt;span style=<span class="hljs-string">"white-space:pre"</span>&gt;	&lt;/span&gt;<span class="hljs-comment">//If flags is 0x0, string pool is encoded in UTF-16</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-comment">// Index from header of the string data.</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-keyword">uint32_t</span> stringsStart;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">// Index from header of the style data.</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint32_t</span> stylesStart;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">};</div></div></li></ol></code></pre>
<p></p>
<div style="text-align: center;"><strong>代码段5</strong></div>
对应的二进制内容如下图选中部分：
<p></p>
<p style="text-align: center;"><img alt="" src="images/android01305.jpg"><br></p>
<p style="text-align: center;"><strong>图4</strong></p>
<p>从图中可以看到类型是0x0001，对应代码段3中RES_STRING_POOL_TYPE，整个chunk的大小是0x919C，stringCount是0x03E1，styleCount是0，flags是0x0100即UTF8格式，stringsStart即字符串相对头部起始位置的偏移是0x0FA0。</p>
<p>从图2中可以看到紧接着header的是stringCount个字符串偏移数组，数组每一个元素记录着每个字符串的起始位置相对于stringsStart的偏移。字符串池中每个UTF8格式字符串都是以字符串结束符0x00结束的，UTF16是0x0000。</p>
<p>style偏移数组与string是一样的就不多说了，但这个style是干什么的现在我还不清楚<img alt="委屈" src="images/android01306.gif">，以后知道了再更新。</p>
<p><br></p>
<h3><a name="t7"></a>5. Package解析</h3>
<p>下面要介绍重头戏Package了。首先是一个package的header，结构体如下：</p>
<p></p>
<pre><code class="language-cpp hljs"><ol class="hljs-ln" style="width: 972px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResTable_package</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResChunk_header</span> <span class="hljs-title">header</span>;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//包的ID,等于Package Id,一般用户包的值Package Id为0X7F,系统资源包的Package Id为0X01。</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint32_t</span> id;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//包名称</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">char16_t</span> name[<span class="hljs-number">128</span>];</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//类型字符串资源池相对头部的偏移</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint32_t</span> typeStrings;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//最后一个导出的Public类型字符串在类型字符串资源池中的索引，目前这个值设置为类型字符串资源池的元素个数。</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint32_t</span> lastPublicType;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//资源项名称字符串相对头部的偏移</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint32_t</span> keyStrings;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//最后一个导出的Public资源项名称字符串在资源项名称字符串资源池中的索引，目前这个值设置为资源项名称字符串资源池的元素个数。</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint32_t</span> lastPublicKey;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> };</div></div></li></ol></code></pre>
<p></p>
<div style="text-align: center;"><strong>代码段6</strong></div>
图4中全局字符串池的起始位置是0xC，而整个chunk的大小是0x919C，那么package的起始位置就是两者相加得到0x91A8，对应二进制内容如下图选中部分：
<p></p>
<p style="text-align: center;"><img alt="" src="images/android01307.jpg"><br></p>
<p style="text-align: center;"><strong>图5</strong></p>
<p>从上图可以看到chunk类型是0x0200，对应代码段3中的RES_TABLE_PACKAGE_TYPE，id是0x7F（这与R.java中的每个资源id的最高字节是一样的），这个package的名字是com.example.cert，类型字符串池typeStrings相对于package header起始位置的偏移是0x011C，类型字符串的个数是0x0C，资源项名称字符串池keyStrings相对于package header起始位置的偏移是0x01C8，个数是0x01E1。</p>
<p><br></p>
<h5>5.1 类型字符串池和资源项名称字符串池</h5>
<p>对于类型字符串池（图2中的Type String Pool）和资源项名称字符串池（图2中的Key String Pool）的结构和内容我这里就不贴出来了，结构和全局字符串池是一样的。类型字符串池中存储的是所有类型相关的字符串，比如attr，drawable，layout这些；而资源项名称字符串池中存储的是应用所有资源文件中的资源项名称相关的字符串，比如代码段1中的app_name，hello_world，action_settings。</p>
<p><br></p>
<h5>5.2 类型规范数据块（Type Spec）</h5>
<p>类型规范数据块用来描述资源项的配置差异性。通过这个差异性描述，我们就可以知道每一个资源项的配置状况。知道了一个资源项的配置状况之后，Android资源管理框架在检测到设备的配置信息发生变化之后，就可以知道是否需要重新加载该资源项。类型规范数据块是按照类型来组织的，也就是说，每一种类型都对应有一个类型规范数据块。<br></p>
<p>上面是从参考文章里copy过来的，可能有些人不太了解这个Type Spec是什么东西，我个人的理解它实际上就是类型。说到这里需要提几句Android资源文件的配置问题，大家都知道Android设备众多，为了使得一个应用程序能够在运行时同时支持不同的大小和密度的屏幕，以及支持国际化，即支持不同的国家地区和语言，Android应用程序资源的组织方式有18个维度，每一个维度都代表一个配置信息，从而可以使得应用程序能够根据设备的当前配置信息来找到最匹配的资源来展现在UI上，从而提高用户体验。也就是说，每一个资源类，都会有一个配置列表，配置着这个资源类的不同维度的信息，那么Type
 Spec就是这个资源类的代表。比如前面看到的attr，drawable，string这种都是资源类，Type Spec就是描述这些的结构，前面说到过R.java中每个资源id的格式是0xpptteeee，里面那个次高字节的tt就是Type Spec的id，同时这个id值也是这个Type Spec的类型名称在Type String Pool类型字符串池中索引数组的索引值，根据id值就可以找到其名称。</p>
<p>下面是Type Spec的结构：</p>
<p></p>
<pre><code class="language-cpp hljs"><ol class="hljs-ln" style="width: 1316px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResTable_typeSpec</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResChunk_header</span> <span class="hljs-title">header</span>;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//标识资源的Type ID,Type ID是指资源的类型ID，从1开始。资源的类型有animator、anim、color、drawable、layout、menu、raw、string和xml等等若干种，每一种都会被赋予一个ID。</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint8_t</span> id;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//保留,始终为0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint8_t</span> res0;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//保留,始终为0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint16_t</span> res1;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//等于本类型的资源项个数,指名称相同的资源项的个数。</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint32_t</span> entryCount;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> };</div></div></li></ol></code></pre>
<p></p>
<div style="text-align: center;"><strong>代码段7</strong></div>
下图是其对应的二进制数据：
<p></p>
<p style="text-align: center;"><img alt="" src="images/android01308.jpg"><br></p>
<p style="text-align: center;"><strong>图6</strong></p>
<p>上图可以看出该chunk的类型是0x0202，这个Type Spec的id是1，entryCount是6E，在这个ResTable_typeSpec结构后面紧跟着entryCount个资源spec数组，entryCount指的是这个类型有多少资源项，在后面我们会讲到aapt解码resources.arsc，输出中每个Type Spec的资源项后面会有一个flags，它的值就是这个数组中对应的值，但是这个flag代表什么我还不清楚。</p>
<p><br></p>
<h5>5.3 Config List</h5>
<p>上面讲到每个Type Spec是对一个类型的描述，每个类型会有多个维度，那就是接下来的Config List了，这个Config List是由多个ResTable_type结构来描述的，每个ResTable_type描述的是一个维度，下面是这个结构体的定义：</p>
<p></p>
<pre><code class="language-cpp hljs"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResTable_type</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResChunk_header</span> <span class="hljs-title">header</span>;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">enum</span> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         NO_ENTRY = <span class="hljs-number">0xFFFFFFFF</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//标识资源的Type ID</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint8_t</span> id;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//保留,始终为0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint8_t</span> res0;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//保留,始终为0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint16_t</span> res1;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//等于本类型的资源项个数,指名称相同的资源项的个数。</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint32_t</span> entryCount;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//等于资源项数据块相对头部的偏移值。</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint32_t</span> entriesStart;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//指向一个ResTable_config,用来描述配置信息,地区,语言,分辨率等</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     ResTable_config config;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> };</div></div></li></ol></code></pre>
<p></p>
<div style="text-align: center;"><strong>代码段7</strong></div>
<div style="text-align: center;"><strong><br></strong></div>
其中的id与ResTable_typeSpec中的id值是一样的。其中的ResTable_config就是这个维度的具体描述了，如下：
<p></p>
<p></p>
<pre><code class="language-cpp hljs"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResTable_config</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-comment">// Number of bytes in this structure.</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-keyword">uint32_t</span> size;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-keyword">union</span> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-class"><span class="hljs-keyword">struct</span> {</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-comment">// Mobile country code (from SIM).  0 means "any".</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint16_t</span> mcc;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-comment">// Mobile network code (from SIM).  0 means "any".</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint16_t</span> mnc;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-keyword">uint32_t</span> imsi;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">       <span class="hljs-keyword">union</span> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-class"><span class="hljs-keyword">struct</span> {</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-comment">// \0\0 means "any".  Otherwise, en, fr, etc.</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">char</span> language[<span class="hljs-number">2</span>];</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-comment">// \0\0 means "any".  Otherwise, US, CA, etc.</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">char</span> country[<span class="hljs-number">2</span>];</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-keyword">uint32_t</span> locale;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-keyword">union</span> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-class"><span class="hljs-keyword">struct</span> {</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint8_t</span> orientation;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint8_t</span> touchscreen;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint16_t</span> density;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-keyword">uint32_t</span> screenType;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">  </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-keyword">union</span> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-class"><span class="hljs-keyword">struct</span> {</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint8_t</span> keyboard;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint8_t</span> navigation;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint8_t</span> inputFlags;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint8_t</span> inputPad0;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-keyword">uint32_t</span> input;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-keyword">union</span> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-class"><span class="hljs-keyword">struct</span> {</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint16_t</span> screenWidth;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint16_t</span> screenHeight;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-keyword">uint32_t</span> screenSize;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="54"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-keyword">union</span> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-class"><span class="hljs-keyword">struct</span> {</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint16_t</span> sdkVersion;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="57"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-comment">// For now minorVersion must always be 0!!!  Its meaning</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="58"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-comment">// is currently undefined.</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="59"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint16_t</span> minorVersion;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="60"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="61"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-keyword">uint32_t</span> version;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="62"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="63"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="64"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      <span class="hljs-keyword">union</span> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="65"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-class"><span class="hljs-keyword">struct</span> {</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="66"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint8_t</span> screenLayout;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="67"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint8_t</span> uiMode;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="68"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">              <span class="hljs-keyword">uint16_t</span> smallestScreenWidthDp;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="69"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="70"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">          <span class="hljs-keyword">uint32_t</span> screenConfig;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="71"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">      };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="72"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="73"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">union</span> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="74"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         <span class="hljs-class"><span class="hljs-keyword">struct</span> {</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="75"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">             <span class="hljs-keyword">uint16_t</span> screenWidthDp;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="76"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">             <span class="hljs-keyword">uint16_t</span> screenHeightDp;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="77"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="78"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         <span class="hljs-keyword">uint32_t</span> screenSizeDp;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="79"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="80"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">}</div></div></li></ol></code></pre>
<p></p>
<div style="text-align: center;"><strong>代码段8</strong></div>
下图是示例中ResTable_type的二进制内容：
<p></p>
<p style="text-align: center;"><img alt="" src="images/android01309.jpg"><br></p>
<p style="text-align: center;"><strong>图7</strong></p>
<p>上图可以看到这个chunk的类型是0x0201，id是1与上面的Type Spec是对应的，entryCount是0x6E与上面的Type Spec也是一样的，entriesStart是0x01F0表示entry列表相对于此头部起始位置的偏移，后面0x24表示ResTable_config的大小，后面其它的字节全是0说明配置信息全是any，也就是default默认的配置。</p>
<p><br></p>
<h5>5.4 Entries</h5>
<p>紧接着ResTable_type后面是entryCount个entry的索引数组，每个索引数组的值表示该entry相对于entriesStart的偏移。那么这个entry代表什么呢？就是一个资源项！R.java中每个id的结构是0xpptteeee，低位两个字节的eeee就是这个资源项在索引数组中的索引值。entry的数据结构定义如下：</p>
<p></p>
<pre><code class="language-cpp hljs"><ol class="hljs-ln" style="width: 750px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResTable_entry</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//表示资源项头部大小。</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint16_t</span> size;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">enum</span> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         <span class="hljs-comment">//如果flags此位为1,则ResTable_entry后跟随ResTable_map数组,为0则跟随一个Res_value。</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         FLAG_COMPLEX = <span class="hljs-number">0x0001</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         <span class="hljs-comment">//如果此位为1,这个一个被引用的资源项</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         FLAG_PUBLIC = <span class="hljs-number">0x0002</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//资源项标志位</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint16_t</span> flags;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//资源项名称在资源项名称字符串资源池的索引</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResStringPool_ref</span> <span class="hljs-title">key</span>;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> };</div></div></li></ol></code></pre>
<p></p>
<div style="text-align: center;"><strong>代码段9</strong></div>
上面结构中的key字段的值是这个资源项的名字在资源项字符串资源池的索引数组中的索引值，通过这个值就可以查到这个资源项的名称。另一个很重要的字段是flags，如果是0x0001位为0的话，那么这个结构后面跟一个ResTable_value；若该位为1的话，就表示这个结构是个ResTable_map_entry（继承自ResTable_entry），并且后面会跟一个或多个ResTable_map结构。这些结构的定义如下：
<p></p>
<p></p>
<pre><code class="language-cpp hljs"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResTable_map_entry</span> :</span> <span class="hljs-keyword">public</span> ResTable_entry</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//指向父ResTable_map_entry的资源ID，如果没有父ResTable_map_entry，则等于0。</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     ResTable_ref parent;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//等于后面ResTable_map的数量</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint32_t</span> count;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">ResTable_map</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//bag资源项ID</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     ResTable_ref name;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//bag资源项值</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     Res_value value;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Res_value</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//Res_value头部大小</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint16_t</span> size;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//保留,始终为0</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint8_t</span> res0;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">enum</span> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_NULL = <span class="hljs-number">0x00</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_REFERENCE = <span class="hljs-number">0x01</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_ATTRIBUTE = <span class="hljs-number">0x02</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_STRING = <span class="hljs-number">0x03</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_FLOAT = <span class="hljs-number">0x04</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_DIMENSION = <span class="hljs-number">0x05</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_FRACTION = <span class="hljs-number">0x06</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_FIRST_INT = <span class="hljs-number">0x10</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_INT_DEC = <span class="hljs-number">0x10</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_INT_HEX = <span class="hljs-number">0x11</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_INT_BOOLEAN = <span class="hljs-number">0x12</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_FIRST_COLOR_INT = <span class="hljs-number">0x1c</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_INT_COLOR_ARGB8 = <span class="hljs-number">0x1c</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_INT_COLOR_ARGB8 = <span class="hljs-number">0x1c</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_INT_COLOR_RGB8 = <span class="hljs-number">0x1d</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_INT_COLOR_ARGB4 = <span class="hljs-number">0x1e</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_INT_COLOR_RGB4 = <span class="hljs-number">0x1f</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_LAST_COLOR_INT = <span class="hljs-number">0x1f</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         TYPE_LAST_INT = <span class="hljs-number">0x1f</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//数据的类型,可以从上面的枚举类型中获取</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint8_t</span> dataType;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-comment">//数据对应的索引</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">     <span class="hljs-keyword">uint32_t</span> data;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> };</div></div></li></ol></code></pre>
<p></p>
<div style="text-align: center;"><strong>代码段10</strong></div>
<p></p>
<p><br></p>
ResTable_map_entry结构后面跟多少个ResTable_map由其结构中的count字段来决定。
<p>下面看示例中对应ResTable_entry的二进制代码：</p>
<p style="text-align: center;"><img alt="" src="images/android01310.jpg"><br></p>
<p style="text-align: center;"><strong>图8</strong></p>
<p>可以看到size是0x10，flags是0x0001，也就是说它是一个ResTable_map_entry结构而不是ResTable_entry，key是0表示其名字在Key String Pool的索引数组中的0号元素，然后看到count是1，那么后面跟一个ResTable_map，其中name的值是0x01000000，具体含义查看系统源码文件中该结构的定义，这里就不多说了，后面ResTable_value的size是0x08，dataType是0x10即TYPE_FIRST_INT即后面data数据是int类型。</p>
<p>到这里整个文件的结构解析大概就介绍完了，下面我们会从另一个角度来介绍，我们根据资源的id值来找resources.arsc中的数据。</p>
<p><br></p>
<h1><a name="t8"></a>四、根据资源的id值定位resources.arsc中的数据</h1>
<p>我们在用Eclipse或者Android Studio来写Android应用的时候，IDE直接帮我们生成了R.java文件，我们可以在这里面看到某个资源的id值，其实IDE也是使用aapt来编译资源文件生成的R.java。如果我们拿到一个APK怎么看资源的id呢？当然也是用aapt来反编译就好了，命令如下：</p>
<p></p>
<pre><code class="language-cpp hljs">aapt d resources XXX.apk</code></pre>对应我们之前的示例输出如下：
<p></p>
<p></p>
<pre><code class="language-html hljs xml"><ol class="hljs-ln" style="width: 1137px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">Package Groups (1)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> Package Group 0 id=127 packageCount=1 name=com.example.cert</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">   Package 0 id=127 name=com.example.cert typeCount=12</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                  ......</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    type 9 configCount=56 entryCount=16</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">       spec resource 0x7f0a000b com.example.cert:string/abc_shareactionprovider_share_with_application: flags=0x00000004</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">       spec resource 0x7f0a000c com.example.cert:string/abc_shareactionprovider_share_with: flags=0x00000004</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">       spec resource 0x7f0a000d com.example.cert:string/app_name: flags=0x00000000</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">       spec resource 0x7f0a000e com.example.cert:string/hello_world: flags=0x00000000</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">       spec resource 0x7f0a000f com.example.cert:string/action_settings: flags=0x00000000</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">       config (default):</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         resource 0x7f0a000b com.example.cert:string/abc_shareactionprovider_share_with_application: t=0x03 d=0x00000162 (s=0x0008 r=0x00)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         resource 0x7f0a000c com.example.cert:string/abc_shareactionprovider_share_with: t=0x03 d=0x0000015b (s=0x0008 r=0x00)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         resource 0x7f0a000d com.example.cert:string/app_name: t=0x03 d=0x00000154 (s=0x0008 r=0x00)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         resource 0x7f0a000e com.example.cert:string/hello_world: t=0x03 d=0x00000152 (s=0x0008 r=0x00)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         resource 0x7f0a000f com.example.cert:string/action_settings: t=0x03 d=0x00000155 (s=0x0008 r=0x00)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">       config ca:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         resource 0x7f0a000b com.example.cert:string/abc_shareactionprovider_share_with_application: t=0x03 d=0x00000197 (s=0x0008 r=0x00)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         resource 0x7f0a000c com.example.cert:string/abc_shareactionprovider_share_with: t=0x03 d=0x0000019f (s=0x0008 r=0x00)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">       config da:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         resource 0x7f0a000b com.example.cert:string/abc_shareactionprovider_share_with_application: t=0x03 d=0x000001bb (s=0x0008 r=0x00)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         resource 0x7f0a000c com.example.cert:string/abc_shareactionprovider_share_with: t=0x03 d=0x000001bc (s=0x0008 r=0x00)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">       config fa:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         resource 0x7f0a000b com.example.cert:string/abc_shareactionprovider_share_with_application: t=0x03 d=0x000001fe (s=0x0008 r=0x00)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         resource 0x7f0a000c com.example.cert:string/abc_shareactionprovider_share_with: t=0x03 d=0x000001fb (s=0x0008 r=0x00)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">       config ja:</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         resource 0x7f0a000b com.example.cert:string/abc_shareactionprovider_share_with_application: t=0x03 d=0x00000287 (s=0x0008 r=0x00)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">         resource 0x7f0a000c com.example.cert:string/abc_shareactionprovider_share_with: t=0x03 d=0x00000280 (s=0x0008 r=0x00)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">           ......</div></div></li></ol></code></pre>
<p></p>
<p></p>
<div style="text-align: center;"><strong>代码段11</strong></div>
<p></p>
<p><br></p>
从上面的输出可以看到，只有一个package，id是127即0x7F，name是com.example.cert，与之前看到的一样，typeCount有12个即一共有12个ResTable_typeSpec结构体。字符串string类型的资源类型id是0x0A（上面那个type 9是因为aapt工具从0开始数的，而ResTable_typeSpec里的id是从1开始数的）。<br><p>后面我们看到spec resource的字样，这个spec就和我们前面介绍的Type Spec是一样的了，这几行就代表它是类型规范数据块了，然后后面是Config List，有很多config，每个config是一个维度，里面对每个资源项都有自己的配置信息，aapt输出config的格式如下：</p>
<p></p>
<pre><code class="language-html hljs xml"><ol class="hljs-ln" style="width: 798px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">resource <span class="hljs-tag">&lt;<span class="hljs-name">Resource</span> <span class="hljs-attr">ID</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">Package</span> <span class="hljs-attr">Name</span>&gt;</span>:<span class="hljs-tag">&lt;<span class="hljs-name">Type</span>&gt;</span>/<span class="hljs-tag">&lt;<span class="hljs-name">Name</span>&gt;</span>: t=<span class="hljs-tag">&lt;<span class="hljs-name">DataType</span>&gt;</span> d=<span class="hljs-tag">&lt;<span class="hljs-name">Data</span>&gt;</span> (s=<span class="hljs-tag">&lt;<span class="hljs-name">Size</span>&gt;</span> r=<span class="hljs-tag">&lt;<span class="hljs-name">Res0</span>&gt;</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">Resource ID R.java中的资源ID </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">Package Name 资源所在的的包 </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">Type 资源的类型 </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">Name 资源名称 </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">DataType 数据类型,按照以下枚举类型取值 </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">Data 资源的值,根据dataType进行解释 </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">Size 一直为0x0008 </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">Res0 固定为0x00</div></div></li></ol></code></pre>
<p></p>
<p><br></p>
因为hellow_world和app_name这些字符串是我自己demo用的，没有配置多维度，所以只有在config default里面才有，其它维度没有。下面我们以hello_world为例，来定位它在resources.arsc文件中的位置。hello_world的id值是0x7F0A000E，分解以后package id是0x7F，Type Spec的id是0x0A，entry id是0x0E。
<p>这里面因为只有一个Package，所以就不需要去定位Package了。</p>
<p>从图2中我们没找到对Type Spec有索引数组，所以我们需要去一个一个的找Type Spec，从第一个ResTable_typeSpec开始，在ResChunk_header中有整个chunk的大小，一个一个的将收地址加上这个大小就可以了，直到我们找到chunk的类型是0x0202，id是0x0A的ResTable_typeSpec结构体就可以了，下图是示例对应的二进制数据：</p>
<p></p>
<div style="text-align: center;"><img alt="" src="images/android01311.jpg"><br></div>
<div style="text-align: center;"><strong>图9</strong></div>
可以看到ResTable_typeSpec后面是0x00000004，这个就是代码段11中每行后面的flags，具体含义还不清楚。entryCount是0x10，有16个string类型的资源项。然后下面我们去找第0x0E个ResTable_entry结构体，当然不一定Config List中每个维度都会有，但是default默认的config中肯定是有的。首先找到第一个ResTable_type结构体，方法就是ResTable_typeSpec的起始地址0x11C7C加上这个chunk的大小0x50，位置在0x11CCC，数据如下图：
<p></p>
<p style="text-align: center;"><img alt="" src="images/android01312.jpg"><br></p>
<p></p>
<div style="text-align: center;"><strong>图10</strong></div>
可以看到entryCount是0x10，entriesStart是0x78，将起始地址与这个偏移相加就可以得到ResTable_entry的开始地址是0x11D44。
<p></p>
<p>hello_world的entry id是0x0E，那么我们从紧接着ResTable_type的entry数组中找第0x0E个元素，它的值是0xE0，加上ResTable_entry的起始地址，得到我们要找的hello_world对应的ResTable_entry的地址是0x11E24，对应内容如下图：</p>
<p style="text-align: center;"><img alt="" src="images/android01313.jpg"><br></p>
<p style="text-align: center;"><strong>图11</strong></p>
<p>可以看到size是0x08，flags是0，也就是说它是ResTable_entry结构，后面跟一个ResTable_value结构，再看key的值是0x0152，即资源项名称在Key String Pool的字符串偏移数组的索引是第0x0152个，找到以后如下图，具体方法我就不啰嗦了，就是偏移数组收地址加上那个0x0152的时候别忘了这个0x0152要先乘以4，因为数组元素是4字节大小嘛。</p>
<p style="text-align: center;"><img alt="" src="images/android01314.jpg"><br></p>
<p style="text-align: center;"><strong>图12</strong></p>
<p>然后再看图11中ResTable_value的内容，size是0x08，type是0x03对应TYPE_STRING类型，data值是0x0152，这个就是<strong>全局字符串池</strong>的字符串偏移数组的索引了，找到以后如下图：</p>
<p style="text-align: center;"><img alt="" src="images/android01315.jpg"><img alt="" src="images/android01316.jpg"><br></p>
<p style="text-align: center;"><strong>图13</strong></p>
<p>可以看到对应的字符串值就找到了！！</p>
<p><br></p>
<h1><a name="t9"></a>五、总结</h1>
<p>啰嗦了这么多，好累。。。不过大概搞明白了，算是自己的笔记吧，同时也分享给大家，我相信这个够详细了！只不过里面很多16进制的地址，还有乱七八糟的数据结构，看着肯定头大，所以不能光看，还是要动手去做，这样才能明白的透彻，否则肯定看不下来。resources.arsc文件的格式还是很简单的，说白了就是一个索引文件。稍后我会写一个解析这个文件的C++程序练手，加深印象，写完以后我会放到github上并把链接放出来。</p>
<p><br></p>
<p><br></p>
<p><br></p>
<p>参考文章：</p>
<p>1.&nbsp;http://www.freebuf.com/articles/terminal/75944.html</p>
<p>2.&nbsp;http://blog.csdn.net/jiangwei0910410003/article/details/50628894</p>
<p>3.&nbsp;http://blog.csdn.net/luoshengyang/article/details/8744683</p>
<p>4.&nbsp;http://blog.csdn.net/mldxs/article/details/44956911</p>
                                    </div>
                    </div>


</div>


</body></html>