<html><head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Android之辅助服务下篇————AccessibilityServic源码分析 - 冰炭不投day的博客 - CSDN博客</title>
  <link href="images/style.css" rel="stylesheet">
</head>

<body class="stackedit"><div class="stackedit__html">

<div class="article_content clearfix" id="article_content" style="overflow: hidden;">
                                                <div class="article-copyright">
                <span class="creativecommons">
                <a href="http://creativecommons.org/licenses/by-sa/4.0/" rel="license">
                    </a>
            <span>
                版权声明：本文为博主原创文章，遵循<a href="http://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接和本声明。            </span>
               <div class="article-source-link2222">
                    本文链接：<a href="https://blog.csdn.net/qq_38499859/article/details/93770643">https://blog.csdn.net/qq_38499859/article/details/93770643</a>
                </div>
            </span>
                    </div>
                                                    <!--一个博主专栏付费入口-->
             
             <!--一个博主专栏付费入口结束-->
            <link href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-d284373521.css" rel="stylesheet">
                                        <div class="markdown_views prism-atom-one-dark" id="content_views">
                    <!-- flowchart 箭头图标 勿删 -->
                    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                        <path id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);" stroke-linecap="round" d="M 5 0 L 0 2.5 L 5 5 Z" />
                    </svg>
                                            <h1><a name="t0"></a><a id="AndroidAccessibilityServic_0"></a>Android之辅助服务下篇————AccessibilityServic源码分析</h1>
<p></p><div class="toc"><h3><a name="t1"></a>文章目录</h3><ul><li><a href="#AndroidAccessibilityServic_0" target="_self" rel="nofollow">Android之辅助服务下篇————AccessibilityServic源码分析</a></li><ul><ul><li><a href="#_2" target="_self" rel="nofollow">一.前言</a></li><li><a href="#AccessibilityEvent_16" target="_self" rel="nofollow">二.接收AccessibilityEvent事件</a></li><ul><li><a href="#1View_17" target="_self" rel="nofollow">1.View对点击事件的分发</a></li><li><a href="#2AccessibilityManager_232" target="_self" rel="nofollow">2.AccessibilityManager</a></li><li><a href="#3AccessibilityService_513" target="_self" rel="nofollow">3.AccessibilityService</a></li></ul><li><a href="#findAccessibilityNodeInfosByText_779" target="_self" rel="nofollow">三.findAccessibilityNodeInfosByText</a></li><ul><li><a href="#1AccessibilityNodeInfo_780" target="_self" rel="nofollow">1.AccessibilityNodeInfo</a></li><li><a href="#2AccessibilityManagerService_835" target="_self" rel="nofollow">2.AccessibilityManagerService</a></li><li><a href="#3ViewRootImpl_904" target="_self" rel="nofollow">3.ViewRootImpl</a></li><li><a href="#4_1173" target="_self" rel="nofollow">4.小结</a></li></ul><li><a href="#performAction_1176" target="_self" rel="nofollow">四.performAction</a></li><ul><li><a href="#1AccessibilityInteractionController_1179" target="_self" rel="nofollow">1.AccessibilityInteractionController</a></li><li><a href="#2View_1298" target="_self" rel="nofollow">2.View</a></li></ul></ul></ul></ul></div><p></p>
<h3><a name="t2"></a><a id="_2"></a>一.前言</h3>
<p>在上一篇博客中，我介绍了辅助服务的大致使用。这一篇我们来看看AccessibilityServic的原理。</p>
<p>通过上篇，我们知道将AccessibilityServic配置完成后。之后的使用可以分为下面三个步骤</p>
<ul>
<li>onAccessibilityEvent接收事件(屏幕变化，点击事件)</li>
<li>通过控件文字或者id在当前屏幕里寻找对应的控件</li>
<li>调用控件的performAction进行相应的操作</li>
</ul>
<p>所以我们源码分析也是着重于上面的三个流程</p>
<ul>
<li>点击事件如何分发到onAccessibilityEvent</li>
<li>findAccessibilityNodeInfosByText如果通过控件文字找到对应的控件</li>
<li>performAction如何模拟操作控件</li>
</ul>
<h3><a name="t3"></a><a id="AccessibilityEvent_16"></a>二.接收AccessibilityEvent事件</h3>
<h4><a id="1View_17"></a>1.View对点击事件的分发</h4>
<p>我们以View的点击事件发送到AccessibilityEvent为例。<br>
从View的事件分发onTouchEvent为起点</p>
<blockquote>
<p>所在类：View.java</p>
</blockquote>
<p>onTouchEvent</p>
<pre class="prettyprint"><code class="prism language-java has-numbering"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span>MotionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>clickable <span class="token operator">||</span> <span class="token punctuation">(</span>viewFlags <span class="token operator">&amp;</span> TOOLTIP<span class="token punctuation">)</span> <span class="token operator">==</span> TOOLTIP<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">case</span> MotionEvent<span class="token punctuation">.</span>ACTION_UP<span class="token operator">:</span>
                    mPrivateFlags3 <span class="token operator">&amp;=</span> <span class="token operator">~</span>PFLAG3_FINGER_DOWN<span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>viewFlags <span class="token operator">&amp;</span> TOOLTIP<span class="token punctuation">)</span> <span class="token operator">==</span> TOOLTIP<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">handleTooltipUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>clickable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">removeTapCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">removeLongPressCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        mInContextButtonPress <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                        mHasPerformedLongPress <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                        mIgnoreNextUpEvent <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">boolean</span> prepressed <span class="token operator">=</span> <span class="token punctuation">(</span>mPrivateFlags <span class="token operator">&amp;</span> PFLAG_PREPRESSED<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mPrivateFlags <span class="token operator">&amp;</span> PFLAG_PRESSED<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">||</span> prepressed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// take focus if we don't have it already and we should in</span>
                        <span class="token comment">// touch mode.</span>
                        <span class="token keyword">boolean</span> focusTaken <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFocusable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isFocusableInTouchMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isFocused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            focusTaken <span class="token operator">=</span> <span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>

                        <span class="token keyword">if</span> <span class="token punctuation">(</span>prepressed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// The button is being released before we actually</span>
                            <span class="token comment">// showed it as pressed.  Make it show the pressed</span>
                            <span class="token comment">// state now (before scheduling the click) to ensure</span>
                            <span class="token comment">// the user sees it.</span>
                            <span class="token function">setPressed</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>

                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mHasPerformedLongPress <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mIgnoreNextUpEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// This is a tap, so remove the longpress check</span>
                            <span class="token function">removeLongPressCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                            <span class="token comment">// Only perform take click actions if we were in the pressed state</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>focusTaken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token comment">// Use a Runnable and post this rather than calling</span>
                                <span class="token comment">// performClick directly. This lets other visual state</span>
                                <span class="token comment">// of the view update before click actions start.</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span>mPerformClick <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    mPerformClick <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PerformClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token punctuation">}</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">post</span><span class="token punctuation">(</span>mPerformClick<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    <span class="token function">performClickInternal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token punctuation">}</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>

                        <span class="token keyword">if</span> <span class="token punctuation">(</span>mUnsetPressedState <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            mUnsetPressedState <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UnsetPressedState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>

                        <span class="token keyword">if</span> <span class="token punctuation">(</span>prepressed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token function">postDelayed</span><span class="token punctuation">(</span>mUnsetPressedState<span class="token punctuation">,</span>
                                    ViewConfiguration<span class="token punctuation">.</span><span class="token function">getPressedStateDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">post</span><span class="token punctuation">(</span>mUnsetPressedState<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// If the post failed, unpress right now</span>
               <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li><li style="color: rgb(153, 153, 153);">52</li><li style="color: rgb(153, 153, 153);">53</li><li style="color: rgb(153, 153, 153);">54</li><li style="color: rgb(153, 153, 153);">55</li><li style="color: rgb(153, 153, 153);">56</li><li style="color: rgb(153, 153, 153);">57</li><li style="color: rgb(153, 153, 153);">58</li><li style="color: rgb(153, 153, 153);">59</li><li style="color: rgb(153, 153, 153);">60</li><li style="color: rgb(153, 153, 153);">61</li><li style="color: rgb(153, 153, 153);">62</li><li style="color: rgb(153, 153, 153);">63</li><li style="color: rgb(153, 153, 153);">64</li><li style="color: rgb(153, 153, 153);">65</li><li style="color: rgb(153, 153, 153);">66</li></ul></pre>
<p>点击事件是在  performClickInternal()中，我们继续追踪</p>
<blockquote>
<p>所在类：View.java</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering">    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">performClickInternal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Must notify autofill manager before performing the click actions to avoid scenarios where</span>
        <span class="token comment">// the app has a click listener that changes the state of views the autofill service might</span>
        <span class="token comment">// be interested on.</span>
        <span class="token function">notifyAutofillManagerOnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token function">performClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">performClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// We still need to call this method to handle the cases where performClick() was called</span>
        <span class="token comment">// externally, instead of through performClickInternal()</span>
        <span class="token function">notifyAutofillManagerOnClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token keyword">boolean</span> result<span class="token punctuation">;</span>
        <span class="token keyword">final</span> ListenerInfo li <span class="token operator">=</span> mListenerInfo<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>li <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> li<span class="token punctuation">.</span>mOnClickListener <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">playSoundEffect</span><span class="token punctuation">(</span>SoundEffectConstants<span class="token punctuation">.</span>CLICK<span class="token punctuation">)</span><span class="token punctuation">;</span>
            li<span class="token punctuation">.</span>mOnClickListener<span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            result <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">sendAccessibilityEvent</span><span class="token punctuation">(</span>AccessibilityEvent<span class="token punctuation">.</span>TYPE_VIEW_CLICKED<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">notifyEnterOrExitForAutoFillIfNeeded</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li></ul></pre>
<p>很明显在sendAccessibilityEvent中将点击事件进行了传递</p>
<blockquote>
<p>所在类:View.java</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendAccessibilityEvent</span><span class="token punctuation">(</span><span class="token keyword">int</span> eventType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mAccessibilityDelegate <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mAccessibilityDelegate<span class="token punctuation">.</span><span class="token function">sendAccessibilityEvent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> eventType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">sendAccessibilityEventInternal</span><span class="token punctuation">(</span>eventType<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//见下</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendAccessibilityEventInternal</span><span class="token punctuation">(</span><span class="token keyword">int</span> eventType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>AccessibilityManager<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>mContext<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">sendAccessibilityEventUnchecked</span><span class="token punctuation">(</span>AccessibilityEvent<span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span>eventType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//见下</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendAccessibilityEventUnchecked</span><span class="token punctuation">(</span>AccessibilityEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mAccessibilityDelegate <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mAccessibilityDelegate<span class="token punctuation">.</span><span class="token function">sendAccessibilityEventUnchecked</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">sendAccessibilityEventUncheckedInternal</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//见下</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendAccessibilityEventUncheckedInternal</span><span class="token punctuation">(</span>AccessibilityEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Panes disappearing are relevant even if though the view is no longer visible.</span>
        <span class="token keyword">boolean</span> isWindowStateChanged <span class="token operator">=</span>
                <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getEventType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> AccessibilityEvent<span class="token punctuation">.</span>TYPE_WINDOW_STATE_CHANGED<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> isWindowDisappearedEvent <span class="token operator">=</span> isWindowStateChanged <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getContentChangeTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">&amp;</span> AccessibilityEvent<span class="token punctuation">.</span>CONTENT_CHANGE_TYPE_PANE_DISAPPEARED<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isShown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isWindowDisappearedEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">onInitializeAccessibilityEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Only a subset of accessibility events populates text content.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getEventType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> POPULATING_ACCESSIBILITY_EVENT_TYPES<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">dispatchPopulateAccessibilityEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// In the beginning we called #isShown(), so we know that getParent() is not null.</span>
        ViewParent parent <span class="token operator">=</span> <span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>parent <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">requestSendAccessibilityEvent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//重点</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li></ul></pre>
<p>在这里我们看到直接调用了getParent().requestSendAccessibilityEvent(this, event);，对这个事件进行分发。即调用了View的父类进行实现，这里其实有点像双亲委托模型。我们都知道View的最终父类是ViewRootImpl，我们直接ViewRootImpl中去看requestSendAccessibilityEvent的实现</p>
<blockquote>
<p>所在类：ViewRootImpl</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering"> <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">requestSendAccessibilityEvent</span><span class="token punctuation">(</span>View child<span class="token punctuation">,</span> AccessibilityEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mView <span class="token operator">==</span> null <span class="token operator">||</span> mStopped <span class="token operator">||</span> mPausedForTransition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Immediately flush pending content changed event (if any) to preserve event order</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getEventType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> AccessibilityEvent<span class="token punctuation">.</span>TYPE_WINDOW_CONTENT_CHANGED
                <span class="token operator">&amp;&amp;</span> mSendWindowContentChangedAccessibilityEvent <span class="token operator">!=</span> null
                <span class="token operator">&amp;&amp;</span> mSendWindowContentChangedAccessibilityEvent<span class="token punctuation">.</span>mSource <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mSendWindowContentChangedAccessibilityEvent<span class="token punctuation">.</span><span class="token function">removeCallbacksAndRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Intercept accessibility focus events fired by virtual nodes to keep</span>
        <span class="token comment">// track of accessibility focus position in such nodes.</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> eventType <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getEventType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>eventType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> AccessibilityEvent<span class="token punctuation">.</span>TYPE_VIEW_ACCESSIBILITY_FOCUSED<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> <span class="token keyword">long</span> sourceNodeId <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getSourceNodeId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">final</span> <span class="token keyword">int</span> accessibilityViewId <span class="token operator">=</span> AccessibilityNodeInfo<span class="token punctuation">.</span><span class="token function">getAccessibilityViewId</span><span class="token punctuation">(</span>
                        sourceNodeId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                View source <span class="token operator">=</span> mView<span class="token punctuation">.</span><span class="token function">findViewByAccessibilityId</span><span class="token punctuation">(</span>accessibilityViewId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>source <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    AccessibilityNodeProvider provider <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">getAccessibilityNodeProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>provider <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">final</span> <span class="token keyword">int</span> virtualNodeId <span class="token operator">=</span> AccessibilityNodeInfo<span class="token punctuation">.</span><span class="token function">getVirtualDescendantId</span><span class="token punctuation">(</span>
                                sourceNodeId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">final</span> AccessibilityNodeInfo node<span class="token punctuation">;</span>
                        node <span class="token operator">=</span> provider<span class="token punctuation">.</span><span class="token function">createAccessibilityNodeInfo</span><span class="token punctuation">(</span>virtualNodeId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">setAccessibilityFocus</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> AccessibilityEvent<span class="token punctuation">.</span>TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> <span class="token keyword">long</span> sourceNodeId <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getSourceNodeId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">final</span> <span class="token keyword">int</span> accessibilityViewId <span class="token operator">=</span> AccessibilityNodeInfo<span class="token punctuation">.</span><span class="token function">getAccessibilityViewId</span><span class="token punctuation">(</span>
                        sourceNodeId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                View source <span class="token operator">=</span> mView<span class="token punctuation">.</span><span class="token function">findViewByAccessibilityId</span><span class="token punctuation">(</span>accessibilityViewId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>source <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    AccessibilityNodeProvider provider <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">getAccessibilityNodeProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>provider <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">setAccessibilityFocus</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>


            <span class="token keyword">case</span> AccessibilityEvent<span class="token punctuation">.</span>TYPE_WINDOW_CONTENT_CHANGED<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token function">handleWindowContentChangedEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        mAccessibilityManager<span class="token punctuation">.</span><span class="token function">sendAccessibilityEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//重点</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li><li style="color: rgb(153, 153, 153);">52</li><li style="color: rgb(153, 153, 153);">53</li><li style="color: rgb(153, 153, 153);">54</li></ul></pre>
<p>最后在requestSendAccessibilityEvent里面调用mAccessibilityManager.sendAccessibilityEvent继续将点击事件进行分发。</p>
<p>小结:<br>
<img alt="在这里插入图片描述" src="images/android02001.jpg"></p>
<h4><a id="2AccessibilityManager_232"></a>2.AccessibilityManager</h4>
<p>从AS跳转到AccessibilityManager.sendAccessibilityEvent，发现sendAccessibilityEvent是一个空实现，不应该啊，然后我就去打开Source Insight 4.0，在里面阅读AccessibilityManager的相关源码.<br>
源码版本:<strong>Android8.1</strong></p>
<blockquote>
<p>目录：frameworks\base\core\java\android\view\accessibility\AccessibilityManager.java</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendAccessibilityEvent</span><span class="token punctuation">(</span>AccessibilityEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> IAccessibilityManager service<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> userId<span class="token punctuation">;</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            service <span class="token operator">=</span> <span class="token function">getServiceLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//关键代码</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>service <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mIsEnabled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Looper myLooper <span class="token operator">=</span> Looper<span class="token punctuation">.</span><span class="token function">myLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>myLooper <span class="token operator">==</span> Looper<span class="token punctuation">.</span><span class="token function">getMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>
                            <span class="token string">"Accessibility off. Did you forget to check that?"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// If we're not running on the thread with the main looper, it's possible for</span>
                    <span class="token comment">// the state of accessibility to change between checking isEnabled and</span>
                    <span class="token comment">// calling this method. So just log the error rather than throwing the</span>
                    <span class="token comment">// exception.</span>
                    Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>LOG_TAG<span class="token punctuation">,</span> <span class="token string">"AccessibilityEvent sent with accessibility disabled"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getEventType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> mRelevantEventTypes<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span>LOG_TAG<span class="token punctuation">,</span> <span class="token string">"Not dispatching irrelevant event: "</span> <span class="token operator">+</span> event
                            <span class="token operator">+</span> <span class="token string">" that is not among "</span>
                            <span class="token operator">+</span> AccessibilityEvent<span class="token punctuation">.</span><span class="token function">eventTypeToString</span><span class="token punctuation">(</span>mRelevantEventTypes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            userId <span class="token operator">=</span> mUserId<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            event<span class="token punctuation">.</span><span class="token function">setEventTime</span><span class="token punctuation">(</span>SystemClock<span class="token punctuation">.</span><span class="token function">uptimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// it is possible that this manager is in the same process as the service but</span>
            <span class="token comment">// client using it is called through Binder from another process. Example: MMS</span>
            <span class="token comment">// app adds a SMS notification and the NotificationManagerService calls this method</span>
            <span class="token keyword">long</span> identityToken <span class="token operator">=</span> Binder<span class="token punctuation">.</span><span class="token function">clearCallingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            service<span class="token punctuation">.</span><span class="token function">sendAccessibilityEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//关键代码</span>
            Binder<span class="token punctuation">.</span><span class="token function">restoreCallingIdentity</span><span class="token punctuation">(</span>identityToken<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Log<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span>LOG_TAG<span class="token punctuation">,</span> event <span class="token operator">+</span> <span class="token string">" sent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> re<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>LOG_TAG<span class="token punctuation">,</span> <span class="token string">"Error during sending "</span> <span class="token operator">+</span> event <span class="token operator">+</span> <span class="token string">" "</span><span class="token punctuation">,</span> re<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            event<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li></ul></pre>
<p>从上的代码可以看出通过 service.sendAccessibilityEvent，将AccessibilityEvent进行下一步传递。那么我们来分析一下，service是什么类型的对象。</p>
<p>Service的来源</p>
<blockquote>
<p>目录:frameworks\base\core\java\android\view\accessibility\AccessibilityManager.java</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering">    <span class="token keyword">private</span> IAccessibilityManager <span class="token function">getServiceLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mService <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">tryConnectToServiceLocked</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//往下追踪</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> mService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">tryConnectToServiceLocked</span><span class="token punctuation">(</span>IAccessibilityManager service<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>service <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            IBinder iBinder <span class="token operator">=</span> ServiceManager<span class="token punctuation">.</span><span class="token function">getService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>ACCESSIBILITY_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>iBinder <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            service <span class="token operator">=</span> IAccessibilityManager<span class="token punctuation">.</span>Stub<span class="token punctuation">.</span><span class="token function">asInterface</span><span class="token punctuation">(</span>iBinder<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">long</span> userStateAndRelevantEvents <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">addClient</span><span class="token punctuation">(</span>mClient<span class="token punctuation">,</span> mUserId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">setStateLocked</span><span class="token punctuation">(</span>IntPair<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span>userStateAndRelevantEvents<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mRelevantEventTypes <span class="token operator">=</span> IntPair<span class="token punctuation">.</span><span class="token function">second</span><span class="token punctuation">(</span>userStateAndRelevantEvents<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mService <span class="token operator">=</span> service<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> re<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>LOG_TAG<span class="token punctuation">,</span> <span class="token string">"AccessibilityManagerService is dead"</span><span class="token punctuation">,</span> re<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String ACCESSIBILITY_SERVICE <span class="token operator">=</span> <span class="token string">"accessibility"</span><span class="token punctuation">;</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li></ul></pre>
<p>追踪发现 mService其实是一个binder代理类，代表了accessibility的服务。</p>
<p>所以我们直接看AccessibilityManagerService中sendAccessibilityEvent的实现</p>
<blockquote>
<p>目录: frameworks\base\services\accessibility\java\com\android\server\accessibility\AccessibilityManagerService.java</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering"><span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendAccessibilityEvent</span><span class="token punctuation">(</span>AccessibilityEvent event<span class="token punctuation">,</span> <span class="token keyword">int</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> dispatchEvent <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>dispatchEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Make sure clients receiving this event will be able to get the</span>
            <span class="token comment">// current state of the windows as the window manager may be delaying</span>
            <span class="token comment">// the computation for performance reasons.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getEventType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> AccessibilityEvent<span class="token punctuation">.</span>TYPE_WINDOW_STATE_CHANGED
                    <span class="token operator">&amp;&amp;</span> mWindowsForAccessibilityCallback <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                WindowManagerInternal wm <span class="token operator">=</span> LocalServices<span class="token punctuation">.</span><span class="token function">getService</span><span class="token punctuation">(</span>WindowManagerInternal<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                wm<span class="token punctuation">.</span><span class="token function">computeWindowsForAccessibility</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">notifyAccessibilityServicesDelayedLocked</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//重点代码</span>
                <span class="token function">notifyAccessibilityServicesDelayedLocked</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>OWN_PROCESS_ID <span class="token operator">!=</span> Binder<span class="token punctuation">.</span><span class="token function">getCallingPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            event<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">notifyAccessibilityServicesDelayedLocked</span><span class="token punctuation">(</span>AccessibilityEvent event<span class="token punctuation">,</span>
            <span class="token keyword">boolean</span> isDefault<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            UserState state <span class="token operator">=</span> <span class="token function">getCurrentUserStateLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> count <span class="token operator">=</span> state<span class="token punctuation">.</span>mBoundServices<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//遍历</span>
                Service service <span class="token operator">=</span> state<span class="token punctuation">.</span>mBoundServices<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>mIsDefault <span class="token operator">==</span> isDefault<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">doesServiceWantEventLocked</span><span class="token punctuation">(</span>service<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        service<span class="token punctuation">.</span><span class="token function">notifyAccessibilityEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>service<span class="token punctuation">.</span>mUsesAccessibilityCache
                            <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>AccessibilityCache<span class="token punctuation">.</span>CACHE_CRITICAL_EVENTS_MASK
                                <span class="token operator">&amp;</span> event<span class="token punctuation">.</span><span class="token function">getEventType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        service<span class="token punctuation">.</span><span class="token function">notifyAccessibilityEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IndexOutOfBoundsException</span> oobe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// An out of bounds exception can happen if services are going away</span>
            <span class="token comment">// as the for loop is running. If that happens, just bail because</span>
            <span class="token comment">// there are no more services to notify.</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li></ul></pre>
<p>在notifyAccessibilityServicesDelayedLocked方法中，对所有存储在mBoundServices的Service进行遍历，并调用Service.notifyAccessibilityEvent。这里的Service是AccessibilityManagerService中的一个内部类。<br>
先看看Service的定义</p>
<pre class="prettyprint"><code class="prism language-java has-numbering"> <span class="token keyword">class</span> <span class="token class-name">Service</span> <span class="token keyword">extends</span> <span class="token class-name">IAccessibilityServiceConnection<span class="token punctuation">.</span>Stub</span>
            <span class="token keyword">implements</span> <span class="token class-name">ServiceConnection</span><span class="token punctuation">,</span> DeathRecipient<span class="token punctuation">,</span> KeyEventDispatcher<span class="token punctuation">.</span>KeyEventFilter<span class="token punctuation">,</span>
            FingerprintGestureDispatcher<span class="token punctuation">.</span>FingerprintGestureClient <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  	
            <span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li></ul></pre>
<ul>
<li>IAccessibilityServiceConnection.Stub Aidl接口</li>
<li>ServiceConnection bander连接成功后的回调</li>
<li>aidl的内容可以参考之前博客：<a href="https://blog.csdn.net/qq_38499859/article/details/83628496" rel="nofollow">Android之IPC2————AIDL</a></li>
</ul>
<blockquote>
<p>目录: frameworks\base\services\accessibility\java\com\android\server\accessibility\AccessibilityManagerService.java#Service</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering">        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">notifyAccessibilityEvent</span><span class="token punctuation">(</span>AccessibilityEvent event<span class="token punctuation">,</span> <span class="token keyword">boolean</span> serviceWantsEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> <span class="token keyword">int</span> eventType <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getEventType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// Make a copy since during dispatch it is possible the event to</span>
                <span class="token comment">// be modified to remove its source if the receiving service does</span>
                <span class="token comment">// not have permission to access the window content.</span>
                AccessibilityEvent newEvent <span class="token operator">=</span> AccessibilityEvent<span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
                Message message<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mNotificationTimeout <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                        <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>eventType <span class="token operator">!=</span> AccessibilityEvent<span class="token punctuation">.</span>TYPE_WINDOW_CONTENT_CHANGED<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Allow at most one pending event</span>
                    <span class="token keyword">final</span> AccessibilityEvent oldEvent <span class="token operator">=</span> mPendingEvents<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>eventType<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    mPendingEvents<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>eventType<span class="token punctuation">,</span> newEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldEvent <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        mEventDispatchHandler<span class="token punctuation">.</span><span class="token function">removeMessages</span><span class="token punctuation">(</span>eventType<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        oldEvent<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    message <span class="token operator">=</span> mEventDispatchHandler<span class="token punctuation">.</span><span class="token function">obtainMessage</span><span class="token punctuation">(</span>eventType<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Send all messages, bypassing mPendingEvents</span>
                    message <span class="token operator">=</span> mEventDispatchHandler<span class="token punctuation">.</span><span class="token function">obtainMessage</span><span class="token punctuation">(</span>eventType<span class="token punctuation">,</span> newEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                message<span class="token punctuation">.</span>arg1 <span class="token operator">=</span> serviceWantsEvent <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>

                mEventDispatchHandler<span class="token punctuation">.</span><span class="token function">sendMessageDelayed</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> mNotificationTimeout<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//在Handler里进行处理</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> Handler mEventDispatchHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span>mMainHandler<span class="token punctuation">.</span><span class="token function">getLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>Message message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> <span class="token keyword">int</span> eventType <span class="token operator">=</span>  message<span class="token punctuation">.</span>what<span class="token punctuation">;</span>
                AccessibilityEvent event <span class="token operator">=</span> <span class="token punctuation">(</span>AccessibilityEvent<span class="token punctuation">)</span> message<span class="token punctuation">.</span>obj<span class="token punctuation">;</span>
                <span class="token keyword">boolean</span> serviceWantsEvent <span class="token operator">=</span> message<span class="token punctuation">.</span>arg1 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token function">notifyAccessibilityEventInternal</span><span class="token punctuation">(</span>eventType<span class="token punctuation">,</span> event<span class="token punctuation">,</span> serviceWantsEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        
        <span class="token comment">/**
         * Notifies an accessibility service client for a scheduled event given the event type.
         *
         * @param eventType The type of the event to dispatch.
         */</span>
        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">notifyAccessibilityEventInternal</span><span class="token punctuation">(</span>
                <span class="token keyword">int</span> eventType<span class="token punctuation">,</span>
                AccessibilityEvent event<span class="token punctuation">,</span>
                <span class="token keyword">boolean</span> serviceWantsEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            IAccessibilityServiceClient listener<span class="token punctuation">;</span>

            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                listener <span class="token operator">=</span> mServiceInterface<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>listener <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    event <span class="token operator">=</span> mPendingEvents<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>eventType<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    mPendingEvents<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>eventType<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mSecurityPolicy<span class="token punctuation">.</span><span class="token function">canRetrieveWindowContentLocked</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    event<span class="token punctuation">.</span><span class="token function">setConnectionId</span><span class="token punctuation">(</span>mId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    event<span class="token punctuation">.</span><span class="token function">setSource</span><span class="token punctuation">(</span><span class="token punctuation">(</span>View<span class="token punctuation">)</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                event<span class="token punctuation">.</span><span class="token function">setSealed</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                listener<span class="token punctuation">.</span><span class="token function">onAccessibilityEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> serviceWantsEvent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//重点</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    Slog<span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span>LOG_TAG<span class="token punctuation">,</span> <span class="token string">"Event "</span> <span class="token operator">+</span> event <span class="token operator">+</span> <span class="token string">" sent to "</span> <span class="token operator">+</span> listener<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> re<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                Slog<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>LOG_TAG<span class="token punctuation">,</span> <span class="token string">"Error during sending "</span> <span class="token operator">+</span> event <span class="token operator">+</span> <span class="token string">" to "</span> <span class="token operator">+</span> listener<span class="token punctuation">,</span> re<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                event<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li><li style="color: rgb(153, 153, 153);">52</li><li style="color: rgb(153, 153, 153);">53</li><li style="color: rgb(153, 153, 153);">54</li><li style="color: rgb(153, 153, 153);">55</li><li style="color: rgb(153, 153, 153);">56</li><li style="color: rgb(153, 153, 153);">57</li><li style="color: rgb(153, 153, 153);">58</li><li style="color: rgb(153, 153, 153);">59</li><li style="color: rgb(153, 153, 153);">60</li><li style="color: rgb(153, 153, 153);">61</li><li style="color: rgb(153, 153, 153);">62</li><li style="color: rgb(153, 153, 153);">63</li><li style="color: rgb(153, 153, 153);">64</li><li style="color: rgb(153, 153, 153);">65</li><li style="color: rgb(153, 153, 153);">66</li><li style="color: rgb(153, 153, 153);">67</li><li style="color: rgb(153, 153, 153);">68</li><li style="color: rgb(153, 153, 153);">69</li><li style="color: rgb(153, 153, 153);">70</li><li style="color: rgb(153, 153, 153);">71</li><li style="color: rgb(153, 153, 153);">72</li><li style="color: rgb(153, 153, 153);">73</li><li style="color: rgb(153, 153, 153);">74</li><li style="color: rgb(153, 153, 153);">75</li><li style="color: rgb(153, 153, 153);">76</li><li style="color: rgb(153, 153, 153);">77</li><li style="color: rgb(153, 153, 153);">78</li><li style="color: rgb(153, 153, 153);">79</li><li style="color: rgb(153, 153, 153);">80</li></ul></pre>
<p>继续最终追踪一下mServiceInterface的来源。<br>
通过全局搜索，发现在onServiceConnected里面，完成的mServiceInterface，即binder连接成功后的回调</p>
<blockquote>
<p>目录: frameworks\base\services\accessibility\java\com\android\server\accessibility\AccessibilityManagerService.java#Service</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering">        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onServiceConnected</span><span class="token punctuation">(</span>ComponentName componentName<span class="token punctuation">,</span> IBinder service<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mService <span class="token operator">!=</span> service<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mService <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        mService<span class="token punctuation">.</span><span class="token function">unlinkToDeath</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    mService <span class="token operator">=</span> service<span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        mService<span class="token punctuation">.</span><span class="token function">linkToDeath</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> re<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        Slog<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>LOG_TAG<span class="token punctuation">,</span> <span class="token string">"Failed registering death link"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token function">binderDied</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                mServiceInterface <span class="token operator">=</span> IAccessibilityServiceClient<span class="token punctuation">.</span>Stub<span class="token punctuation">.</span><span class="token function">asInterface</span><span class="token punctuation">(</span>service<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//被赋值</span>
                UserState userState <span class="token operator">=</span> <span class="token function">getUserStateLocked</span><span class="token punctuation">(</span>mUserId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">addServiceLocked</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> userState<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>userState<span class="token punctuation">.</span>mBindingServices<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>mComponentName<span class="token punctuation">)</span> <span class="token operator">||</span> mWasConnectedAndDied<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    userState<span class="token punctuation">.</span>mBindingServices<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>mComponentName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    mWasConnectedAndDied <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token function">onUserStateChangedLocked</span><span class="token punctuation">(</span>userState<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// Initialize the service on the main handler after we're done setting up for</span>
                    <span class="token comment">// the new configuration (for example, initializing the input filter).</span>
                    mMainHandler<span class="token punctuation">.</span><span class="token function">obtainMessage</span><span class="token punctuation">(</span>MainHandler<span class="token punctuation">.</span>MSG_INIT_SERVICE<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendToTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">binderDied</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li></ul></pre>
<p>我们注意一下，mServiceInterface的类型是IAccessibilityServiceClient。这个后面会用。</p>
<p>小结：</p>
<p><img alt="  " src="images/android02002.jpg"></p>
<h4><a id="3AccessibilityService_513"></a>3.AccessibilityService</h4>
<p>前面分析从View到IAccessibilityServiceClient的过程，但是对于IAccessibilityServiceClient的实现。我一直没有找到，然后就回过同从AccessibilityService 重新分析。</p>
<p>AccessibilityService是继承的Service类，只不过它实现了onBind</p>
<blockquote>
<p>目录： frameworks\base\core\java\android\accessibilityservice\AccessibilityService.java</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AccessibilityService</span> <span class="token keyword">extends</span> <span class="token class-name">Service</span> <span class="token punctuation">{</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token comment">/**
     * Implement to return the implementation of the internal accessibility
     * service interface.
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> IBinder <span class="token function">onBind</span><span class="token punctuation">(</span>Intent intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">IAccessibilityServiceClientWrapper</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">getMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Callbacks</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onServiceConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                AccessibilityService<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispatchServiceConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                AccessibilityService<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAccessibilityEvent</span><span class="token punctuation">(</span>AccessibilityEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                AccessibilityService<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onAccessibilityEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">int</span> connectionId<span class="token punctuation">,</span> IBinder windowToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mConnectionId <span class="token operator">=</span> connectionId<span class="token punctuation">;</span>
                mWindowToken <span class="token operator">=</span> windowToken<span class="token punctuation">;</span>

                <span class="token comment">// The client may have already obtained the window manager, so</span>
                <span class="token comment">// update the default token on whatever manager we gave them.</span>
                <span class="token keyword">final</span> WindowManagerImpl wm <span class="token operator">=</span> <span class="token punctuation">(</span>WindowManagerImpl<span class="token punctuation">)</span> <span class="token function">getSystemService</span><span class="token punctuation">(</span>WINDOW_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
                wm<span class="token punctuation">.</span><span class="token function">setDefaultToken</span><span class="token punctuation">(</span>windowToken<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onGesture</span><span class="token punctuation">(</span><span class="token keyword">int</span> gestureId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> AccessibilityService<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onGesture</span><span class="token punctuation">(</span>gestureId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onKeyEvent</span><span class="token punctuation">(</span>KeyEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> AccessibilityService<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onKeyEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMagnificationChanged</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> Region region<span class="token punctuation">,</span>
                    <span class="token keyword">float</span> scale<span class="token punctuation">,</span> <span class="token keyword">float</span> centerX<span class="token punctuation">,</span> <span class="token keyword">float</span> centerY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                AccessibilityService<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onMagnificationChanged</span><span class="token punctuation">(</span>region<span class="token punctuation">,</span> scale<span class="token punctuation">,</span> centerX<span class="token punctuation">,</span> centerY<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSoftKeyboardShowModeChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> showMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                AccessibilityService<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onSoftKeyboardShowModeChanged</span><span class="token punctuation">(</span>showMode<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPerformGestureResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> sequence<span class="token punctuation">,</span> <span class="token keyword">boolean</span> completedSuccessfully<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                AccessibilityService<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onPerformGestureResult</span><span class="token punctuation">(</span>sequence<span class="token punctuation">,</span> completedSuccessfully<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFingerprintCapturingGesturesChanged</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> active<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                AccessibilityService<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onFingerprintCapturingGesturesChanged</span><span class="token punctuation">(</span>active<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onFingerprintGesture</span><span class="token punctuation">(</span><span class="token keyword">int</span> gesture<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                AccessibilityService<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onFingerprintGesture</span><span class="token punctuation">(</span>gesture<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAccessibilityButtonClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                AccessibilityService<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onAccessibilityButtonClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAccessibilityButtonAvailabilityChanged</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> available<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                AccessibilityService<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">onAccessibilityButtonAvailabilityChanged</span><span class="token punctuation">(</span>available<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li><li style="color: rgb(153, 153, 153);">52</li><li style="color: rgb(153, 153, 153);">53</li><li style="color: rgb(153, 153, 153);">54</li><li style="color: rgb(153, 153, 153);">55</li><li style="color: rgb(153, 153, 153);">56</li><li style="color: rgb(153, 153, 153);">57</li><li style="color: rgb(153, 153, 153);">58</li><li style="color: rgb(153, 153, 153);">59</li><li style="color: rgb(153, 153, 153);">60</li><li style="color: rgb(153, 153, 153);">61</li><li style="color: rgb(153, 153, 153);">62</li><li style="color: rgb(153, 153, 153);">63</li><li style="color: rgb(153, 153, 153);">64</li><li style="color: rgb(153, 153, 153);">65</li><li style="color: rgb(153, 153, 153);">66</li><li style="color: rgb(153, 153, 153);">67</li><li style="color: rgb(153, 153, 153);">68</li><li style="color: rgb(153, 153, 153);">69</li><li style="color: rgb(153, 153, 153);">70</li><li style="color: rgb(153, 153, 153);">71</li><li style="color: rgb(153, 153, 153);">72</li><li style="color: rgb(153, 153, 153);">73</li><li style="color: rgb(153, 153, 153);">74</li><li style="color: rgb(153, 153, 153);">75</li><li style="color: rgb(153, 153, 153);">76</li><li style="color: rgb(153, 153, 153);">77</li><li style="color: rgb(153, 153, 153);">78</li><li style="color: rgb(153, 153, 153);">79</li><li style="color: rgb(153, 153, 153);">80</li><li style="color: rgb(153, 153, 153);">81</li><li style="color: rgb(153, 153, 153);">82</li><li style="color: rgb(153, 153, 153);">83</li><li style="color: rgb(153, 153, 153);">84</li></ul></pre>
<p>继续看看IAccessibilityServiceClientWrapper这个内部类</p>
<blockquote>
<p>目录： frameworks\base\core\java\android\accessibilityservice\AccessibilityService#IAccessibilityServiceClientWrapper</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering">
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">IAccessibilityServiceClientWrapper</span> <span class="token keyword">extends</span> <span class="token class-name">IAccessibilityServiceClient<span class="token punctuation">.</span>Stub</span>
            <span class="token keyword">implements</span> <span class="token class-name">HandlerCaller<span class="token punctuation">.</span>Callback</span> <span class="token punctuation">{</span>
      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token keyword">public</span> <span class="token function">IAccessibilityServiceClientWrapper</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Looper looper<span class="token punctuation">,</span>
                Callbacks callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mCallback <span class="token operator">=</span> callback<span class="token punctuation">;</span>
            mCaller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerCaller</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> looper<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/*asyncHandler*/</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>IAccessibilityServiceConnection connection<span class="token punctuation">,</span> <span class="token keyword">int</span> connectionId<span class="token punctuation">,</span>
                IBinder windowToken<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Message message <span class="token operator">=</span> mCaller<span class="token punctuation">.</span><span class="token function">obtainMessageIOO</span><span class="token punctuation">(</span>DO_INIT<span class="token punctuation">,</span> connectionId<span class="token punctuation">,</span>
                    connection<span class="token punctuation">,</span> windowToken<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mCaller<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAccessibilityEvent</span><span class="token punctuation">(</span>AccessibilityEvent event<span class="token punctuation">,</span> <span class="token keyword">boolean</span> serviceWantsEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Message message <span class="token operator">=</span> mCaller<span class="token punctuation">.</span><span class="token function">obtainMessageBO</span><span class="token punctuation">(</span>
                    DO_ON_ACCESSIBILITY_EVENT<span class="token punctuation">,</span> serviceWantsEvent<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mCaller<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">executeMessage</span><span class="token punctuation">(</span>Message message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span>what<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">case</span> DO_ON_ACCESSIBILITY_EVENT<span class="token operator">:</span> <span class="token punctuation">{</span>
                    AccessibilityEvent event <span class="token operator">=</span> <span class="token punctuation">(</span>AccessibilityEvent<span class="token punctuation">)</span> message<span class="token punctuation">.</span>obj<span class="token punctuation">;</span>
                    <span class="token keyword">boolean</span> serviceWantsEvent <span class="token operator">=</span> message<span class="token punctuation">.</span>arg1 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// Send the event to AccessibilityCache via AccessibilityInteractionClient</span>
                        AccessibilityInteractionClient<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onAccessibilityEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>serviceWantsEvent
                                <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>mConnectionId <span class="token operator">!=</span> AccessibilityInteractionClient<span class="token punctuation">.</span>NO_ID<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// Send the event to AccessibilityService</span>
                            mCallback<span class="token punctuation">.</span><span class="token function">onAccessibilityEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token comment">// Make sure the event is recycled.</span>
                        <span class="token keyword">try</span> <span class="token punctuation">{</span>
                            event<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalStateException</span> ise<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">/* ignore - best effort */</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

                <span class="token keyword">case</span> DO_ON_INTERRUPT<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mConnectionId <span class="token operator">!=</span> AccessibilityInteractionClient<span class="token punctuation">.</span>NO_ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        mCallback<span class="token punctuation">.</span><span class="token function">onInterrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

                <span class="token keyword">case</span> DO_INIT<span class="token operator">:</span> <span class="token punctuation">{</span>
                    mConnectionId <span class="token operator">=</span> message<span class="token punctuation">.</span>arg1<span class="token punctuation">;</span>
                    SomeArgs args <span class="token operator">=</span> <span class="token punctuation">(</span>SomeArgs<span class="token punctuation">)</span> message<span class="token punctuation">.</span>obj<span class="token punctuation">;</span>
                    IAccessibilityServiceConnection connection <span class="token operator">=</span>
                            <span class="token punctuation">(</span>IAccessibilityServiceConnection<span class="token punctuation">)</span> args<span class="token punctuation">.</span>arg1<span class="token punctuation">;</span>
                    IBinder windowToken <span class="token operator">=</span> <span class="token punctuation">(</span>IBinder<span class="token punctuation">)</span> args<span class="token punctuation">.</span>arg2<span class="token punctuation">;</span>
                    args<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        AccessibilityInteractionClient<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addConnection</span><span class="token punctuation">(</span>mConnectionId<span class="token punctuation">,</span>
                                connection<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        mCallback<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>mConnectionId<span class="token punctuation">,</span> windowToken<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        mCallback<span class="token punctuation">.</span><span class="token function">onServiceConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        AccessibilityInteractionClient<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeConnection</span><span class="token punctuation">(</span>
                                mConnectionId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        mConnectionId <span class="token operator">=</span> AccessibilityInteractionClient<span class="token punctuation">.</span>NO_ID<span class="token punctuation">;</span>
                        AccessibilityInteractionClient<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clearCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        mCallback<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>AccessibilityInteractionClient<span class="token punctuation">.</span>NO_ID<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

                <span class="token keyword">case</span> DO_ON_GESTURE<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mConnectionId <span class="token operator">!=</span> AccessibilityInteractionClient<span class="token punctuation">.</span>NO_ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">final</span> <span class="token keyword">int</span> gestureId <span class="token operator">=</span> message<span class="token punctuation">.</span>arg1<span class="token punctuation">;</span>
                        mCallback<span class="token punctuation">.</span><span class="token function">onGesture</span><span class="token punctuation">(</span>gestureId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

                <span class="token keyword">case</span> DO_CLEAR_ACCESSIBILITY_CACHE<span class="token operator">:</span> <span class="token punctuation">{</span>
                    AccessibilityInteractionClient<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clearCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

                <span class="token keyword">case</span> DO_ON_KEY_EVENT<span class="token operator">:</span> <span class="token punctuation">{</span>
                    KeyEvent event <span class="token operator">=</span> <span class="token punctuation">(</span>KeyEvent<span class="token punctuation">)</span> message<span class="token punctuation">.</span>obj<span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        IAccessibilityServiceConnection connection <span class="token operator">=</span> AccessibilityInteractionClient
                                <span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>mConnectionId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">final</span> <span class="token keyword">boolean</span> result <span class="token operator">=</span> mCallback<span class="token punctuation">.</span><span class="token function">onKeyEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">final</span> <span class="token keyword">int</span> sequence <span class="token operator">=</span> message<span class="token punctuation">.</span>arg1<span class="token punctuation">;</span>
                            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                                connection<span class="token punctuation">.</span><span class="token function">setOnKeyEventResult</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> sequence<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> re<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token comment">/* ignore */</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                        <span class="token comment">// Make sure the event is recycled.</span>
                        <span class="token keyword">try</span> <span class="token punctuation">{</span>
                            event<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalStateException</span> ise<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">/* ignore - best effort */</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

                <span class="token keyword">case</span> DO_ON_MAGNIFICATION_CHANGED<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mConnectionId <span class="token operator">!=</span> AccessibilityInteractionClient<span class="token punctuation">.</span>NO_ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">final</span> SomeArgs args <span class="token operator">=</span> <span class="token punctuation">(</span>SomeArgs<span class="token punctuation">)</span> message<span class="token punctuation">.</span>obj<span class="token punctuation">;</span>
                        <span class="token keyword">final</span> Region region <span class="token operator">=</span> <span class="token punctuation">(</span>Region<span class="token punctuation">)</span> args<span class="token punctuation">.</span>arg1<span class="token punctuation">;</span>
                        <span class="token keyword">final</span> <span class="token keyword">float</span> scale <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> args<span class="token punctuation">.</span>arg2<span class="token punctuation">;</span>
                        <span class="token keyword">final</span> <span class="token keyword">float</span> centerX <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> args<span class="token punctuation">.</span>arg3<span class="token punctuation">;</span>
                        <span class="token keyword">final</span> <span class="token keyword">float</span> centerY <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> args<span class="token punctuation">.</span>arg4<span class="token punctuation">;</span>
                        mCallback<span class="token punctuation">.</span><span class="token function">onMagnificationChanged</span><span class="token punctuation">(</span>region<span class="token punctuation">,</span> scale<span class="token punctuation">,</span> centerX<span class="token punctuation">,</span> centerY<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

                <span class="token keyword">case</span> DO_ON_SOFT_KEYBOARD_SHOW_MODE_CHANGED<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mConnectionId <span class="token operator">!=</span> AccessibilityInteractionClient<span class="token punctuation">.</span>NO_ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">final</span> <span class="token keyword">int</span> showMode <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> message<span class="token punctuation">.</span>arg1<span class="token punctuation">;</span>
                        mCallback<span class="token punctuation">.</span><span class="token function">onSoftKeyboardShowModeChanged</span><span class="token punctuation">(</span>showMode<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

                <span class="token keyword">case</span> DO_GESTURE_COMPLETE<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mConnectionId <span class="token operator">!=</span> AccessibilityInteractionClient<span class="token punctuation">.</span>NO_ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">final</span> <span class="token keyword">boolean</span> successfully <span class="token operator">=</span> message<span class="token punctuation">.</span>arg2 <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">;</span>
                        mCallback<span class="token punctuation">.</span><span class="token function">onPerformGestureResult</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>arg1<span class="token punctuation">,</span> successfully<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> DO_ON_FINGERPRINT_ACTIVE_CHANGED<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mConnectionId <span class="token operator">!=</span> AccessibilityInteractionClient<span class="token punctuation">.</span>NO_ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        mCallback<span class="token punctuation">.</span><span class="token function">onFingerprintCapturingGesturesChanged</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>arg1 <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> DO_ON_FINGERPRINT_GESTURE<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mConnectionId <span class="token operator">!=</span> AccessibilityInteractionClient<span class="token punctuation">.</span>NO_ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        mCallback<span class="token punctuation">.</span><span class="token function">onFingerprintGesture</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>arg1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

                <span class="token keyword">case</span> <span class="token punctuation">(</span>DO_ACCESSIBILITY_BUTTON_CLICKED<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mConnectionId <span class="token operator">!=</span> AccessibilityInteractionClient<span class="token punctuation">.</span>NO_ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        mCallback<span class="token punctuation">.</span><span class="token function">onAccessibilityButtonClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

                <span class="token keyword">case</span> <span class="token punctuation">(</span>DO_ACCESSIBILITY_BUTTON_AVAILABILITY_CHANGED<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>mConnectionId <span class="token operator">!=</span> AccessibilityInteractionClient<span class="token punctuation">.</span>NO_ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">final</span> <span class="token keyword">boolean</span> available <span class="token operator">=</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span>arg1 <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        mCallback<span class="token punctuation">.</span><span class="token function">onAccessibilityButtonAvailabilityChanged</span><span class="token punctuation">(</span>available<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

                <span class="token keyword">default</span> <span class="token operator">:</span>
                    Log<span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>LOG_TAG<span class="token punctuation">,</span> <span class="token string">"Unknown message type "</span> <span class="token operator">+</span> message<span class="token punctuation">.</span>what<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li><li style="color: rgb(153, 153, 153);">52</li><li style="color: rgb(153, 153, 153);">53</li><li style="color: rgb(153, 153, 153);">54</li><li style="color: rgb(153, 153, 153);">55</li><li style="color: rgb(153, 153, 153);">56</li><li style="color: rgb(153, 153, 153);">57</li><li style="color: rgb(153, 153, 153);">58</li><li style="color: rgb(153, 153, 153);">59</li><li style="color: rgb(153, 153, 153);">60</li><li style="color: rgb(153, 153, 153);">61</li><li style="color: rgb(153, 153, 153);">62</li><li style="color: rgb(153, 153, 153);">63</li><li style="color: rgb(153, 153, 153);">64</li><li style="color: rgb(153, 153, 153);">65</li><li style="color: rgb(153, 153, 153);">66</li><li style="color: rgb(153, 153, 153);">67</li><li style="color: rgb(153, 153, 153);">68</li><li style="color: rgb(153, 153, 153);">69</li><li style="color: rgb(153, 153, 153);">70</li><li style="color: rgb(153, 153, 153);">71</li><li style="color: rgb(153, 153, 153);">72</li><li style="color: rgb(153, 153, 153);">73</li><li style="color: rgb(153, 153, 153);">74</li><li style="color: rgb(153, 153, 153);">75</li><li style="color: rgb(153, 153, 153);">76</li><li style="color: rgb(153, 153, 153);">77</li><li style="color: rgb(153, 153, 153);">78</li><li style="color: rgb(153, 153, 153);">79</li><li style="color: rgb(153, 153, 153);">80</li><li style="color: rgb(153, 153, 153);">81</li><li style="color: rgb(153, 153, 153);">82</li><li style="color: rgb(153, 153, 153);">83</li><li style="color: rgb(153, 153, 153);">84</li><li style="color: rgb(153, 153, 153);">85</li><li style="color: rgb(153, 153, 153);">86</li><li style="color: rgb(153, 153, 153);">87</li><li style="color: rgb(153, 153, 153);">88</li><li style="color: rgb(153, 153, 153);">89</li><li style="color: rgb(153, 153, 153);">90</li><li style="color: rgb(153, 153, 153);">91</li><li style="color: rgb(153, 153, 153);">92</li><li style="color: rgb(153, 153, 153);">93</li><li style="color: rgb(153, 153, 153);">94</li><li style="color: rgb(153, 153, 153);">95</li><li style="color: rgb(153, 153, 153);">96</li><li style="color: rgb(153, 153, 153);">97</li><li style="color: rgb(153, 153, 153);">98</li><li style="color: rgb(153, 153, 153);">99</li><li style="color: rgb(153, 153, 153);">100</li><li style="color: rgb(153, 153, 153);">101</li><li style="color: rgb(153, 153, 153);">102</li><li style="color: rgb(153, 153, 153);">103</li><li style="color: rgb(153, 153, 153);">104</li><li style="color: rgb(153, 153, 153);">105</li><li style="color: rgb(153, 153, 153);">106</li><li style="color: rgb(153, 153, 153);">107</li><li style="color: rgb(153, 153, 153);">108</li><li style="color: rgb(153, 153, 153);">109</li><li style="color: rgb(153, 153, 153);">110</li><li style="color: rgb(153, 153, 153);">111</li><li style="color: rgb(153, 153, 153);">112</li><li style="color: rgb(153, 153, 153);">113</li><li style="color: rgb(153, 153, 153);">114</li><li style="color: rgb(153, 153, 153);">115</li><li style="color: rgb(153, 153, 153);">116</li><li style="color: rgb(153, 153, 153);">117</li><li style="color: rgb(153, 153, 153);">118</li><li style="color: rgb(153, 153, 153);">119</li><li style="color: rgb(153, 153, 153);">120</li><li style="color: rgb(153, 153, 153);">121</li><li style="color: rgb(153, 153, 153);">122</li><li style="color: rgb(153, 153, 153);">123</li><li style="color: rgb(153, 153, 153);">124</li><li style="color: rgb(153, 153, 153);">125</li><li style="color: rgb(153, 153, 153);">126</li><li style="color: rgb(153, 153, 153);">127</li><li style="color: rgb(153, 153, 153);">128</li><li style="color: rgb(153, 153, 153);">129</li><li style="color: rgb(153, 153, 153);">130</li><li style="color: rgb(153, 153, 153);">131</li><li style="color: rgb(153, 153, 153);">132</li><li style="color: rgb(153, 153, 153);">133</li><li style="color: rgb(153, 153, 153);">134</li><li style="color: rgb(153, 153, 153);">135</li><li style="color: rgb(153, 153, 153);">136</li><li style="color: rgb(153, 153, 153);">137</li><li style="color: rgb(153, 153, 153);">138</li><li style="color: rgb(153, 153, 153);">139</li><li style="color: rgb(153, 153, 153);">140</li><li style="color: rgb(153, 153, 153);">141</li><li style="color: rgb(153, 153, 153);">142</li><li style="color: rgb(153, 153, 153);">143</li><li style="color: rgb(153, 153, 153);">144</li><li style="color: rgb(153, 153, 153);">145</li><li style="color: rgb(153, 153, 153);">146</li><li style="color: rgb(153, 153, 153);">147</li><li style="color: rgb(153, 153, 153);">148</li><li style="color: rgb(153, 153, 153);">149</li><li style="color: rgb(153, 153, 153);">150</li><li style="color: rgb(153, 153, 153);">151</li><li style="color: rgb(153, 153, 153);">152</li><li style="color: rgb(153, 153, 153);">153</li><li style="color: rgb(153, 153, 153);">154</li><li style="color: rgb(153, 153, 153);">155</li><li style="color: rgb(153, 153, 153);">156</li><li style="color: rgb(153, 153, 153);">157</li><li style="color: rgb(153, 153, 153);">158</li><li style="color: rgb(153, 153, 153);">159</li><li style="color: rgb(153, 153, 153);">160</li><li style="color: rgb(153, 153, 153);">161</li><li style="color: rgb(153, 153, 153);">162</li><li style="color: rgb(153, 153, 153);">163</li><li style="color: rgb(153, 153, 153);">164</li><li style="color: rgb(153, 153, 153);">165</li></ul></pre>
<p>在这里我们找到了IAccessibilityServiceClient.Stub。</p>
<p>所以可知，在AccessibilityService中，当AccessibilityManagerService和建立连接后，获得onBind返回的IAccessibilityServiceClientWrapper，在onServiceConnected回调中，将IAccessibilityServiceClientWrapper赋值给我们上面说的mServiceInterface。</p>
<h3><a name="t4"></a><a id="findAccessibilityNodeInfosByText_779"></a>三.findAccessibilityNodeInfosByText</h3>
<h4><a id="1AccessibilityNodeInfo_780"></a>1.AccessibilityNodeInfo</h4>
<p>上面分析了点击事件是如何通知给AccessibilityService，现在让我们来看看AccessibilityService是如何选择的对应的控件的，以findAccessibilityNodeInfosByText为例</p>
<blockquote>
<p>目录:frameworks\base\core\java\android\view\accessibility\AccessibilityNodeInfo.java</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering">    <span class="token keyword">public</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>AccessibilityNodeInfo<span class="token punctuation">&gt;</span></span> <span class="token function">findAccessibilityNodeInfosByText</span><span class="token punctuation">(</span>String text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">enforceSealed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">canPerformRequestOverConnection</span><span class="token punctuation">(</span>mSourceNodeId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Collections<span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        AccessibilityInteractionClient client <span class="token operator">=</span> AccessibilityInteractionClient<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> client<span class="token punctuation">.</span><span class="token function">findAccessibilityNodeInfosByText</span><span class="token punctuation">(</span>mConnectionId<span class="token punctuation">,</span> mWindowId<span class="token punctuation">,</span> mSourceNodeId<span class="token punctuation">,</span>
                text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li></ul></pre>
<p>继续追踪AccessibilityInteractionClient.findAccessibilityNodeInfosByText</p>
<blockquote>
<p>目录:frameworks\base\core\java\android\view\accessibility\AccessibilityInteractionClient.java</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering">    <span class="token keyword">public</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>AccessibilityNodeInfo<span class="token punctuation">&gt;</span></span> <span class="token function">findAccessibilityNodeInfosByText</span><span class="token punctuation">(</span><span class="token keyword">int</span> connectionId<span class="token punctuation">,</span>
            <span class="token keyword">int</span> accessibilityWindowId<span class="token punctuation">,</span> <span class="token keyword">long</span> accessibilityNodeId<span class="token punctuation">,</span> String text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            IAccessibilityServiceConnection connection <span class="token operator">=</span> <span class="token function">getConnection</span><span class="token punctuation">(</span>connectionId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">final</span> <span class="token keyword">int</span> interactionId <span class="token operator">=</span> mInteractionIdCounter<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">final</span> <span class="token keyword">long</span> identityToken <span class="token operator">=</span> Binder<span class="token punctuation">.</span><span class="token function">clearCallingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">final</span> <span class="token keyword">boolean</span> success <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">findAccessibilityNodeInfosByText</span><span class="token punctuation">(</span>
                        accessibilityWindowId<span class="token punctuation">,</span> accessibilityNodeId<span class="token punctuation">,</span> text<span class="token punctuation">,</span> interactionId<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
                        Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//重点</span>
                Binder<span class="token punctuation">.</span><span class="token function">restoreCallingIdentity</span><span class="token punctuation">(</span>identityToken<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    List<span class="token generics function"><span class="token punctuation">&lt;</span>AccessibilityNodeInfo<span class="token punctuation">&gt;</span></span> infos <span class="token operator">=</span> <span class="token function">getFindAccessibilityNodeInfosResultAndClear</span><span class="token punctuation">(</span>
                            interactionId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>infos <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token function">finalizeAndCacheAccessibilityNodeInfos</span><span class="token punctuation">(</span>infos<span class="token punctuation">,</span> connectionId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> infos<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    Log<span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>LOG_TAG<span class="token punctuation">,</span> <span class="token string">"No connection for connection id: "</span> <span class="token operator">+</span> connectionId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> re<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Log<span class="token punctuation">.</span><span class="token function">w</span><span class="token punctuation">(</span>LOG_TAG<span class="token punctuation">,</span> <span class="token string">"Error while calling remote"</span>
                    <span class="token operator">+</span> <span class="token string">" findAccessibilityNodeInfosByViewText"</span><span class="token punctuation">,</span> re<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> Collections<span class="token punctuation">.</span><span class="token function">emptyList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li></ul></pre>
<p>这里出现了IAccessibilityServiceConnection类型，他是在哪定义的呢？其实我们在上一节中，有分析过这个内容，它其实就是AccessibilityManagerService中的内部类Service。</p>
<p>上面这个过程也是通过Binder完成的IPC</p>
<h4><a id="2AccessibilityManagerService_835"></a>2.AccessibilityManagerService</h4>
<p>我们继续分析AccessibilityManagerService中的内部类Service中的实现</p>
<pre class="prettyprint"><code class="prism language-java has-numbering">    <span class="token keyword">class</span> <span class="token class-name">Service</span> <span class="token keyword">extends</span> <span class="token class-name">IAccessibilityServiceConnection<span class="token punctuation">.</span>Stub</span>
            <span class="token keyword">implements</span> <span class="token class-name">ServiceConnection</span><span class="token punctuation">,</span> DeathRecipient<span class="token punctuation">,</span> KeyEventDispatcher<span class="token punctuation">.</span>KeyEventFilter<span class="token punctuation">,</span>
            FingerprintGestureDispatcher<span class="token punctuation">.</span>FingerprintGestureClient <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li></ul></pre>
<blockquote>
<p>目录" frameworks\base\services\accessibility\java\com\android\server\accessibility\AccessibilityManagerService.java#Service</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering">        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">findAccessibilityNodeInfosByText</span><span class="token punctuation">(</span><span class="token keyword">int</span> accessibilityWindowId<span class="token punctuation">,</span>
                <span class="token keyword">long</span> accessibilityNodeId<span class="token punctuation">,</span> String text<span class="token punctuation">,</span> <span class="token keyword">int</span> interactionId<span class="token punctuation">,</span>
                IAccessibilityInteractionConnectionCallback callback<span class="token punctuation">,</span> <span class="token keyword">long</span> interrogatingTid<span class="token punctuation">)</span>
                <span class="token keyword">throws</span> RemoteException <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> resolvedWindowId<span class="token punctuation">;</span>
            IAccessibilityInteractionConnection connection <span class="token operator">=</span> null<span class="token punctuation">;</span>
            Region partialInteractiveRegion <span class="token operator">=</span> Region<span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            MagnificationSpec spec<span class="token punctuation">;</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>mLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mUsesAccessibilityCache <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isCalledForCurrentUserLocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                resolvedWindowId <span class="token operator">=</span> <span class="token function">resolveAccessibilityWindowIdLocked</span><span class="token punctuation">(</span>accessibilityWindowId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">final</span> <span class="token keyword">boolean</span> permissionGranted <span class="token operator">=</span>
                    mSecurityPolicy<span class="token punctuation">.</span><span class="token function">canGetAccessibilityNodeInfoLocked</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> resolvedWindowId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>permissionGranted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    connection <span class="token operator">=</span> <span class="token function">getConnectionLocked</span><span class="token punctuation">(</span>resolvedWindowId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mSecurityPolicy<span class="token punctuation">.</span><span class="token function">computePartialInteractiveRegionForWindowLocked</span><span class="token punctuation">(</span>
                        resolvedWindowId<span class="token punctuation">,</span> partialInteractiveRegion<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    partialInteractiveRegion<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    partialInteractiveRegion <span class="token operator">=</span> null<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                spec <span class="token operator">=</span> <span class="token function">getCompatibleMagnificationSpecLocked</span><span class="token punctuation">(</span>resolvedWindowId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> interrogatingPid <span class="token operator">=</span> Binder<span class="token punctuation">.</span><span class="token function">getCallingPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            callback <span class="token operator">=</span> <span class="token function">replaceCallbackIfNeeded</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> resolvedWindowId<span class="token punctuation">,</span> interactionId<span class="token punctuation">,</span>
                    interrogatingPid<span class="token punctuation">,</span> interrogatingTid<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token keyword">long</span> identityToken <span class="token operator">=</span> Binder<span class="token punctuation">.</span><span class="token function">clearCallingIdentity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                connection<span class="token punctuation">.</span><span class="token function">findAccessibilityNodeInfosByText</span><span class="token punctuation">(</span>accessibilityNodeId<span class="token punctuation">,</span> text<span class="token punctuation">,</span>
                        partialInteractiveRegion<span class="token punctuation">,</span> interactionId<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> mFetchFlags<span class="token punctuation">,</span>
                        interrogatingPid<span class="token punctuation">,</span> interrogatingTid<span class="token punctuation">,</span> spec<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//重点代码</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> re<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>DEBUG<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    Slog<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>LOG_TAG<span class="token punctuation">,</span> <span class="token string">"Error calling findAccessibilityNodeInfosByText()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                Binder<span class="token punctuation">.</span><span class="token function">restoreCallingIdentity</span><span class="token punctuation">(</span>identityToken<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// Recycle if passed to another process.</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>partialInteractiveRegion <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> Binder<span class="token punctuation">.</span><span class="token function">isProxy</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    partialInteractiveRegion<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li><li style="color: rgb(153, 153, 153);">52</li><li style="color: rgb(153, 153, 153);">53</li><li style="color: rgb(153, 153, 153);">54</li><li style="color: rgb(153, 153, 153);">55</li></ul></pre>
<p>这里又出现一个connection，类型是IAccessibilityInteractionConnection。这个我找了半天，后来通过上面一节内容。我猜测是在ViewRootImpl中，最后搜索了一些。果然是在ViewRootImpl中实现的</p>
<h4><a id="3ViewRootImpl_904"></a>3.ViewRootImpl</h4>
<p>我们继续来看ViewRootImpl中的实现</p>
<blockquote>
<p>目录:\frameworks\base\core\java\android\view\ViewRootImpl.java</p>
</blockquote>
<p>AccessibilityInteractionConnection内部类定义</p>
<pre class="prettyprint"><code class="prism language-java has-numbering">    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">AccessibilityInteractionConnection</span>
            <span class="token keyword">extends</span> <span class="token class-name">IAccessibilityInteractionConnection<span class="token punctuation">.</span>Stub</span> <span class="token punctuation">{</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li></ul></pre>
<p>findAccessibilityNodeInfosByText的实现</p>
<pre class="prettyprint"><code class="prism language-java has-numbering">        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findAccessibilityNodeInfosByText</span><span class="token punctuation">(</span><span class="token keyword">long</span> accessibilityNodeId<span class="token punctuation">,</span> String text<span class="token punctuation">,</span>
                Region interactiveRegion<span class="token punctuation">,</span> <span class="token keyword">int</span> interactionId<span class="token punctuation">,</span>
                IAccessibilityInteractionConnectionCallback callback<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span>
                <span class="token keyword">int</span> interrogatingPid<span class="token punctuation">,</span> <span class="token keyword">long</span> interrogatingTid<span class="token punctuation">,</span> MagnificationSpec spec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ViewRootImpl viewRootImpl <span class="token operator">=</span> mViewRootImpl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>viewRootImpl <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> viewRootImpl<span class="token punctuation">.</span>mView <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                viewRootImpl<span class="token punctuation">.</span><span class="token function">getAccessibilityInteractionController</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">findAccessibilityNodeInfosByTextClientThread</span><span class="token punctuation">(</span>accessibilityNodeId<span class="token punctuation">,</span> text<span class="token punctuation">,</span>
                            interactiveRegion<span class="token punctuation">,</span> interactionId<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> flags<span class="token punctuation">,</span> interrogatingPid<span class="token punctuation">,</span>
                            interrogatingTid<span class="token punctuation">,</span> spec<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// We cannot make the call and notify the caller so it does not wait.</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    callback<span class="token punctuation">.</span><span class="token function">setFindAccessibilityNodeInfosResult</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> interactionId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> re<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">/* best effort - ignore */</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li></ul></pre>
<p>viewRootImpl.getAccessibilityInteractionController() 返回的是AccessibilityInteractionController,我们看看</p>
<blockquote>
<p>目录:frameworks\base\core\java\android\view\AccessibilityInteractionController.java</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering">     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findAccessibilityNodeInfosByTextClientThread</span><span class="token punctuation">(</span><span class="token keyword">long</span> accessibilityNodeId<span class="token punctuation">,</span>
            String text<span class="token punctuation">,</span> Region interactiveRegion<span class="token punctuation">,</span> <span class="token keyword">int</span> interactionId<span class="token punctuation">,</span>
            IAccessibilityInteractionConnectionCallback callback<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token keyword">int</span> interrogatingPid<span class="token punctuation">,</span>
            <span class="token keyword">long</span> interrogatingTid<span class="token punctuation">,</span> MagnificationSpec spec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Message message <span class="token operator">=</span> mHandler<span class="token punctuation">.</span><span class="token function">obtainMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        message<span class="token punctuation">.</span>what <span class="token operator">=</span> PrivateHandler<span class="token punctuation">.</span>MSG_FIND_ACCESSIBILITY_NODE_INFO_BY_TEXT<span class="token punctuation">;</span>
        message<span class="token punctuation">.</span>arg1 <span class="token operator">=</span> flags<span class="token punctuation">;</span>

        SomeArgs args <span class="token operator">=</span> SomeArgs<span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        args<span class="token punctuation">.</span>arg1 <span class="token operator">=</span> text<span class="token punctuation">;</span>
        args<span class="token punctuation">.</span>arg2 <span class="token operator">=</span> callback<span class="token punctuation">;</span>
        args<span class="token punctuation">.</span>arg3 <span class="token operator">=</span> spec<span class="token punctuation">;</span>
        args<span class="token punctuation">.</span>argi1 <span class="token operator">=</span> AccessibilityNodeInfo<span class="token punctuation">.</span><span class="token function">getAccessibilityViewId</span><span class="token punctuation">(</span>accessibilityNodeId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        args<span class="token punctuation">.</span>argi2 <span class="token operator">=</span> AccessibilityNodeInfo<span class="token punctuation">.</span><span class="token function">getVirtualDescendantId</span><span class="token punctuation">(</span>accessibilityNodeId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        args<span class="token punctuation">.</span>argi3 <span class="token operator">=</span> interactionId<span class="token punctuation">;</span>
        args<span class="token punctuation">.</span>arg4 <span class="token operator">=</span> interactiveRegion<span class="token punctuation">;</span>
        message<span class="token punctuation">.</span>obj <span class="token operator">=</span> args<span class="token punctuation">;</span>

        <span class="token function">scheduleMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> interrogatingPid<span class="token punctuation">,</span> interrogatingTid<span class="token punctuation">,</span> CONSIDER_REQUEST_PREPARERS<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//追踪</span>
    <span class="token punctuation">}</span>
    
    
        <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">scheduleMessage</span><span class="token punctuation">(</span>Message message<span class="token punctuation">,</span> <span class="token keyword">int</span> interrogatingPid<span class="token punctuation">,</span> <span class="token keyword">long</span> interrogatingTid<span class="token punctuation">,</span>
           <span class="token keyword">boolean</span> ignoreRequestPreparers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>ignoreRequestPreparers
               <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">holdOffMessageIfNeeded</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> interrogatingPid<span class="token punctuation">,</span> interrogatingTid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token comment">// If the interrogation is performed by the same thread as the main UI</span>
           <span class="token comment">// thread in this process, set the message as a static reference so</span>
           <span class="token comment">// after this call completes the same thread but in the interrogating</span>
           <span class="token comment">// client can handle the message to generate the result.</span>
           <span class="token keyword">if</span> <span class="token punctuation">(</span>interrogatingPid <span class="token operator">==</span> mMyProcessId <span class="token operator">&amp;&amp;</span> interrogatingTid <span class="token operator">==</span> mMyLooperThreadId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               AccessibilityInteractionClient<span class="token punctuation">.</span><span class="token function">getInstanceForThread</span><span class="token punctuation">(</span>
                       interrogatingTid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSameThreadMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
               mHandler<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//去handler的实现类</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">PrivateHandler</span> <span class="token keyword">extends</span> <span class="token class-name">Handler</span> <span class="token punctuation">{</span>
       <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MSG_PERFORM_ACCESSIBILITY_ACTION <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
       <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MSG_FIND_ACCESSIBILITY_NODE_INFO_BY_ACCESSIBILITY_ID <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
       <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MSG_FIND_ACCESSIBILITY_NODE_INFOS_BY_VIEW_ID <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
       <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MSG_FIND_ACCESSIBILITY_NODE_INFO_BY_TEXT <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
       <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MSG_FIND_FOCUS <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
       <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MSG_FOCUS_SEARCH <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
       <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MSG_PREPARE_FOR_EXTRA_DATA_REQUEST <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
       <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MSG_APP_PREPARATION_FINISHED <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
       <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MSG_APP_PREPARATION_TIMEOUT <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>

       <span class="token keyword">public</span> <span class="token function">PrivateHandler</span><span class="token punctuation">(</span>Looper looper<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">super</span><span class="token punctuation">(</span>looper<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>

       <span class="token annotation punctuation">@Override</span>
       <span class="token keyword">public</span> String <span class="token function">getMessageName</span><span class="token punctuation">(</span>Message message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">final</span> <span class="token keyword">int</span> type <span class="token operator">=</span> message<span class="token punctuation">.</span>what<span class="token punctuation">;</span>
           <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token keyword">case</span> MSG_PERFORM_ACCESSIBILITY_ACTION<span class="token operator">:</span>
                   <span class="token keyword">return</span> <span class="token string">"MSG_PERFORM_ACCESSIBILITY_ACTION"</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_FIND_ACCESSIBILITY_NODE_INFO_BY_ACCESSIBILITY_ID<span class="token operator">:</span>
                   <span class="token keyword">return</span> <span class="token string">"MSG_FIND_ACCESSIBILITY_NODE_INFO_BY_ACCESSIBILITY_ID"</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_FIND_ACCESSIBILITY_NODE_INFOS_BY_VIEW_ID<span class="token operator">:</span>
                   <span class="token keyword">return</span> <span class="token string">"MSG_FIND_ACCESSIBILITY_NODE_INFOS_BY_VIEW_ID"</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_FIND_ACCESSIBILITY_NODE_INFO_BY_TEXT<span class="token operator">:</span>
                   <span class="token keyword">return</span> <span class="token string">"MSG_FIND_ACCESSIBILITY_NODE_INFO_BY_TEXT"</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_FIND_FOCUS<span class="token operator">:</span>
                   <span class="token keyword">return</span> <span class="token string">"MSG_FIND_FOCUS"</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_FOCUS_SEARCH<span class="token operator">:</span>
                   <span class="token keyword">return</span> <span class="token string">"MSG_FOCUS_SEARCH"</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_PREPARE_FOR_EXTRA_DATA_REQUEST<span class="token operator">:</span>
                   <span class="token keyword">return</span> <span class="token string">"MSG_PREPARE_FOR_EXTRA_DATA_REQUEST"</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_APP_PREPARATION_FINISHED<span class="token operator">:</span>
                   <span class="token keyword">return</span> <span class="token string">"MSG_APP_PREPARATION_FINISHED"</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_APP_PREPARATION_TIMEOUT<span class="token operator">:</span>
                   <span class="token keyword">return</span> <span class="token string">"MSG_APP_PREPARATION_TIMEOUT"</span><span class="token punctuation">;</span>
               <span class="token keyword">default</span><span class="token operator">:</span>
                   <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"Unknown message type: "</span> <span class="token operator">+</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span>

       <span class="token annotation punctuation">@Override</span>
       <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>Message message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">final</span> <span class="token keyword">int</span> type <span class="token operator">=</span> message<span class="token punctuation">.</span>what<span class="token punctuation">;</span>
           <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token keyword">case</span> MSG_FIND_ACCESSIBILITY_NODE_INFO_BY_ACCESSIBILITY_ID<span class="token operator">:</span> <span class="token punctuation">{</span>
                   <span class="token function">findAccessibilityNodeInfoByAccessibilityIdUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_PERFORM_ACCESSIBILITY_ACTION<span class="token operator">:</span> <span class="token punctuation">{</span>
                   <span class="token function">performAccessibilityActionUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_FIND_ACCESSIBILITY_NODE_INFOS_BY_VIEW_ID<span class="token operator">:</span> <span class="token punctuation">{</span>
                   <span class="token function">findAccessibilityNodeInfosByViewIdUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_FIND_ACCESSIBILITY_NODE_INFO_BY_TEXT<span class="token operator">:</span> <span class="token punctuation">{</span>
                   <span class="token function">findAccessibilityNodeInfosByTextUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_FIND_FOCUS<span class="token operator">:</span> <span class="token punctuation">{</span>
                   <span class="token function">findFocusUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_FOCUS_SEARCH<span class="token operator">:</span> <span class="token punctuation">{</span>
                   <span class="token function">focusSearchUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_PREPARE_FOR_EXTRA_DATA_REQUEST<span class="token operator">:</span> <span class="token punctuation">{</span>
                   <span class="token function">prepareForExtraDataRequestUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_APP_PREPARATION_FINISHED<span class="token operator">:</span> <span class="token punctuation">{</span>
                   <span class="token function">requestPreparerDoneUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
               <span class="token keyword">case</span> MSG_APP_PREPARATION_TIMEOUT<span class="token operator">:</span> <span class="token punctuation">{</span>
                   <span class="token function">requestPreparerTimeoutUiThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
               <span class="token keyword">default</span><span class="token operator">:</span>
                   <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"Unknown message type: "</span> <span class="token operator">+</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

<span class="token comment">//重点代码</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">findAccessibilityNodeInfosByTextUiThread</span><span class="token punctuation">(</span>Message message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">final</span> <span class="token keyword">int</span> flags <span class="token operator">=</span> message<span class="token punctuation">.</span>arg1<span class="token punctuation">;</span>

       SomeArgs args <span class="token operator">=</span> <span class="token punctuation">(</span>SomeArgs<span class="token punctuation">)</span> message<span class="token punctuation">.</span>obj<span class="token punctuation">;</span>
       <span class="token keyword">final</span> String text <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> args<span class="token punctuation">.</span>arg1<span class="token punctuation">;</span>
       <span class="token keyword">final</span> IAccessibilityInteractionConnectionCallback callback <span class="token operator">=</span>
           <span class="token punctuation">(</span>IAccessibilityInteractionConnectionCallback<span class="token punctuation">)</span> args<span class="token punctuation">.</span>arg2<span class="token punctuation">;</span>
       <span class="token keyword">final</span> MagnificationSpec spec <span class="token operator">=</span> <span class="token punctuation">(</span>MagnificationSpec<span class="token punctuation">)</span> args<span class="token punctuation">.</span>arg3<span class="token punctuation">;</span>
       <span class="token keyword">final</span> <span class="token keyword">int</span> accessibilityViewId <span class="token operator">=</span> args<span class="token punctuation">.</span>argi1<span class="token punctuation">;</span>
       <span class="token keyword">final</span> <span class="token keyword">int</span> virtualDescendantId <span class="token operator">=</span> args<span class="token punctuation">.</span>argi2<span class="token punctuation">;</span>
       <span class="token keyword">final</span> <span class="token keyword">int</span> interactionId <span class="token operator">=</span> args<span class="token punctuation">.</span>argi3<span class="token punctuation">;</span>
       <span class="token keyword">final</span> Region interactiveRegion <span class="token operator">=</span> <span class="token punctuation">(</span>Region<span class="token punctuation">)</span> args<span class="token punctuation">.</span>arg4<span class="token punctuation">;</span>
       args<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       List<span class="token generics function"><span class="token punctuation">&lt;</span>AccessibilityNodeInfo<span class="token punctuation">&gt;</span></span> infos <span class="token operator">=</span> null<span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
           <span class="token keyword">if</span> <span class="token punctuation">(</span>mViewRootImpl<span class="token punctuation">.</span>mView <span class="token operator">==</span> null <span class="token operator">||</span> mViewRootImpl<span class="token punctuation">.</span>mAttachInfo <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token keyword">return</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
           mViewRootImpl<span class="token punctuation">.</span>mAttachInfo<span class="token punctuation">.</span>mAccessibilityFetchFlags <span class="token operator">=</span> flags<span class="token punctuation">;</span>
           View root <span class="token operator">=</span> null<span class="token punctuation">;</span>
           <span class="token keyword">if</span> <span class="token punctuation">(</span>accessibilityViewId <span class="token operator">!=</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ROOT_ITEM_ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               root <span class="token operator">=</span> <span class="token function">findViewByAccessibilityId</span><span class="token punctuation">(</span>accessibilityViewId<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
               root <span class="token operator">=</span> mViewRootImpl<span class="token punctuation">.</span>mView<span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
           <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token function">isShown</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               AccessibilityNodeProvider provider <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getAccessibilityNodeProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token keyword">if</span> <span class="token punctuation">(</span>provider <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                   infos <span class="token operator">=</span> provider<span class="token punctuation">.</span><span class="token function">findAccessibilityNodeInfosByText</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span>
                           virtualDescendantId<span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>virtualDescendantId <span class="token operator">==</span> AccessibilityNodeProvider<span class="token punctuation">.</span>HOST_VIEW_ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                   ArrayList<span class="token generics function"><span class="token punctuation">&lt;</span>View<span class="token punctuation">&gt;</span></span> foundViews <span class="token operator">=</span> mTempArrayList<span class="token punctuation">;</span>
                   foundViews<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                   <span class="token comment">//重点代码</span>
                   root<span class="token punctuation">.</span><span class="token function">findViewsWithText</span><span class="token punctuation">(</span>foundViews<span class="token punctuation">,</span> text<span class="token punctuation">,</span> View<span class="token punctuation">.</span>FIND_VIEWS_WITH_TEXT
                           <span class="token operator">|</span> View<span class="token punctuation">.</span>FIND_VIEWS_WITH_CONTENT_DESCRIPTION
                           <span class="token operator">|</span> View<span class="token punctuation">.</span>FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS<span class="token punctuation">)</span><span class="token punctuation">;</span>
                   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>foundViews<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                       infos <span class="token operator">=</span> mTempAccessibilityNodeInfoList<span class="token punctuation">;</span>
                       infos<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                       <span class="token keyword">final</span> <span class="token keyword">int</span> viewCount <span class="token operator">=</span> foundViews<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                       <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> viewCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                           View foundView <span class="token operator">=</span> foundViews<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                           <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isShown</span><span class="token punctuation">(</span>foundView<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                               provider <span class="token operator">=</span> foundView<span class="token punctuation">.</span><span class="token function">getAccessibilityNodeProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                               <span class="token keyword">if</span> <span class="token punctuation">(</span>provider <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                   List<span class="token generics function"><span class="token punctuation">&lt;</span>AccessibilityNodeInfo<span class="token punctuation">&gt;</span></span> infosFromProvider <span class="token operator">=</span>
                                       provider<span class="token punctuation">.</span><span class="token function">findAccessibilityNodeInfosByText</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span>
                                               AccessibilityNodeProvider<span class="token punctuation">.</span>HOST_VIEW_ID<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                   <span class="token keyword">if</span> <span class="token punctuation">(</span>infosFromProvider <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                       infos<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>infosFromProvider<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                   <span class="token punctuation">}</span>
                               <span class="token punctuation">}</span> <span class="token keyword">else</span>  <span class="token punctuation">{</span>
                                   infos<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>foundView<span class="token punctuation">.</span><span class="token function">createAccessibilityNodeInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                               <span class="token punctuation">}</span>
                           <span class="token punctuation">}</span>
                       <span class="token punctuation">}</span>
                   <span class="token punctuation">}</span>
               <span class="token punctuation">}</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
           <span class="token function">updateInfosForViewportAndReturnFindNodeResult</span><span class="token punctuation">(</span>
                   infos<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> interactionId<span class="token punctuation">,</span> spec<span class="token punctuation">,</span> interactiveRegion<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li><li style="color: rgb(153, 153, 153);">52</li><li style="color: rgb(153, 153, 153);">53</li><li style="color: rgb(153, 153, 153);">54</li><li style="color: rgb(153, 153, 153);">55</li><li style="color: rgb(153, 153, 153);">56</li><li style="color: rgb(153, 153, 153);">57</li><li style="color: rgb(153, 153, 153);">58</li><li style="color: rgb(153, 153, 153);">59</li><li style="color: rgb(153, 153, 153);">60</li><li style="color: rgb(153, 153, 153);">61</li><li style="color: rgb(153, 153, 153);">62</li><li style="color: rgb(153, 153, 153);">63</li><li style="color: rgb(153, 153, 153);">64</li><li style="color: rgb(153, 153, 153);">65</li><li style="color: rgb(153, 153, 153);">66</li><li style="color: rgb(153, 153, 153);">67</li><li style="color: rgb(153, 153, 153);">68</li><li style="color: rgb(153, 153, 153);">69</li><li style="color: rgb(153, 153, 153);">70</li><li style="color: rgb(153, 153, 153);">71</li><li style="color: rgb(153, 153, 153);">72</li><li style="color: rgb(153, 153, 153);">73</li><li style="color: rgb(153, 153, 153);">74</li><li style="color: rgb(153, 153, 153);">75</li><li style="color: rgb(153, 153, 153);">76</li><li style="color: rgb(153, 153, 153);">77</li><li style="color: rgb(153, 153, 153);">78</li><li style="color: rgb(153, 153, 153);">79</li><li style="color: rgb(153, 153, 153);">80</li><li style="color: rgb(153, 153, 153);">81</li><li style="color: rgb(153, 153, 153);">82</li><li style="color: rgb(153, 153, 153);">83</li><li style="color: rgb(153, 153, 153);">84</li><li style="color: rgb(153, 153, 153);">85</li><li style="color: rgb(153, 153, 153);">86</li><li style="color: rgb(153, 153, 153);">87</li><li style="color: rgb(153, 153, 153);">88</li><li style="color: rgb(153, 153, 153);">89</li><li style="color: rgb(153, 153, 153);">90</li><li style="color: rgb(153, 153, 153);">91</li><li style="color: rgb(153, 153, 153);">92</li><li style="color: rgb(153, 153, 153);">93</li><li style="color: rgb(153, 153, 153);">94</li><li style="color: rgb(153, 153, 153);">95</li><li style="color: rgb(153, 153, 153);">96</li><li style="color: rgb(153, 153, 153);">97</li><li style="color: rgb(153, 153, 153);">98</li><li style="color: rgb(153, 153, 153);">99</li><li style="color: rgb(153, 153, 153);">100</li><li style="color: rgb(153, 153, 153);">101</li><li style="color: rgb(153, 153, 153);">102</li><li style="color: rgb(153, 153, 153);">103</li><li style="color: rgb(153, 153, 153);">104</li><li style="color: rgb(153, 153, 153);">105</li><li style="color: rgb(153, 153, 153);">106</li><li style="color: rgb(153, 153, 153);">107</li><li style="color: rgb(153, 153, 153);">108</li><li style="color: rgb(153, 153, 153);">109</li><li style="color: rgb(153, 153, 153);">110</li><li style="color: rgb(153, 153, 153);">111</li><li style="color: rgb(153, 153, 153);">112</li><li style="color: rgb(153, 153, 153);">113</li><li style="color: rgb(153, 153, 153);">114</li><li style="color: rgb(153, 153, 153);">115</li><li style="color: rgb(153, 153, 153);">116</li><li style="color: rgb(153, 153, 153);">117</li><li style="color: rgb(153, 153, 153);">118</li><li style="color: rgb(153, 153, 153);">119</li><li style="color: rgb(153, 153, 153);">120</li><li style="color: rgb(153, 153, 153);">121</li><li style="color: rgb(153, 153, 153);">122</li><li style="color: rgb(153, 153, 153);">123</li><li style="color: rgb(153, 153, 153);">124</li><li style="color: rgb(153, 153, 153);">125</li><li style="color: rgb(153, 153, 153);">126</li><li style="color: rgb(153, 153, 153);">127</li><li style="color: rgb(153, 153, 153);">128</li><li style="color: rgb(153, 153, 153);">129</li><li style="color: rgb(153, 153, 153);">130</li><li style="color: rgb(153, 153, 153);">131</li><li style="color: rgb(153, 153, 153);">132</li><li style="color: rgb(153, 153, 153);">133</li><li style="color: rgb(153, 153, 153);">134</li><li style="color: rgb(153, 153, 153);">135</li><li style="color: rgb(153, 153, 153);">136</li><li style="color: rgb(153, 153, 153);">137</li><li style="color: rgb(153, 153, 153);">138</li><li style="color: rgb(153, 153, 153);">139</li><li style="color: rgb(153, 153, 153);">140</li><li style="color: rgb(153, 153, 153);">141</li><li style="color: rgb(153, 153, 153);">142</li><li style="color: rgb(153, 153, 153);">143</li><li style="color: rgb(153, 153, 153);">144</li><li style="color: rgb(153, 153, 153);">145</li><li style="color: rgb(153, 153, 153);">146</li><li style="color: rgb(153, 153, 153);">147</li><li style="color: rgb(153, 153, 153);">148</li><li style="color: rgb(153, 153, 153);">149</li><li style="color: rgb(153, 153, 153);">150</li><li style="color: rgb(153, 153, 153);">151</li><li style="color: rgb(153, 153, 153);">152</li><li style="color: rgb(153, 153, 153);">153</li><li style="color: rgb(153, 153, 153);">154</li><li style="color: rgb(153, 153, 153);">155</li><li style="color: rgb(153, 153, 153);">156</li><li style="color: rgb(153, 153, 153);">157</li><li style="color: rgb(153, 153, 153);">158</li><li style="color: rgb(153, 153, 153);">159</li><li style="color: rgb(153, 153, 153);">160</li><li style="color: rgb(153, 153, 153);">161</li><li style="color: rgb(153, 153, 153);">162</li><li style="color: rgb(153, 153, 153);">163</li><li style="color: rgb(153, 153, 153);">164</li><li style="color: rgb(153, 153, 153);">165</li><li style="color: rgb(153, 153, 153);">166</li><li style="color: rgb(153, 153, 153);">167</li><li style="color: rgb(153, 153, 153);">168</li><li style="color: rgb(153, 153, 153);">169</li><li style="color: rgb(153, 153, 153);">170</li><li style="color: rgb(153, 153, 153);">171</li><li style="color: rgb(153, 153, 153);">172</li><li style="color: rgb(153, 153, 153);">173</li><li style="color: rgb(153, 153, 153);">174</li><li style="color: rgb(153, 153, 153);">175</li><li style="color: rgb(153, 153, 153);">176</li><li style="color: rgb(153, 153, 153);">177</li><li style="color: rgb(153, 153, 153);">178</li><li style="color: rgb(153, 153, 153);">179</li><li style="color: rgb(153, 153, 153);">180</li><li style="color: rgb(153, 153, 153);">181</li><li style="color: rgb(153, 153, 153);">182</li><li style="color: rgb(153, 153, 153);">183</li><li style="color: rgb(153, 153, 153);">184</li><li style="color: rgb(153, 153, 153);">185</li></ul></pre>
<p>在最后 root.findViewsWithText。root的来源是 root = mViewRootImpl.mView。我们知道mViewRootImpl.mView其实是通过setView来赋值的。一般都是ViewGrop类型。我们直接去看ViewGrup的findViewsWithText</p>
<blockquote>
<p>目录:frameworks\base\core\java\android\view\ViewGroup.java</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering">    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findViewsWithText</span><span class="token punctuation">(</span>ArrayList<span class="token generics function"><span class="token punctuation">&lt;</span>View<span class="token punctuation">&gt;</span></span> outViews<span class="token punctuation">,</span> CharSequence text<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">findViewsWithText</span><span class="token punctuation">(</span>outViews<span class="token punctuation">,</span> text<span class="token punctuation">,</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> childrenCount <span class="token operator">=</span> mChildrenCount<span class="token punctuation">;</span>
        <span class="token keyword">final</span> View<span class="token punctuation">[</span><span class="token punctuation">]</span> children <span class="token operator">=</span> mChildren<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> childrenCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            View child <span class="token operator">=</span> children<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>mViewFlags <span class="token operator">&amp;</span> VISIBILITY_MASK<span class="token punctuation">)</span> <span class="token operator">==</span> VISIBLE
                    <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>mPrivateFlags <span class="token operator">&amp;</span> PFLAG_IS_ROOT_NAMESPACE<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                child<span class="token punctuation">.</span><span class="token function">findViewsWithText</span><span class="token punctuation">(</span>outViews<span class="token punctuation">,</span> text<span class="token punctuation">,</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li></ul></pre>
<p>继续看看View的实现</p>
<blockquote>
<p>目录：frameworks\base\core\java\android\view\View.java</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findViewsWithText</span><span class="token punctuation">(</span>ArrayList<span class="token generics function"><span class="token punctuation">&lt;</span>View<span class="token punctuation">&gt;</span></span> outViews<span class="token punctuation">,</span> CharSequence searched<span class="token punctuation">,</span>
            <span class="token annotation punctuation">@FindViewFlags</span> <span class="token keyword">int</span> flags<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getAccessibilityNodeProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>flags <span class="token operator">&amp;</span> FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                outViews<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>flags <span class="token operator">&amp;</span> FIND_VIEWS_WITH_CONTENT_DESCRIPTION<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span>
                <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>searched <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> searched<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>mContentDescription <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> mContentDescription<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            String searchedLowerCase <span class="token operator">=</span> searched<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            String contentDescriptionLowerCase <span class="token operator">=</span> mContentDescription<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>contentDescriptionLowerCase<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>searchedLowerCase<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                outViews<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li></ul></pre>
<p>至此我们可以看出，最终会调用View的findViewsWithText，将符合条件的View放入到 outViews集合中。</p>
<h4><a id="4_1173"></a>4.小结</h4>
<p>时序图：<br>
<img alt="在这里插入图片描述" src="images/android02003.jpg"></p>
<h3><a name="t5"></a><a id="performAction_1176"></a>四.performAction</h3>
<p>点击事件和上面查找控件的流程很想，着重分析一下AccessibilityInteractionController之后的流程<br>
<img alt="在这里插入图片描述" src="images/android02004.jpg"></p>
<h4><a id="1AccessibilityInteractionController_1179"></a>1.AccessibilityInteractionController</h4>
<p>从performAccessibilityActionClientThread开始分析</p>
<blockquote>
<p>目录:frameworks\base\core\java\android\view\AccessibilityInteractionController.java</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">performAccessibilityActionClientThread</span><span class="token punctuation">(</span><span class="token keyword">long</span> accessibilityNodeId<span class="token punctuation">,</span> <span class="token keyword">int</span> action<span class="token punctuation">,</span>
            Bundle arguments<span class="token punctuation">,</span> <span class="token keyword">int</span> interactionId<span class="token punctuation">,</span>
            IAccessibilityInteractionConnectionCallback callback<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token keyword">int</span> interrogatingPid<span class="token punctuation">,</span>
            <span class="token keyword">long</span> interrogatingTid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Message message <span class="token operator">=</span> mHandler<span class="token punctuation">.</span><span class="token function">obtainMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        message<span class="token punctuation">.</span>what <span class="token operator">=</span> PrivateHandler<span class="token punctuation">.</span>MSG_PERFORM_ACCESSIBILITY_ACTION<span class="token punctuation">;</span>
        message<span class="token punctuation">.</span>arg1 <span class="token operator">=</span> flags<span class="token punctuation">;</span>
        message<span class="token punctuation">.</span>arg2 <span class="token operator">=</span> AccessibilityNodeInfo<span class="token punctuation">.</span><span class="token function">getAccessibilityViewId</span><span class="token punctuation">(</span>accessibilityNodeId<span class="token punctuation">)</span><span class="token punctuation">;</span>

        SomeArgs args <span class="token operator">=</span> SomeArgs<span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        args<span class="token punctuation">.</span>argi1 <span class="token operator">=</span> AccessibilityNodeInfo<span class="token punctuation">.</span><span class="token function">getVirtualDescendantId</span><span class="token punctuation">(</span>accessibilityNodeId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        args<span class="token punctuation">.</span>argi2 <span class="token operator">=</span> action<span class="token punctuation">;</span>
        args<span class="token punctuation">.</span>argi3 <span class="token operator">=</span> interactionId<span class="token punctuation">;</span>
        args<span class="token punctuation">.</span>arg1 <span class="token operator">=</span> callback<span class="token punctuation">;</span>
        args<span class="token punctuation">.</span>arg2 <span class="token operator">=</span> arguments<span class="token punctuation">;</span>

        message<span class="token punctuation">.</span>obj <span class="token operator">=</span> args<span class="token punctuation">;</span>

        <span class="token function">scheduleMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> interrogatingPid<span class="token punctuation">,</span> interrogatingTid<span class="token punctuation">,</span> CONSIDER_REQUEST_PREPARERS<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


<span class="token comment">//Hander的handleMessage处理</span>
 		<span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>Message message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> type <span class="token operator">=</span> message<span class="token punctuation">.</span>what<span class="token punctuation">;</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">case</span> MSG_FIND_ACCESSIBILITY_NODE_INFO_BY_ACCESSIBILITY_ID<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token function">findAccessibilityNodeInfoByAccessibilityIdUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> MSG_PERFORM_ACCESSIBILITY_ACTION<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token function">performAccessibilityActionUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//这里</span>
                <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> MSG_FIND_ACCESSIBILITY_NODE_INFOS_BY_VIEW_ID<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token function">findAccessibilityNodeInfosByViewIdUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> MSG_FIND_ACCESSIBILITY_NODE_INFO_BY_TEXT<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token function">findAccessibilityNodeInfosByTextUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> MSG_FIND_FOCUS<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token function">findFocusUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> MSG_FOCUS_SEARCH<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token function">focusSearchUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> MSG_PREPARE_FOR_EXTRA_DATA_REQUEST<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token function">prepareForExtraDataRequestUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> MSG_APP_PREPARATION_FINISHED<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token function">requestPreparerDoneUiThread</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> MSG_APP_PREPARATION_TIMEOUT<span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token function">requestPreparerTimeoutUiThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
                <span class="token keyword">default</span><span class="token operator">:</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"Unknown message type: "</span> <span class="token operator">+</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">performAccessibilityActionUiThread</span><span class="token punctuation">(</span>Message message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> flags <span class="token operator">=</span> message<span class="token punctuation">.</span>arg1<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> accessibilityViewId <span class="token operator">=</span> message<span class="token punctuation">.</span>arg2<span class="token punctuation">;</span>

        SomeArgs args <span class="token operator">=</span> <span class="token punctuation">(</span>SomeArgs<span class="token punctuation">)</span> message<span class="token punctuation">.</span>obj<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> virtualDescendantId <span class="token operator">=</span> args<span class="token punctuation">.</span>argi1<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> action <span class="token operator">=</span> args<span class="token punctuation">.</span>argi2<span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> interactionId <span class="token operator">=</span> args<span class="token punctuation">.</span>argi3<span class="token punctuation">;</span>
        <span class="token keyword">final</span> IAccessibilityInteractionConnectionCallback callback <span class="token operator">=</span>
            <span class="token punctuation">(</span>IAccessibilityInteractionConnectionCallback<span class="token punctuation">)</span> args<span class="token punctuation">.</span>arg1<span class="token punctuation">;</span>
        Bundle arguments <span class="token operator">=</span> <span class="token punctuation">(</span>Bundle<span class="token punctuation">)</span> args<span class="token punctuation">.</span>arg2<span class="token punctuation">;</span>

        args<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">boolean</span> succeeded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mViewRootImpl<span class="token punctuation">.</span>mView <span class="token operator">==</span> null <span class="token operator">||</span> mViewRootImpl<span class="token punctuation">.</span>mAttachInfo <span class="token operator">==</span> null <span class="token operator">||</span>
                    mViewRootImpl<span class="token punctuation">.</span>mStopped <span class="token operator">||</span> mViewRootImpl<span class="token punctuation">.</span>mPausedForTransition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            mViewRootImpl<span class="token punctuation">.</span>mAttachInfo<span class="token punctuation">.</span>mAccessibilityFetchFlags <span class="token operator">=</span> flags<span class="token punctuation">;</span>
            View target <span class="token operator">=</span> null<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>accessibilityViewId <span class="token operator">!=</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ROOT_ITEM_ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                target <span class="token operator">=</span> <span class="token function">findViewByAccessibilityId</span><span class="token punctuation">(</span>accessibilityViewId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                target <span class="token operator">=</span> mViewRootImpl<span class="token punctuation">.</span>mView<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token function">isShown</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>action <span class="token operator">==</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>accessibilityActionClickOnClickableSpan<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Handle this hidden action separately</span>
                    succeeded <span class="token operator">=</span> <span class="token function">handleClickableSpanActionUiThread</span><span class="token punctuation">(</span>
                            target<span class="token punctuation">,</span> virtualDescendantId<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    AccessibilityNodeProvider provider <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">getAccessibilityNodeProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>provider <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        succeeded <span class="token operator">=</span> provider<span class="token punctuation">.</span><span class="token function">performAction</span><span class="token punctuation">(</span>virtualDescendantId<span class="token punctuation">,</span> action<span class="token punctuation">,</span>
                                arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>virtualDescendantId <span class="token operator">==</span> AccessibilityNodeProvider<span class="token punctuation">.</span>HOST_VIEW_ID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        succeeded <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">performAccessibilityAction</span><span class="token punctuation">(</span>action<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//这里</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                mViewRootImpl<span class="token punctuation">.</span>mAttachInfo<span class="token punctuation">.</span>mAccessibilityFetchFlags <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                callback<span class="token punctuation">.</span><span class="token function">setPerformAccessibilityActionResult</span><span class="token punctuation">(</span>succeeded<span class="token punctuation">,</span> interactionId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> re<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">/* ignore - the other side will time out */</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li><li style="color: rgb(153, 153, 153);">52</li><li style="color: rgb(153, 153, 153);">53</li><li style="color: rgb(153, 153, 153);">54</li><li style="color: rgb(153, 153, 153);">55</li><li style="color: rgb(153, 153, 153);">56</li><li style="color: rgb(153, 153, 153);">57</li><li style="color: rgb(153, 153, 153);">58</li><li style="color: rgb(153, 153, 153);">59</li><li style="color: rgb(153, 153, 153);">60</li><li style="color: rgb(153, 153, 153);">61</li><li style="color: rgb(153, 153, 153);">62</li><li style="color: rgb(153, 153, 153);">63</li><li style="color: rgb(153, 153, 153);">64</li><li style="color: rgb(153, 153, 153);">65</li><li style="color: rgb(153, 153, 153);">66</li><li style="color: rgb(153, 153, 153);">67</li><li style="color: rgb(153, 153, 153);">68</li><li style="color: rgb(153, 153, 153);">69</li><li style="color: rgb(153, 153, 153);">70</li><li style="color: rgb(153, 153, 153);">71</li><li style="color: rgb(153, 153, 153);">72</li><li style="color: rgb(153, 153, 153);">73</li><li style="color: rgb(153, 153, 153);">74</li><li style="color: rgb(153, 153, 153);">75</li><li style="color: rgb(153, 153, 153);">76</li><li style="color: rgb(153, 153, 153);">77</li><li style="color: rgb(153, 153, 153);">78</li><li style="color: rgb(153, 153, 153);">79</li><li style="color: rgb(153, 153, 153);">80</li><li style="color: rgb(153, 153, 153);">81</li><li style="color: rgb(153, 153, 153);">82</li><li style="color: rgb(153, 153, 153);">83</li><li style="color: rgb(153, 153, 153);">84</li><li style="color: rgb(153, 153, 153);">85</li><li style="color: rgb(153, 153, 153);">86</li><li style="color: rgb(153, 153, 153);">87</li><li style="color: rgb(153, 153, 153);">88</li><li style="color: rgb(153, 153, 153);">89</li><li style="color: rgb(153, 153, 153);">90</li><li style="color: rgb(153, 153, 153);">91</li><li style="color: rgb(153, 153, 153);">92</li><li style="color: rgb(153, 153, 153);">93</li><li style="color: rgb(153, 153, 153);">94</li><li style="color: rgb(153, 153, 153);">95</li><li style="color: rgb(153, 153, 153);">96</li><li style="color: rgb(153, 153, 153);">97</li><li style="color: rgb(153, 153, 153);">98</li><li style="color: rgb(153, 153, 153);">99</li><li style="color: rgb(153, 153, 153);">100</li><li style="color: rgb(153, 153, 153);">101</li><li style="color: rgb(153, 153, 153);">102</li><li style="color: rgb(153, 153, 153);">103</li><li style="color: rgb(153, 153, 153);">104</li><li style="color: rgb(153, 153, 153);">105</li><li style="color: rgb(153, 153, 153);">106</li><li style="color: rgb(153, 153, 153);">107</li><li style="color: rgb(153, 153, 153);">108</li><li style="color: rgb(153, 153, 153);">109</li><li style="color: rgb(153, 153, 153);">110</li><li style="color: rgb(153, 153, 153);">111</li></ul></pre>
<p>我们可以看到最终通过target.performAccessibilityAction调用到View的相关方法里</p>
<h4><a id="2View_1298"></a>2.View</h4>
<blockquote>
<p>目录:</p>
</blockquote>
<pre class="prettyprint"><code class="prism language-java has-numbering">    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">performAccessibilityAction</span><span class="token punctuation">(</span><span class="token keyword">int</span> action<span class="token punctuation">,</span> Bundle arguments<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>mAccessibilityDelegate <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> mAccessibilityDelegate<span class="token punctuation">.</span><span class="token function">performAccessibilityAction</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> action<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token function">performAccessibilityActionInternal</span><span class="token punctuation">(</span>action<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

 <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">performAccessibilityActionInternal</span><span class="token punctuation">(</span><span class="token keyword">int</span> action<span class="token punctuation">,</span> Bundle arguments<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNestedScrollingEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>action <span class="token operator">==</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_SCROLL_BACKWARD
                <span class="token operator">||</span> action <span class="token operator">==</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_SCROLL_FORWARD
                <span class="token operator">||</span> action <span class="token operator">==</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>accessibilityActionScrollUp
                <span class="token operator">||</span> action <span class="token operator">==</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>accessibilityActionScrollLeft
                <span class="token operator">||</span> action <span class="token operator">==</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>accessibilityActionScrollDown
                <span class="token operator">||</span> action <span class="token operator">==</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>accessibilityActionScrollRight<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">dispatchNestedPrePerformAccessibilityAction</span><span class="token punctuation">(</span>action<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        	<span class="token comment">//点击事件</span>
            <span class="token keyword">case</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_CLICK<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isClickable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">performClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_LONG_CLICK<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isLongClickable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">performLongClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_FOCUS<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// Get out of touch mode since accessibility</span>
                    <span class="token comment">// wants to move focus around.</span>
                    <span class="token function">getViewRootImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ensureTouchMode</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_CLEAR_FOCUS<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">clearFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">isFocused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_SELECT<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token function">isSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_CLEAR_SELECTION<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">isSelected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_ACCESSIBILITY_FOCUS<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isAccessibilityFocused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token function">requestAccessibilityFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_CLEAR_ACCESSIBILITY_FOCUS<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isAccessibilityFocused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">clearAccessibilityFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_NEXT_AT_MOVEMENT_GRANULARITY<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">final</span> <span class="token keyword">int</span> granularity <span class="token operator">=</span> arguments<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span>
                            AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">final</span> <span class="token keyword">boolean</span> extendSelection <span class="token operator">=</span> arguments<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span>
                            AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token function">traverseAtGranularity</span><span class="token punctuation">(</span>granularity<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> extendSelection<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">final</span> <span class="token keyword">int</span> granularity <span class="token operator">=</span> arguments<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span>
                            AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">final</span> <span class="token keyword">boolean</span> extendSelection <span class="token operator">=</span> arguments<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span>
                            AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token function">traverseAtGranularity</span><span class="token punctuation">(</span>granularity<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> extendSelection<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_SET_SELECTION<span class="token operator">:</span> <span class="token punctuation">{</span>
                CharSequence text <span class="token operator">=</span> <span class="token function">getIterableTextForAccessibility</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>text <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">final</span> <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token punctuation">(</span>arguments <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token operator">?</span> arguments<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span>
                        AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_ARGUMENT_SELECTION_START_INT<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">final</span> <span class="token keyword">int</span> end <span class="token operator">=</span> <span class="token punctuation">(</span>arguments <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token operator">?</span> arguments<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span>
                AccessibilityNodeInfo<span class="token punctuation">.</span>ACTION_ARGUMENT_SELECTION_END_INT<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token comment">// Only cursor position can be specified (selection length == 0)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">getAccessibilitySelectionStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> start
                        <span class="token operator">||</span> <span class="token function">getAccessibilitySelectionEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> end<span class="token punctuation">)</span>
                        <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>start <span class="token operator">==</span> end<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">setAccessibilitySelection</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token function">notifyViewAccessibilityStateChangedIfNeeded</span><span class="token punctuation">(</span>
                            AccessibilityEvent<span class="token punctuation">.</span>CONTENT_CHANGE_TYPE_UNDEFINED<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>accessibilityActionShowOnScreen<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>mAttachInfo <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">final</span> Rect r <span class="token operator">=</span> mAttachInfo<span class="token punctuation">.</span>mTmpInvalRect<span class="token punctuation">;</span>
                    <span class="token function">getDrawingRect</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token function">requestRectangleOnScreen</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>accessibilityActionContextClick<span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isContextClickable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">performContextClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">performClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">boolean</span> result<span class="token punctuation">;</span>
        <span class="token keyword">final</span> ListenerInfo li <span class="token operator">=</span> mListenerInfo<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>li <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> li<span class="token punctuation">.</span>mOnClickListener <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">playSoundEffect</span><span class="token punctuation">(</span>SoundEffectConstants<span class="token punctuation">.</span>CLICK<span class="token punctuation">)</span><span class="token punctuation">;</span>
            li<span class="token punctuation">.</span>mOnClickListener<span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//点击事件回调</span>
            result <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">sendAccessibilityEvent</span><span class="token punctuation">(</span>AccessibilityEvent<span class="token punctuation">.</span>TYPE_VIEW_CLICKED<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">notifyEnterOrExitForAutoFillIfNeeded</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code><ul class="pre-numbering"><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li><li style="color: rgb(153, 153, 153);">7</li><li style="color: rgb(153, 153, 153);">8</li><li style="color: rgb(153, 153, 153);">9</li><li style="color: rgb(153, 153, 153);">10</li><li style="color: rgb(153, 153, 153);">11</li><li style="color: rgb(153, 153, 153);">12</li><li style="color: rgb(153, 153, 153);">13</li><li style="color: rgb(153, 153, 153);">14</li><li style="color: rgb(153, 153, 153);">15</li><li style="color: rgb(153, 153, 153);">16</li><li style="color: rgb(153, 153, 153);">17</li><li style="color: rgb(153, 153, 153);">18</li><li style="color: rgb(153, 153, 153);">19</li><li style="color: rgb(153, 153, 153);">20</li><li style="color: rgb(153, 153, 153);">21</li><li style="color: rgb(153, 153, 153);">22</li><li style="color: rgb(153, 153, 153);">23</li><li style="color: rgb(153, 153, 153);">24</li><li style="color: rgb(153, 153, 153);">25</li><li style="color: rgb(153, 153, 153);">26</li><li style="color: rgb(153, 153, 153);">27</li><li style="color: rgb(153, 153, 153);">28</li><li style="color: rgb(153, 153, 153);">29</li><li style="color: rgb(153, 153, 153);">30</li><li style="color: rgb(153, 153, 153);">31</li><li style="color: rgb(153, 153, 153);">32</li><li style="color: rgb(153, 153, 153);">33</li><li style="color: rgb(153, 153, 153);">34</li><li style="color: rgb(153, 153, 153);">35</li><li style="color: rgb(153, 153, 153);">36</li><li style="color: rgb(153, 153, 153);">37</li><li style="color: rgb(153, 153, 153);">38</li><li style="color: rgb(153, 153, 153);">39</li><li style="color: rgb(153, 153, 153);">40</li><li style="color: rgb(153, 153, 153);">41</li><li style="color: rgb(153, 153, 153);">42</li><li style="color: rgb(153, 153, 153);">43</li><li style="color: rgb(153, 153, 153);">44</li><li style="color: rgb(153, 153, 153);">45</li><li style="color: rgb(153, 153, 153);">46</li><li style="color: rgb(153, 153, 153);">47</li><li style="color: rgb(153, 153, 153);">48</li><li style="color: rgb(153, 153, 153);">49</li><li style="color: rgb(153, 153, 153);">50</li><li style="color: rgb(153, 153, 153);">51</li><li style="color: rgb(153, 153, 153);">52</li><li style="color: rgb(153, 153, 153);">53</li><li style="color: rgb(153, 153, 153);">54</li><li style="color: rgb(153, 153, 153);">55</li><li style="color: rgb(153, 153, 153);">56</li><li style="color: rgb(153, 153, 153);">57</li><li style="color: rgb(153, 153, 153);">58</li><li style="color: rgb(153, 153, 153);">59</li><li style="color: rgb(153, 153, 153);">60</li><li style="color: rgb(153, 153, 153);">61</li><li style="color: rgb(153, 153, 153);">62</li><li style="color: rgb(153, 153, 153);">63</li><li style="color: rgb(153, 153, 153);">64</li><li style="color: rgb(153, 153, 153);">65</li><li style="color: rgb(153, 153, 153);">66</li><li style="color: rgb(153, 153, 153);">67</li><li style="color: rgb(153, 153, 153);">68</li><li style="color: rgb(153, 153, 153);">69</li><li style="color: rgb(153, 153, 153);">70</li><li style="color: rgb(153, 153, 153);">71</li><li style="color: rgb(153, 153, 153);">72</li><li style="color: rgb(153, 153, 153);">73</li><li style="color: rgb(153, 153, 153);">74</li><li style="color: rgb(153, 153, 153);">75</li><li style="color: rgb(153, 153, 153);">76</li><li style="color: rgb(153, 153, 153);">77</li><li style="color: rgb(153, 153, 153);">78</li><li style="color: rgb(153, 153, 153);">79</li><li style="color: rgb(153, 153, 153);">80</li><li style="color: rgb(153, 153, 153);">81</li><li style="color: rgb(153, 153, 153);">82</li><li style="color: rgb(153, 153, 153);">83</li><li style="color: rgb(153, 153, 153);">84</li><li style="color: rgb(153, 153, 153);">85</li><li style="color: rgb(153, 153, 153);">86</li><li style="color: rgb(153, 153, 153);">87</li><li style="color: rgb(153, 153, 153);">88</li><li style="color: rgb(153, 153, 153);">89</li><li style="color: rgb(153, 153, 153);">90</li><li style="color: rgb(153, 153, 153);">91</li><li style="color: rgb(153, 153, 153);">92</li><li style="color: rgb(153, 153, 153);">93</li><li style="color: rgb(153, 153, 153);">94</li><li style="color: rgb(153, 153, 153);">95</li><li style="color: rgb(153, 153, 153);">96</li><li style="color: rgb(153, 153, 153);">97</li><li style="color: rgb(153, 153, 153);">98</li><li style="color: rgb(153, 153, 153);">99</li><li style="color: rgb(153, 153, 153);">100</li><li style="color: rgb(153, 153, 153);">101</li><li style="color: rgb(153, 153, 153);">102</li><li style="color: rgb(153, 153, 153);">103</li><li style="color: rgb(153, 153, 153);">104</li><li style="color: rgb(153, 153, 153);">105</li><li style="color: rgb(153, 153, 153);">106</li><li style="color: rgb(153, 153, 153);">107</li><li style="color: rgb(153, 153, 153);">108</li><li style="color: rgb(153, 153, 153);">109</li><li style="color: rgb(153, 153, 153);">110</li><li style="color: rgb(153, 153, 153);">111</li><li style="color: rgb(153, 153, 153);">112</li><li style="color: rgb(153, 153, 153);">113</li><li style="color: rgb(153, 153, 153);">114</li><li style="color: rgb(153, 153, 153);">115</li><li style="color: rgb(153, 153, 153);">116</li><li style="color: rgb(153, 153, 153);">117</li><li style="color: rgb(153, 153, 153);">118</li><li style="color: rgb(153, 153, 153);">119</li><li style="color: rgb(153, 153, 153);">120</li><li style="color: rgb(153, 153, 153);">121</li><li style="color: rgb(153, 153, 153);">122</li><li style="color: rgb(153, 153, 153);">123</li><li style="color: rgb(153, 153, 153);">124</li><li style="color: rgb(153, 153, 153);">125</li><li style="color: rgb(153, 153, 153);">126</li><li style="color: rgb(153, 153, 153);">127</li><li style="color: rgb(153, 153, 153);">128</li><li style="color: rgb(153, 153, 153);">129</li><li style="color: rgb(153, 153, 153);">130</li><li style="color: rgb(153, 153, 153);">131</li><li style="color: rgb(153, 153, 153);">132</li><li style="color: rgb(153, 153, 153);">133</li><li style="color: rgb(153, 153, 153);">134</li><li style="color: rgb(153, 153, 153);">135</li><li style="color: rgb(153, 153, 153);">136</li><li style="color: rgb(153, 153, 153);">137</li><li style="color: rgb(153, 153, 153);">138</li><li style="color: rgb(153, 153, 153);">139</li><li style="color: rgb(153, 153, 153);">140</li><li style="color: rgb(153, 153, 153);">141</li><li style="color: rgb(153, 153, 153);">142</li><li style="color: rgb(153, 153, 153);">143</li><li style="color: rgb(153, 153, 153);">144</li></ul></pre>
<p>至此AccessibilityServic所有内容基本都分析完了</p>

                                    </div>
                <link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-b6c3c6d139.css" rel="stylesheet">
                    </div>


</div>


</body></html>