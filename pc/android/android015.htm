<html><head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title></title>
  <link href="images/style.css" rel="stylesheet">
</head>

<body class="stackedit"><div class="stackedit__html">

<section class="ouvJEz"><h1 class="_1RuRku">「应用安全」拿来即用：Android App运行时签名校验</h1><div class="rEsl9f"><div class="_2mYfmT"><a class="_1OhGeD" href="/u/acc15c2bec23" target="_blank" rel="noopener noreferrer"><img class="_13D2Eh" alt="" src="images/android01501.jpg"></a><div style="margin-left: 8px;"><div class="_3U4Smb"><span class="FxYr8x"><a class="_1OhGeD" href="/u/acc15c2bec23" target="_blank" rel="noopener noreferrer">蔻玉</a></span><button class="_3kba3h _1OyPqC _3Mi9q9 _34692-" type="button" data-locale="zh-CN"><span>关注</span></button></div><div class="s-dsoj"><span class="_3tCVn5"><i class="anticon" aria-label="ic-diamond"><svg xmlns="http://www.w3.org/2000/svg" class="" aria-hidden="true" fill="currentColor" focusable="false" width="1em" height="1em"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#ic-diamond" /></svg></i><span>0.093</span></span><time datetime="2016-10-16T08:16:11.000Z">2016.10.16 16:16:11</time><span>字数 175</span><span>阅读 811</span></div></div></div></div><article class="_2rhmJa"><blockquote>
<p>有时候我们为了防止自己的应用被反编译后重新打包，不得不采取运行时进行签名校验的方式。<br>
因为会经常用到，所以在这里整理了一下校验方式。<br>
代码当中的注释很详细，故不再多做说明了。</p>
</blockquote>
<hr>
<pre class="line-numbers  language-none"><code class="示例代码： language-示例代码：  language-none">
/**
 * Create By HaoRui
 */
public class SignCheck {
    private Context context;
    private String cer = null;
    private String realCer = null;
    private static final String TAG = "SignCheck";

    public SignCheck(Context context) {
        this.context = context;
        this.cer = getCertificateSHA1Fingerprint();
    }

    public SignCheck(Context context, String realCer) {
        this.context = context;
        this.realCer = realCer;
        this.cer = getCertificateSHA1Fingerprint();
    }

    public String getRealCer() {
        return realCer;
    }

    /**
     * 设置正确的签名
     *
     * @param realCer
     */
    public void setRealCer(String realCer) {
        this.realCer = realCer;
    }

    /**
     * 获取应用的签名
     *
     * @return
     */
    public String getCertificateSHA1Fingerprint() {
        //获取包管理器
        PackageManager pm = context.getPackageManager();

        //获取当前要获取 SHA1 值的包名，也可以用其他的包名，但需要注意，
        //在用其他包名的前提是，此方法传递的参数 Context 应该是对应包的上下文。
        String packageName = context.getPackageName();

        //返回包括在包中的签名信息
        int flags = PackageManager.GET_SIGNATURES;

        PackageInfo packageInfo = null;

        try {
            //获得包的所有内容信息类
            packageInfo = pm.getPackageInfo(packageName, flags);
        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
        }

        //签名信息
        Signature[] signatures = packageInfo.signatures;
        byte[] cert = signatures[0].toByteArray();

        //将签名转换为字节数组流
        InputStream input = new ByteArrayInputStream(cert);

        //证书工厂类，这个类实现了出厂合格证算法的功能
        CertificateFactory cf = null;

        try {
            cf = CertificateFactory.getInstance("X509");
        } catch (Exception e) {
            e.printStackTrace();
        }

        //X509 证书，X.509 是一种非常通用的证书格式
        X509Certificate c = null;

        try {
            c = (X509Certificate) cf.generateCertificate(input);
        } catch (Exception e) {
            e.printStackTrace();
        }

        String hexString = null;

        try {
            //加密算法的类，这里的参数可以使 MD4,MD5 等加密算法
            MessageDigest md = MessageDigest.getInstance("SHA1");

            //获得公钥
            byte[] publicKey = md.digest(c.getEncoded());

            //字节到十六进制的格式转换
            hexString = byte2HexFormatted(publicKey);

        } catch (NoSuchAlgorithmException e1) {
            e1.printStackTrace();
        } catch (CertificateEncodingException e) {
            e.printStackTrace();
        }
        return hexString;
    }

    //这里是将获取到得编码进行16 进制转换
    private String byte2HexFormatted(byte[] arr) {

        StringBuilder str = new StringBuilder(arr.length * 2);

        for (int i = 0; i &lt;arr.length; i++) {
            String h = Integer.toHexString(arr[i]);
            int l =h.length();
            if (l == 1)
                h = "0" + h;
            if (l &gt; 2)
                h = h.substring(l - 2, l);
            str.append(h.toUpperCase());
            if (i &lt; (arr.length - 1))
                str.append(':');
        }
        return str.toString();
    }

    /**
     * 检测签名是否正确
     * @return true 签名正常 false 签名不正常
     */
    public boolean check() {

        if (this.realCer != null) {
            cer = cer.trim();
            realCer = realCer.trim();
            if (this.cer.equals(this.realCer)) {
                return true;
            }
        }else {
            Log.e(TAG, "未给定真实的签名 SHA-1 值");
        }
        return false;
    }
}
<span class="line-numbers-rows" aria-hidden="true"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code><button class="VJbwyy" aria-label="复制代码" type="button"><i class="anticon anticon-copy" aria-label="icon: copy"><svg xmlns="http://www.w3.org/2000/svg" class="" aria-hidden="true" fill="currentColor" viewBox="64 64 896 896" focusable="false" width="1em" height="1em" data-icon="copy"><path d="M 832 64 H 296 c -4.4 0 -8 3.6 -8 8 v 56 c 0 4.4 3.6 8 8 8 h 496 v 688 c 0 4.4 3.6 8 8 8 h 56 c 4.4 0 8 -3.6 8 -8 V 96 c 0 -17.7 -14.3 -32 -32 -32 Z M 704 192 H 192 c -17.7 0 -32 14.3 -32 32 v 530.7 c 0 8.5 3.4 16.6 9.4 22.6 l 173.3 173.3 c 2.2 2.2 4.7 4 7.4 5.5 v 1.9 h 4.2 c 3.5 1.3 7.2 2 11 2 H 704 c 17.7 0 32 -14.3 32 -32 V 224 c 0 -17.7 -14.3 -32 -32 -32 Z M 350 856.2 L 263.9 770 H 350 v 86.2 Z M 664 888 H 414 V 746 c 0 -22.1 -17.9 -40 -40 -40 H 232 V 264 h 432 v 624 Z" /></svg></i></button></pre>
<p><strong>使用方法：</strong><br>
首先使用 keytool 获取签名的 sha-1 值，命令为 keytool -list -v -keystore xxx.jks （将 xx.jks 换成你的应用签名所用文件， 这里会提示输入 keystore 的密码  ps：签名文件在eclipse 是 .keystore 文件， 在 Android Studio中就是 .jks 文件））</p>
<p>然后使用如下代码校验签名：</p>
<pre class="line-numbers  language-kotlin"><code class="  language-kotlin">SignCheck signCheck <span class="token operator">=</span> new <span class="token function">SignCheck</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"27:19:6E:38:6B:87:5E:76:AD:F7:00:E7:EA:84:E4:C6:EE:E3:3D:FA"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>signCheck<span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//TODO 签名正常</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span>                <span class="token punctuation">{</span>
  <span class="token comment">//TODO 签名不正确</span>
  newAlertDialog<span class="token punctuation">.</span><span class="token function">Builder</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">"请前往官方渠道下载正版 app， http://....."</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setPositiveButton</span><span class="token punctuation">(</span><span class="token string">"确定"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="line-numbers-rows" aria-hidden="true"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code><button class="VJbwyy" aria-label="复制代码" type="button"><i class="anticon anticon-copy" aria-label="icon: copy"><svg xmlns="http://www.w3.org/2000/svg" class="" aria-hidden="true" fill="currentColor" viewBox="64 64 896 896" focusable="false" width="1em" height="1em" data-icon="copy"><path d="M 832 64 H 296 c -4.4 0 -8 3.6 -8 8 v 56 c 0 4.4 3.6 8 8 8 h 496 v 688 c 0 4.4 3.6 8 8 8 h 56 c 4.4 0 8 -3.6 8 -8 V 96 c 0 -17.7 -14.3 -32 -32 -32 Z M 704 192 H 192 c -17.7 0 -32 14.3 -32 32 v 530.7 c 0 8.5 3.4 16.6 9.4 22.6 l 173.3 173.3 c 2.2 2.2 4.7 4 7.4 5.5 v 1.9 h 4.2 c 3.5 1.3 7.2 2 11 2 H 704 c 17.7 0 32 -14.3 32 -32 V 224 c 0 -17.7 -14.3 -32 -32 -32 Z M 350 856.2 L 263.9 770 H 350 v 86.2 Z M 664 888 H 414 V 746 c 0 -22.1 -17.9 -40 -40 -40 H 232 V 264 h 432 v 624 Z" /></svg></i></button></pre>
</article><div></div><div class="_1kCBjS"><div class="_18vaTa"><div class="_3BUZPB"><div tabindex="-1" class="_2Bo4Th" role="button" aria-label="给文章点赞"><i class="anticon" aria-label="ic-like"><svg xmlns="http://www.w3.org/2000/svg" class="" aria-hidden="true" fill="currentColor" focusable="false" width="1em" height="1em"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#ic-like" /></svg></i></div><span tabindex="-1" class="_1LOh_5" role="button" aria-label="查看点赞列表">2人点赞<i class="anticon anticon-right" aria-label="icon: right"><svg xmlns="http://www.w3.org/2000/svg" class="" aria-hidden="true" fill="currentColor" viewBox="64 64 896 896" focusable="false" width="1em" height="1em" data-icon="right"><path d="M 765.7 486.8 L 314.9 134.7 A 7.97 7.97 0 0 0 302 141 v 77.3 c 0 4.9 2.3 9.6 6.1 12.6 l 360 281.1 l -360 281.1 c -3.9 3 -6.1 7.7 -6.1 12.6 V 883 c 0 6.7 7.7 10.4 12.9 6.3 l 450.8 -352.1 a 31.96 31.96 0 0 0 0 -50.4 Z" /></svg></i></span></div><div class="_3BUZPB"><div tabindex="-1" class="_2Bo4Th" role="button"><i class="anticon" aria-label="ic-dislike"><svg xmlns="http://www.w3.org/2000/svg" class="" aria-hidden="true" fill="currentColor" focusable="false" width="1em" height="1em"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#ic-dislike" /></svg></i></div></div></div><div class="_18vaTa"><a class="_3BUZPB _1x1ok9 _1OhGeD" href="/nb/31128507" target="_blank" rel="noopener noreferrer"><i class="anticon" aria-label="ic-notebook"><svg xmlns="http://www.w3.org/2000/svg" class="" aria-hidden="true" fill="currentColor" focusable="false" width="1em" height="1em"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#ic-notebook" /></svg></i><span>技术  (发布)</span></a><div class="_3BUZPB ant-dropdown-trigger"><div class="_2Bo4Th"><i class="anticon" aria-label="ic-others"><svg xmlns="http://www.w3.org/2000/svg" class="" aria-hidden="true" fill="currentColor" focusable="false" width="1em" height="1em"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#ic-others" /></svg></i></div></div></div></div><div class="_19DgIp" style="margin-top: 24px; margin-bottom: 24px;"></div><div class="_13lIbp"><div class="_191KSt">"小礼物走一走，来简书关注我"</div><button class="_1OyPqC _3Mi9q9 _2WY0RL _1YbC5u" type="button"><span>赞赏支持</span></button><span class="_3zdmIj">还没有人赞赏，支持一下</span></div><div class="d0hShY"><a class="_1OhGeD" href="/u/acc15c2bec23" target="_blank" rel="noopener noreferrer"><img class="_27NmgV" alt="  " src="images/android01502.jpg"></a><div class="Uz-vZq"><div class="Cqpr1X"><a title="蔻玉" class="HC3FFO _1OhGeD" href="/u/acc15c2bec23" target="_blank" rel="noopener noreferrer">蔻玉</a><span title="居于一隅，度日往复。" class="_2WEj6j">居于一隅，度日往复。</span></div><div class="lJvI3S"><span>总资产22 (约2.28元)</span><span>共写了1215字</span><span>获得29个赞</span><span>共7个粉丝</span></div></div><button class="_1OyPqC _3Mi9q9" type="button" data-locale="zh-CN"><span>关注</span></button></div></section>

</div>


</body></html>