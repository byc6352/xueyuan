<html><head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Android 源码系列之从源码的角度深入理解AccessibilityService，打造自己的APP小外挂(上) - llew2011的专栏 - CSDN博客</title>
  <link href="images/style.css" rel="stylesheet">
</head>

<body class="stackedit"><div class="stackedit__html">

<div class="article_content clearfix" id="article_content" style="overflow: hidden;">
                                                <div class="article-copyright">
                <span class="creativecommons">
                <a href="http://creativecommons.org/licenses/by-sa/4.0/" rel="license">
                    </a>
            <span>
                版权声明：本文为博主原创文章，遵循<a href="http://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接和本声明。            </span>
               <div class="article-source-link2222">
                    本文链接：<a href="https://blog.csdn.net/llew2011/article/details/52822148">https://blog.csdn.net/llew2011/article/details/52822148</a>
                </div>
            </span>
                    </div>
                                                    <!--一个博主专栏付费入口-->
             
             <!--一个博主专栏付费入口结束-->
            <link href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-d284373521.css" rel="stylesheet">
                                        <link href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-d284373521.css" rel="stylesheet">
                <div class="htmledit_views" id="content_views">
                                            
<p>&nbsp; &nbsp; &nbsp; &nbsp; 转载请注明出处：<a href="http://blog.csdn.net/llew2011/article/details/52822148" rel="nofollow">http://blog.csdn.net/llew2011/article/details/52822148</a></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 说起外挂特别是玩游戏的小伙伴估计对它很熟悉，肯定有部分小伙伴使用过，至于为什么使用它，你懂得(*^__^*) ……我最早接触外挂是在大二的时候，那时候盛行玩QQ农场，早上一睁眼就是打开电脑先把自己的菜收了，收完之后再去偷别人的；后来童靴说非凡软件上有一个偷菜外挂，于是赶紧整了一个，有了外挂之后就告别了体力时代，省时又省力……既然在PC上有外挂，那在智能手机上可以做外挂呢？答案是OK的，今天这篇文章就是讲解一下如何在Android设备上制作自己的小外挂，需要说明的是本文仅仅做技术交流……</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 产生做外挂的念头是在去年春节时支付宝推的咻一咻咻大奖活动，那时候每到咻一咻的时间点就赶紧打开支付宝进入咻一咻页面然后不停的点击咻一咻按钮，后来我就想与其这样一直重复点击按钮不如花点时间整个咻一咻小外挂，于是花了小半天时间写了一个，经过实践发现效果还挺理想的……其实在Android设备上制作小外挂并不是多么高深的技术，核心就是利用AccessibilityService，如果你对该类已经很熟悉，请跳过本文(*^__^*) ……</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; AccessibilityService是Google为了方便那些身体不便的用户来使用Android设备而提供的一种无障碍服务，该服务可以帮助那些身体不便的用户更加简单的使用和操作Android设备，这些操作包括文字转语音，触觉反馈，收拾操作，轨迹球和手柄操作等。AccessibilityService提供的这种服务就是用来监听指定的应用的，例如监听指定应用页面内容的边界，页面的跳转，焦点的变化等等。因此我们可以利用该服务做我们想做的小外挂，比如自动安装APP，抢红包外挂还有我之前写的咻一咻外挂，今天我们就讲解一下如何利用AccessibilityService来实现自动安装APP的小外挂。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; AccessibilityService是Service的子类，但是它的声明周期是由系统来管理的，那也就是说我们要想启动该服务就不能够像平时那样直接startService()了而是需要在Android设备的辅助功能列表中手动开启该服务，当开启该服务后其生命周期就交由系统来管理和维护了。需要注意的是虽然不需要通过startService()等方式来启动AccessibilityService服务，但是AccessibilityService依然是需要在配置文件AndroidManifest.xml中配置。由于AccessibilityService是抽象类不能直接使用，所以需要先自定义一个类来继承AccessibilityService，自定义AutoInstallApkService服务类代码如下：</p>
<pre><code class="language-java hljs"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AutoInstallApkService</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AccessibilityService</span> </span>{</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-meta">@Override</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onAccessibilityEvent</span><span class="hljs-params">(AccessibilityEvent event)</span> </span>{</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-comment">// 事件入口处</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-meta">@Override</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onInterrupt</span><span class="hljs-params">()</span> </span>{</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">}</div></div></li></ol></code></pre>&nbsp; &nbsp; &nbsp; &nbsp; AutoInstallApkService重写了AccessibilityServiced的俩抽象方法，onAccessibilityEvent()方法表示该服务接收系统传递进来的辅助事件(该事件可能是当前窗口内容发生变化触发的，也可能是当前窗口焦点发生变化触发的，还有可能是系统弹出Notification触发的等等)，该方法为事件入口，每当监听的指定应用触发了指定事件的时候都会回调此方法。而onInterrupt()方法表示服务中断发生的回调，服务中断意味着不能接收回调了，但是可以在方法中做些相关业务等操作。
<p>&nbsp; &nbsp; &nbsp; &nbsp; 定义完了我们的AutoInstallApkService服务后，接下就是在AndroidManifest.xml文件中配置该服务了，根据官方文档，配置文件如下：</p>
<pre><code class="language-html hljs xml"><ol class="hljs-ln" style="width: 775px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="php"><span class="hljs-meta">&lt;?</span>xml version=<span class="hljs-string">"1.0"</span> encoding=<span class="hljs-string">"utf-8"</span><span class="hljs-meta">?&gt;</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-tag">&lt;<span class="hljs-name">manifest</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">"http://schemas.android.com/apk/res/android"</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-attr">package</span>=<span class="hljs-string">"com.llew.wb.project.service.accessibility.installapk"</span>&gt;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-tag">&lt;<span class="hljs-name">application</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-attr">android:allowBackup</span>=<span class="hljs-string">"true"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-attr">android:icon</span>=<span class="hljs-string">"@mipmap/ic_launcher"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-attr">android:label</span>=<span class="hljs-string">"@string/app_name"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-attr">android:supportsRtl</span>=<span class="hljs-string">"true"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-attr">android:theme</span>=<span class="hljs-string">"@style/AppTheme"</span>&gt;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-tag">&lt;<span class="hljs-name">activity</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">".ui.activity.MainActivity"</span>&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.intent.action.MAIN"</span> /&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-tag">&lt;<span class="hljs-name">category</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.intent.category.LAUNCHER"</span> /&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-tag">&lt;/<span class="hljs-name">activity</span>&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-tag">&lt;<span class="hljs-name">service</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-attr">android:name</span>=<span class="hljs-string">".ui.service.AutoInstallApkService"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-attr">android:label</span>=<span class="hljs-string">"@string/app_name"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-attr">android:permission</span>=<span class="hljs-string">"android.permission.BIND_ACCESSIBILITY_SERVICE"</span>&gt;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-tag">&lt;<span class="hljs-name">intent-filter</span>&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-tag">&lt;<span class="hljs-name">action</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.accessibilityservice.AccessibilityService"</span> /&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-tag">&lt;/<span class="hljs-name">intent-filter</span>&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-tag">&lt;<span class="hljs-name">meta-data</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-attr">android:name</span>=<span class="hljs-string">"android.accessibilityservice"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-attr">android:resource</span>=<span class="hljs-string">"@xml/accessibility_service_config"</span> /&gt;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-tag">&lt;/<span class="hljs-name">service</span>&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-tag">&lt;/<span class="hljs-name">application</span>&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-tag">&lt;/<span class="hljs-name">manifest</span>&gt;</span></div></div></li></ol></code></pre>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 在配置文件中配置了我们的AutoInstallApkService服务，配置服务的时候需要注意以下几点：</p>
<ol><li>添加label标签<br>
&nbsp; &nbsp; &nbsp; &nbsp; AutoInstallApkService需要添加<span style='color: rgb(255, 0, 0); font-family: Consolas, "Courier New", Courier, mono, serif;'>label</span>标签，标签表示服务的名字，应用安装后会在手机辅助功能的列表中显示，若没定义标签则不显示</li><li>添加系统权限<br>
&nbsp; &nbsp; &nbsp; &nbsp; 系统权限<span class="attribute" style='border: currentColor; border-image: none; color: rgb(255, 0, 0); font-family: Consolas, "Courier New", Courier, mono, serif;'>android:permission</span><span style='border: currentColor; border-image: none; font-family: Consolas, "Courier New", Courier, mono, serif;'>=</span><span class="attribute-value" style='border: currentColor; border-image: none; color: rgb(0, 0, 255); font-family: Consolas, "Courier New", Courier, mono, serif;'>"android.permission.BIND_ACCESSIBILITY_SERVICE"</span>是一定要添加的，否则该服务会被系统忽略</li><li>添加过滤器<br>
&nbsp; &nbsp; &nbsp; &nbsp; 一定要添加intent为的<span class="attribute" style='border: currentColor; border-image: none; color: rgb(255, 0, 0); font-family: Consolas, "Courier New", Courier, mono, serif;'>android:name</span><span style='border: currentColor; border-image: none; font-family: Consolas, "Courier New", Courier, mono, serif;'>=</span><span class="attribute-value" style='border: currentColor; border-image: none; color: rgb(0, 0, 255); font-family: Consolas, "Courier New", Courier, mono, serif;'>"android.accessibilityservice.AccessibilityService"</span>过滤器，否则该服务会被系统忽略</li><li>meta-data配置文件<br>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="tag-name" style='border: currentColor; border-image: none; color: rgb(153, 51, 0); font-family: Consolas, "Courier New", Courier, mono, serif; font-weight: bold;'>
meta-data</span>中<span style='color: rgb(255, 0, 0); font-family: Consolas, "Courier New", Courier, mono, serif;'>android:name</span>表示配置的服务名称，值是固定写法不能修改，<span style='color: rgb(255, 0, 0); font-family: Consolas, "Courier New", Courier, mono, serif;'>android:resource</span>表示引用的具体配置文件，本例引用的是accessibility_service_config.xml文件【注意：此配置是在4.0版本之后的写法，在低版本中可使用另一种写法，稍后会有讲解】</li></ol><p>&nbsp; &nbsp; &nbsp; &nbsp; 看完了manifest配置文件后，我们看一下在res目录下的xml文件夹中的accessibility_service_config.xml文件，代码如下：</p>
<pre><code class="language-html hljs xml"><ol class="hljs-ln" style="width: 698px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="php"><span class="hljs-meta">&lt;?</span>xml version=<span class="hljs-string">"1.0"</span> encoding=<span class="hljs-string">"utf-8"</span><span class="hljs-meta">?&gt;</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-tag">&lt;<span class="hljs-name">accessibility-service</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">"http://schemas.android.com/apk/res/android"</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-attr">android:accessibilityEventTypes</span>=<span class="hljs-string">"typeAllMask"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-attr">android:accessibilityFeedbackType</span>=<span class="hljs-string">"feedbackAllMask"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-attr">android:accessibilityFlags</span>=<span class="hljs-string">"flagDefault"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-attr">android:canRetrieveWindowContent</span>=<span class="hljs-string">"true"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-attr">android:description</span>=<span class="hljs-string">"@string/app_name"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-attr">android:notificationTimeout</span>=<span class="hljs-string">"100"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-attr">android:packageNames</span>=<span class="hljs-string">"com.android.packageinstaller"</span> /&gt;</div></div></li></ol></code></pre>&nbsp; &nbsp; &nbsp; &nbsp; 在accessibility_service_config.xml中根元素为<span style='color: rgb(153, 51, 0); font-family: Consolas, "Courier New", Courier, mono, serif;'><strong>accessibility-service</strong></span>为，这是固定写法不能更改；各属性值的说明如下：
<ul><li><span style='color: rgb(255, 0, 0); font-family: Consolas, "Courier New", Courier, mono, serif;'>android:accessibilityEventTypes</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; 该属性表示当前AutoInstallApkService服务接收的事件类型，typeAllMask表示接收所有的事件类型，常见的事件有：typeWindowContentChanged(窗口内容发生变化的事件)，typeWindowStateChanged(窗口焦点发生变化的事件)，typeNotificationStateChanged(弹出Notification的事件)等等，如果想了解更多的辅助事件可参阅官方文档</li><li><span style='color: rgb(255, 0, 0); font-family: Consolas, "Courier New", Courier, mono, serif;'>android:accessibilityFeedbackType</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; 该属性表示设置反馈给用户的方式，常见的有语音播报，手机振动等</li><li><span style='color: rgb(255, 0, 0); font-family: Consolas, "Courier New", Courier, mono, serif;'>android:canRetrieveWindowContent</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; 该属性表示是否可以获取当前窗口内容，true表示可以获取否则不可以获取</li><li><span style='color: rgb(255, 0, 0); font-family: Consolas, "Courier New", Courier, mono, serif;'>android:description</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; 表示对当前辅助功能的描述，该值会在Android设置的辅助列表中显示</li><li><span style='color: rgb(255, 0, 0); font-family: Consolas, "Courier New", Courier, mono, serif;'>android:notificationTimeout</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; 表示响应时间，目前设置为100毫秒</li><li><span style='color: rgb(255, 0, 0); font-family: Consolas, "Courier New", Courier, mono, serif;'>android:packageNames</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; 表示当前辅助服务需要监听的应用包名，目前我们是实现自动安装外挂，而安装应用是调用系统的Installer应用，该应用的包名为com.android.packageinstaller，如果想要监听多个应用，中间加逗号。</li></ul><p>&nbsp; &nbsp; &nbsp; &nbsp; 好了，配置完了我们的AutoInstallApkService服务后，接下来是实现具体的安装APK的逻辑了。我们知道在Android设备上安装应用的时候会弹出一个安装确认页面，只有确认后安装才会继续执行……这其实是调用系统默认的PackageInstaller安装器(需要指出的是这个APK是第三方的应用，系统应用的安装可以不通过PackageInstaller来安装)。在PackageInstaller安装界面的操作流程一般是：是否允许安装 → 正在进行安装 → 安装完成确认；这三个安装流程的界面是不一样的，拿中国移动的APK来举个栗子，如下图所示：</p>
<p><img width="198" height="350" alt="" src="images/android02101.jpg">&nbsp;&nbsp;<img width="198" height="350" alt="" src="images/android02102.jpg">&nbsp;&nbsp;<img width="198" height="350" alt="" src="images/android02103.jpg">&nbsp;&nbsp;<img width="198" height="350" alt="" src="images/android02104.jpg"><br></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 上图分别展示了在Android手机上安装APP应用时调用系统安装器PackageInstaller不同状态时的样式，我们的自动安装应用小外挂就是当出现了这以上页面中的任一个时我们该外观都能自动来执行安装流程，既然是自动安装也就是说当出现了这些按钮时我们的外挂能主动的执行按钮的点击操作，这样就省去了人为的手动点击操作，这也是外挂的核心作用。由于PackageInstaller的页面发生了变化都会回调AutoInstallApkService的onAccessibilityEvent()方法，因此我们可以在该方法中来模拟用户的操作，要模拟点击操作就要得到对应的按钮，然后执行按钮的点击事件；那怎么样才能得到目标按钮这个对象呢？在AccessibilityService中提供了一个getRootInActiveWindow()方法，该方法返回一个代表当前活动窗口的根节点AccessibilityNodeInfo实例对象，该对象保存了当前窗口界面的相关信息，比如控件在窗口的位置信息，id信息，文本信息，类型信息，文本信息等等，它和ViewGroup类似，对外提供了诸如findAccessibilityNodeInfosByViewId()，findAccessibilityNodeInfosByText()，performAction()等方法。其中findAccessibilityNodeInfosByViewId()是4.3版本之后的新增方法，表示根据给定控件的ID来获取到对应控件，获取到对应控件后就可以通过performAction()方法来执行点击事件了，那怎么获取到指定控件的ID呢？</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 在Android的sdk目录中有个tools目录，在该目录下有个uiautomatorviewer工具，该工具很有用，特别是分析apk的页面布局信息，它可以获取到当前手机屏幕上的界面信息，如下图所示：</p>
<p><img alt="" src="images/android02105.jpg"></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 在上图中我们通过uiautomatorviewer工具展示了安装APP的界面信息。左侧表示截屏信息，当点击界面上的相关控件的时候，右侧就会出现该控件的相关信息，比如id，text，package，class，clickable等，而这个ID就是我们想要的id，又因为在一个页面上id是唯一的，所以只要我们获取到了所有的符合条件的ID后就可以通过该id获取到对应的AccessibilityNodeInfo对象了，然后通过调用该对象的performAction()方法就可以实现自动点击效果了。通过uiautomatorviewer工具找到所有操作按钮的id后，就可以在我们的AutoInstallApkService的onAccessibilityEvent()方法中做操作了，代码如下：</p>
<pre><code class="language-java hljs"><ol class="hljs-ln" style="width: 875px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AutoInstallApkService</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AccessibilityService</span> </span>{</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String DEFAULT_PACKAGE_NAME = <span class="hljs-string">"com.android.packageinstaller"</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String[] IDS = {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-string">"com.android.packageinstaller:id/ok_button"</span>,        <span class="hljs-comment">// 下一步按钮的ID，注意ID的格式，必须这样写</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-string">"com.android.packageinstaller:id/done_button"</span>,      <span class="hljs-comment">// 完成按钮的ID，注意ID的格式，必须这样写</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-string">"com.android.packageinstaller:id/confirm_button"</span>    <span class="hljs-comment">// 确认按钮的ID，注意ID的格式，必须这样写</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    };</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-meta">@Override</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onAccessibilityEvent</span><span class="hljs-params">(AccessibilityEvent event)</span> </span>{</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">null</span> == event) <span class="hljs-keyword">return</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        installApkIfNecessary(event);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        recycleAccessibilityEvent(event);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">installApkIfNecessary</span><span class="hljs-params">(AccessibilityEvent event)</span> </span>{</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        AccessibilityNodeInfo rootInfo = getRootInActiveWindow();</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">null</span> == rootInfo) <span class="hljs-keyword">return</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        String packageName = rootInfo.getPackageName().toString();</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> (DEFAULT_PACKAGE_NAME.equals(packageName)) {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">int</span> length = IDS.length;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="24"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            AccessibilityNodeInfo availableNode = <span class="hljs-keyword">null</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="25"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; length; i++) {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="26"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                availableNode = findAvailableNodeInfoByViewId(rootInfo, IDS[i]);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="27"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-keyword">if</span> (<span class="hljs-keyword">null</span> != availableNode) {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="28"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                    <span class="hljs-keyword">break</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="29"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="30"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="31"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">null</span> != availableNode) {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="32"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                performClickWithAccessibilityNode(availableNode);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="33"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="34"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="35"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="36"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="37"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-function"><span class="hljs-keyword">private</span> AccessibilityNodeInfo <span class="hljs-title">findAvailableNodeInfoByViewId</span><span class="hljs-params">(AccessibilityNodeInfo root, String id)</span> </span>{</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="38"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        List&lt;AccessibilityNodeInfo&gt; availableNodes = root.findAccessibilityNodeInfosByViewId(id);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="39"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">null</span> == availableNodes || availableNodes.isEmpty()) {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="40"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="41"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="42"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">return</span> availableNodes.get(<span class="hljs-number">0</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="43"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="44"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="45"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">performClickWithAccessibilityNode</span><span class="hljs-params">(AccessibilityNodeInfo nodeInfo)</span> </span>{</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="46"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">null</span> != nodeInfo) {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="47"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">if</span> (nodeInfo.isClickable()) {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="48"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                nodeInfo.performAction(AccessibilityNodeInfo.ACTION_CLICK);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="49"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            } <span class="hljs-keyword">else</span> {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="50"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                performClickWithAccessibilityNode(nodeInfo.getParent());</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="51"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="52"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="53"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="54"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="55"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-meta">@Override</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="56"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onInterrupt</span><span class="hljs-params">()</span> </span>{</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="57"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="58"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="59"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">recycleAccessibilityEvent</span><span class="hljs-params">(AccessibilityEvent event)</span> </span>{</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="60"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">null</span> != event) {</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="61"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            event.recycle();</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="62"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            event = <span class="hljs-keyword">null</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="63"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="64"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    }</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="65"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">}</div></div></li></ol></code></pre>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 以上就是我们AutoInstallApkService的全部代码，相信小伙伴们都看的懂，DEFAULT_PACKAGE_NAME表示监听应用的包名，IDS表示需要点击的所有的ID控件集合，在onAccessibilityEvent()方法中我们首先判断传递进来的event是否非空，如果非空就执行installApkIfNecessary()方法，在该方法中先获取根节点rootInfo，然后循环IDS通过调用rootInfo的findAccessibilityNodeInfosByViewId()方法找到对应的控件节点，如果找到了对应节点就调用performClickWithAccessibilityNode()方法来执行点击动作，需要注意的是在performClickWithAccessibilityNode()方法中如果当前控件不可点击我们就递归调用找其父控件来执行点击事件，只所以这么做是为了避免为了扩大点击面积我们往往在当前控件外嵌套一个父布局然后使父布局来响应点击事件的情况存在(因为之前在做抢红包外挂时碰见这种情况)。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 好了，现在我们的自动安装APP的外挂已经完成，接下来运行在手机上后要在手机的辅助功能列表中开启该服务，否则该服务不起作用，操作截图如下：</p>
<p><img alt="" src="images/android02106.jpg"></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 开启了AutoInstallApkService服务后，就可以在手机上尝试安装一个APP看看效果了。因为我们的AutoInstallApkService是监听的系统的PackageInstaller应用，所以只要我们点击了已经下载过的APP后都是可以调用此应用的，直接点击一个应用，效果如下：</p>
<p><img width="320" height="569" alt="" src="images/android02107.jpg"><br></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 根据截图效果来看，安装APP时的操作流程都可以自动完成，运行结果也达到了我们的预期，这就是在手机上做的一个小外挂，是不是很简单？(*^__^*) ……其实外挂听起来很高大上，但只要了解了它的核心思想，做一个小外挂出来还是很容易的(就像当时我写了一个咻一咻外挂)，现在想想当年的偷菜外挂猜测应该也是借助了系统的辅助功能来实现的吧。</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 好了，到这里有关自动安装APP的小外挂实验已经结果了，在下篇文章<a href="http://blog.csdn.net/llew2011/article/details/52843637" rel="nofollow">Android 源码系列之&lt;十一&gt;从源码的角度深入理解AccessibilityService，打造自己的APP小外挂(下)</a>中，我将带领小伙伴们们从源码出发深入理解一下AccessibilityService的执行原理，敬请期待！！！最后感谢观看(*^__^*)
 ……</p>
<p><br></p>
<p><br></p>
<p><br></p>
<p><br></p>
<p><br></p>
                                    </div>
                    </div>


</div>


</body></html>