<html><head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>如何用ASP读写TXT文本文件中的内容 - qhdzj87的专栏 - CSDN博客</title>
  <link href="images/style.css" rel="stylesheet">
</head>

<body class="stackedit"><div class="stackedit__html">

<div class="article_content clearfix" id="article_content" style="overflow: hidden;">
                                                <div class="article-copyright">
                <span class="creativecommons">
                <a href="http://creativecommons.org/licenses/by-sa/4.0/" rel="license">
                    </a>
            <span>
                版权声明：本文为博主原创文章，遵循<a href="http://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener"> CC 4.0 BY-SA </a>版权协议，转载请附上原文出处链接和本声明。            </span>
               <div class="article-source-link2222">
                    本文链接：<a href="https://blog.csdn.net/qhdzj87/article/details/82763688">https://blog.csdn.net/qhdzj87/article/details/82763688</a>
                </div>
            </span>
                    </div>
                                                    <link href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-3019150162.css" rel="stylesheet">
                                        <link href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-3019150162.css" rel="stylesheet">
                <div class="htmledit_views" id="content_views">
                                            <p style="text-indent: 50px;">虽然使用ASP有几年的时间了，但对ASP网络编程的了解和掌握还停留在初中阶段，一些不太常用的操作没有接触过，自然也没有学会。就拿ASP处理数据而言，用ASP连接数据库是网站开发的必备，这个当然是已经掌握的了。但使用ASP操作文件，恐怕使用频率就没那么高了。今年早些时候，学会了利用ASP的XMLHTTP和FSO组件进行网页内容获取和静态网页的生成，以及一般文件的移动、复制和删除等操作。</p>

<p style="text-indent: 50px;">但对于如何读取纯文本文件（txt）中的内容，却一直没有很好地掌握。应该说，很多时候，txt文件使我们存放少量信息，存放一些使用频率较高信息的常用方法，毕竟比起数据库操作，要简单、方便、快捷。今天就用到了从txt文件中逐行读取邮件地址这样的问题，通过请教百度师父，得到了相应的方法，特地贴出来存档，以备今后查看。</p>

<pre class="has" name="code"><code class="hljs vbscript"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">set</span> fs=<span class="hljs-built_in">Server</span>.<span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">"Scripting.FileSystemObject"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	txtfile=<span class="hljs-built_in">Server</span>.MapPath(<span class="hljs-string">"a.txt"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">set</span> a=fs.OpenTextFile(txtfile)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> a.AtEndOfStream</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">		<span class="hljs-built_in">response</span>.write(a.Readline&amp;<span class="hljs-string">"&lt;br /&gt;"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">wend</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	a.close</div></div></li></ol></code></pre>

<p style="text-indent: 50px;">上述代码的结果就是讲a.txt文件中的数据逐行显示到网页中。当然，如果你逐行读取数据的目的是有其他用途，而非单纯地显示到网页前台，那么在response.write这里执行相应的功能即可。在本例中，代码中提到的的a.txt文件，应该与该程序文件处于同一目录下。</p>

<p style="text-indent: 50px;">此外，还有两外一种代码写法，和上例代码有所差异，但功能是一样的，如下所示：</p>

<pre class="has" name="code"><code class="hljs vbscript"><ol class="hljs-ln" style="width: 795px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">Dim</span> Fso</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">Dim</span> myFile</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">Set</span> Fso = <span class="hljs-built_in">Server</span>.<span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">"Scripting.FileSystemObject"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">Set</span> myFile = Fso.OpenTextFile(<span class="hljs-built_in">Server</span>.MapPath(<span class="hljs-string">"a.txt"</span>),<span class="hljs-number">1</span>,<span class="hljs-literal">True</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-comment">'A.TXT和ASP程序在同个目录下，如果没在一个目录，可以用绝对路径，把上一行的a.txt改为：d:\a.txt</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">While</span> <span class="hljs-keyword">Not</span> myFile.AtEndOfStream</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">		<span class="hljs-built_in">Response</span>.Write myFile.ReadLine &amp; <span class="hljs-string">"&lt;BR&gt;"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">Wend</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	myFile.Close</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">Set</span> myFile = <span class="hljs-literal">Nothing</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">Set</span> Fso = <span class="hljs-literal">Nothing</span></div></div></li></ol></code></pre>

<p style="text-indent: 50px;">本例中，代码中增加了对象的关闭（即close）方法，是比较规范、完整的程序代码编写规则，上例中进行了省略。除此之外，本例中的OpenTextFile()方法也较上例不同，增加了两个参数：“1”和“true”。</p>

<p style="text-indent: 50px;">其实对于大神来说，上述两段代码是完全一致的，只是细节之处有所差异，本质上用到的是相同的原理和方法。作为刚入门的小白，乍一看到确有种两种方式的错觉。</p>

<p style="text-indent: 50px;">此外，除了逐行读取并显示txt中的数据外，还可以对txt中的全部数据进行一次读取，这种当然更为简单，代码如下：</p>

<pre class="has" name="code"><code class="hljs vbscript"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">set</span> fs=<span class="hljs-built_in">server</span>.<span class="hljs-built_in">createobject</span>(<span class="hljs-string">"scripting.filesystemobject"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	filetxt=<span class="hljs-built_in">server</span>.mappath(<span class="hljs-string">"a.txt"</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">set</span> txt=fs.opentextfile(filetxt,<span class="hljs-number">1</span>,<span class="hljs-literal">true</span>)</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> txt.atendofstream <span class="hljs-keyword">then</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">		line=txt.ReadAll</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">		<span class="hljs-built_in">response</span>.write line &amp; <span class="hljs-string">"&lt;br&gt;"</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">	<span class="hljs-keyword">end</span> <span class="hljs-keyword">if</span></div></div></li></ol></code></pre>

<p style="text-indent: 50px;">本例中的txt.ReadAll方法即为读取txt中的全部数据并赋予line变量。</p>

<p style="text-indent: 50px;">总结如下：</p>

<p style="text-indent: 50px;">如果想读取文件中的所有数据，则需要使用：line=txt.ReadAll</p>

<p style="text-indent: 50px;">如果想从文件中读取一行数据，则需要使用：line=txt.ReadLine</p>

<p style="text-indent: 50px;">如果想从文件中读取N个字节的数据，则需要使用：line=txt.Read(N)</p>                                    </div>
                    </div>


</div>


</body></html>