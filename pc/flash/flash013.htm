<html><head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Flash安全的一些总结 - weixin_34143774的博客 - CSDN博客</title>
  <link href="images/style.css" rel="stylesheet">
</head>

<body class="stackedit"><div class="stackedit__html">

<div class="article_content clearfix" id="article_content" style="overflow: hidden;">
                                        <div class="article-source-link">
                    原文链接：<a href="https://juejin.im/post/5aa114386fb9a028b410a547" target="_blank" rel="noopener">https://juejin.im/post/5aa114386fb9a028b410a547</a>
                </div>
                        <link href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-3019150162.css" rel="stylesheet">
                                        <link href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-3019150162.css" rel="stylesheet">
                <div class="htmledit_views" id="content_views">
                                            <div class="article-content"><blockquote><p>只抽红梅 · 2013/06/27 12:37</p></blockquote><p></p><p>整理了下Flash安全相关的知识，后面会再完善</p><h3><a name="t0"></a>一、先来说crossdomain.xml这个文件</h3><hr><p>flash如何跨域通信，全靠crossdomain.xml这个文件。这个文件配置在服务端，一般为根目录下，限制了flash是否可以跨域获取数据以及允许从什么地方跨域获取数据。</p><p>比如下面的列子： 1、www.a.com域下不存在crossdomain.xml文件，则不允许除了www.a.com域之外的其他任何域下的flash进行跨域请求。</p><p>2、www.a.com域下存在crossdomain.xml文件，如若配置 allow-access-from 为www.b.com，则只允许www.b.com域下的flash进行跨域请求，以及来自自身域www.a.com的网络请求。 crossdomain.xml需严格遵守XML语法，有且仅有一个根节点cross-domain-policy，且不包含任何属性。在此根节点下只能包含如下的子节点：</p><pre><code class="copyable hljs python"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">site-control</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">allow-access-<span class="hljs-keyword">from</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">allow-access-<span class="hljs-keyword">from</span>-identity</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">allow-http-request-headers-<span class="hljs-keyword">from</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><h4>site-control</h4><p>早期的flash允许从其他位置载入自定义的策略文件，目前最新版的flash在接受自定义的策略文件之前会去检查主目录的crossdomain.xml来判断是否接受自定义策略文件。该选项就由site-control进行控制。</p><p>不加该选项时，默认情况下flash不加载除主策略文件之外的其他策略文件，即只接受根目录下的crossdomain.xml，这样可以防止利用上传自定 义策略文件进行的攻击。如果需要启用其他策略文件，则需要配置permitted-cross-domain-policies属性，该属性有以下五个 值： none: 不允许使用loadPolicyFile方法加载任何策略文件，包括此主策略文件。</p><pre><code class="copyable hljs vbnet"><ol class="hljs-ln" style="width: 1025px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">master-only: 只允许使用主策略文件[默认值]。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">by</span>-content-type:只允许使用loadPolicyFile方法加载HTTP/HTTPS协议下Content-Type为<span class="hljs-keyword">text</span>/x-cross-domain-policy的文件作为跨域策略文件。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">by</span>-ftp-filename:只允许使用loadPolicyFile方法加载FTP协议下文件名为crossdomain.xml的文件作为跨域策略文件。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">all: 可使用loadPolicyFile方法加载目标域上的任何文件作为跨域策略文件，甚至是一个JPG也可被加载为策略文件！</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><p>例子：</p><pre><code class="copyable hljs xml"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-tag">&lt;<span class="hljs-name">site-control</span> <span class="hljs-attr">permitted-cross-domain-policies</span>=<span class="hljs-string">"by-content-type"</span> &gt;</span> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><p>允许通过HTTP/HTTPS协议加载http头中Content-Type为text/x-cross-domain-policy的文件作为策略文件</p><pre><code class="copyable hljs xml"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-tag">&lt;<span class="hljs-name">site-control</span> <span class="hljs-attr">permitted-cross-domain-policies</span>=<span class="hljs-string">"all"</span> &gt;</span> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><p>允许加载任意文件作为策略文件</p><h4>allow-access-from</h4><p>该选项用来限制哪些域有权限进行跨域请求数据。</p><p>allow-access-from有三个属性</p><pre><code class="copyable hljs vbscript"><ol class="hljs-ln" style="width: 1412px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">domain：有效的值为IP、域名，子域名代表不同的域，通配符*单独使用代表所有域。通配符作为前缀和域名进行组合代表多个域，比如*.weibo.com,代表weibo.com所有的子域。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">to</span>-ports：该属性值表明允许访问读取本域内容的socket连接端口范围。可使用<span class="hljs-keyword">to</span>-ports=<span class="hljs-string">"1100,1120-1125"</span>这样的形式来限定端口范围，也可使用通配符（*）表示允许所有端口。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">secure：该属性值指明信息是否经加密传输。当crossdomain.xml文件使用https加载时，secure默认设为<span class="hljs-literal">true</span>。此时将不允许flash传输非https加密内容。若手工设置为<span class="hljs-literal">false</span>则允许flash传输非https加密内容。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><p>例子</p><p>http://a.com/crossdomain.xml文件内容如下</p><pre><code class="copyable hljs xml"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-tag">&lt;<span class="hljs-name">cross-domain-policy</span> &gt;</span> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-tag">&lt;<span class="hljs-name">allow-access-from</span> <span class="hljs-attr">domain</span>=<span class="hljs-string">"*.b.com"</span> <span class="hljs-attr">secure</span>=<span class="hljs-string">"true"</span> /&gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-tag">&lt;/<span class="hljs-name">cross-domain-policy</span> &gt;</span> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><p>允许所有qq.com的子域通过https对t.qq.com域进行跨域请求。</p><h4>allow-access-from-identity</h4><p>该节点配置跨域访问策略为允许有特定证书的来源跨域访问本域上的资源。每个allow-access-from-identity节点最多只能包含一个signatory子节点。</p><h4>allow-http-request-headers-from</h4><p>此节点授权第三方域flash向本域发送用户定义的http头。</p><p>allow-http-request-headers-from包含三个属性：</p><pre><code class="copyable hljs python"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">domain：作用及参数格式与allow-access-<span class="hljs-keyword">from</span>节点中的domain类似。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">headers：以逗号隔开的列表，表明允许发送的http头。可用通配符（*）表示全部http头。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">secure：作用及用法与allow-access-<span class="hljs-keyword">from</span>节点中的secure相同。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><p>注：Flash 在自定义HTTP头中无法使用下列请求标题，并且受限制的词不区分大小写（例如，不允许使用 Get、get 和 GET）。 另外，如果使用下划线字符，这也适用于带连字符的词（例如，不允许使用 Content-Length 和 Content_Length）：</p><pre><code class="copyable hljs sql"><ol class="hljs-ln" style="width: 4086px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">Accept-Charset、Accept-Encoding、Accept-Ranges、Age、Allow、Allowed、Authorization、Charge-To、Connect、Connection、Content-Length、Content-Location、Content-Range、Cookie、Date、<span class="hljs-keyword">Delete</span>、ETag、Expect、<span class="hljs-keyword">Get</span>、<span class="hljs-keyword">Head</span>、Host、<span class="hljs-keyword">Keep</span>-Alive、<span class="hljs-keyword">Last</span>-Modified、Location、<span class="hljs-keyword">Max</span>-Forwards、Options、Post、Proxy-Authenticate、Proxy-Authorization、Proxy-<span class="hljs-keyword">Connection</span>、<span class="hljs-keyword">Public</span>、Put、<span class="hljs-keyword">Range</span>、Referer、Request-<span class="hljs-keyword">Range</span>、Retry-<span class="hljs-keyword">After</span>、<span class="hljs-keyword">Server</span>、TE、<span class="hljs-keyword">Trace</span>、Trailer、Transfer-<span class="hljs-keyword">Encoding</span>、<span class="hljs-keyword">Upgrade</span>、URI、<span class="hljs-keyword">User</span>-<span class="hljs-keyword">Agent</span>、Vary、Via、<span class="hljs-keyword">Warning</span>、WWW-Authenticate 和 x-flash-<span class="hljs-keyword">version</span>。</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><h3><a name="t1"></a>二、web应用中安全使用flash</h3><hr><p>设置严格的crossdomain.xml文件可以提高服务端的安全性，在web应用中也会经常使用flash，一般是通过&lt;object&gt;或者&lt;embed&gt;来进行调用，例如下面：</p><pre><code class="copyable hljs xml"><ol class="hljs-ln" style="width: 2654px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-tag">&lt;<span class="hljs-name">object</span> <span class="hljs-attr">classid</span>=<span class="hljs-string">"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"</span> <span class="hljs-attr">codebase</span>=<span class="hljs-string">"http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0"</span><span class="hljs-attr">name</span>=<span class="hljs-string">"Main"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"1000"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"600"</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"middle"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"Main"</span> &gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-tag">&lt;<span class="hljs-name">embed</span> <span class="hljs-attr">flashvars</span>=<span class="hljs-string">"site=&amp;sitename="</span> <span class="hljs-attr">src</span>=<span class="hljs-string">'Loading.swf?user=453156346&amp;key=df57546b-c68c-4fd7-9f9c-2d105905f132&amp;v=10950&amp;rand=633927610302991250'</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"1000"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"600"</span><span class="hljs-attr">align</span>=<span class="hljs-string">"middle"</span> <span class="hljs-attr">quality</span>=<span class="hljs-string">"high"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"Main"</span> <span class="hljs-attr">allowscriptaccess</span>=<span class="hljs-string">"sameDomain"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"application/x-shockwave-flash"</span> <span class="hljs-attr">pluginspage</span>=<span class="hljs-string">"http://www.macromedia.com/go/getflashplayer"</span> &gt;</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-tag">&lt;/<span class="hljs-name">object</span> &gt;</span> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"> </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-tag">&lt;<span class="hljs-name">embed</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"http://www.xxx.com/Loading.swf"</span> <span class="hljs-attr">allowScriptAccess</span>=<span class="hljs-string">"sameDomain"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"application/x-shockwave-flash&gt;</span></span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn"><span class="hljs-tag"><span class="hljs-string">复制代码</span></span></span></div></div></li></ol></code></pre><p>flash是直接可以执行js代码的，所以在web应用中如果使用不当也会很危险，所以flash使用下面两个属性来保证引用flash时的安全性。</p><p>allowScriptAccess 和 allowNetworking</p><p>allowScriptAccess用来控制flash与html的通讯，可选的值为：</p><pre><code class="copyable hljs java"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">always <span class="hljs-comment">//对与html的通讯也就是执行javascript不做任何限制</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">sameDomain <span class="hljs-comment">//只允许来自于本域的flash与html通讯，这是默认值</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">never <span class="hljs-comment">//绝对禁止flash与页面的通讯</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><p>allowNetworking用来控制flash与外部的网络通讯，可选的值为：</p><pre><code class="copyable hljs swift"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">all <span class="hljs-comment">//允许使用所有的网络通讯，也是默认值</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">internal</span> <span class="hljs-comment">//flash不能与浏览器通讯如navigateToURL，但是可以调用其他的API</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">none</span> <span class="hljs-comment">//禁止任何的网络通讯</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><p>在allowNetworking设置为internal时，下面API将会被禁止使用：</p><pre><code class="copyable hljs css"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">fscommand</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">navigateToURL</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">ExternalInterface</span><span class="hljs-selector-class">.call</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><p>在allowNetworking设置为none时，下面API将会被禁止使用：</p><pre><code class="copyable hljs css"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">sendToURL</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">FileReference</span><span class="hljs-selector-class">.download</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">FileReference</span><span class="hljs-selector-class">.upload</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">Loader</span><span class="hljs-selector-class">.load</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">LocalConnection</span><span class="hljs-selector-class">.connect</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">LocalConnection</span><span class="hljs-selector-class">.send</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">NetConnection</span><span class="hljs-selector-class">.connect</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">URLStream</span><span class="hljs-selector-class">.load</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">NetStream</span><span class="hljs-selector-class">.play</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">Security</span><span class="hljs-selector-class">.loadPolicyFile</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">SharedObject</span><span class="hljs-selector-class">.getLocal</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">SharedObject</span><span class="hljs-selector-class">.getRemote</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">Socket</span><span class="hljs-selector-class">.connect</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">Sound</span><span class="hljs-selector-class">.load</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">URLLoader</span><span class="hljs-selector-class">.load</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-selector-tag">XMLSocket</span><span class="hljs-selector-class">.connect</span>()</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><p>在web应用中使用flash的时候一般通过设置这两项即可保证安全性，如果在web应用中使用的flash为用户可控，强烈建议这两项的设置值为</p><pre><code class="copyable hljs swift"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">allowScriptAccess=never allowNetworking=<span class="hljs-keyword">none</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><h3><a name="t2"></a>三、flash安全编程</h3><p>如果web应用中调用flash时设置的allowScriptAccess为never、allowNetworking为none，即使flash文件 本身存在漏洞也可以忽略。不过事实上大部分web应用不会设置这两项属性，甚至会设置的不安全，比如allowScriptAccess为always、 allowNetworking为all。所以在进行flash开发的时候就要考虑好安全性。</p><p>flash编程不安全可导致两方面的漏洞：</p><pre><code class="copyable hljs css"><ol class="hljs-ln"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">1、通过<span class="hljs-selector-tag">ExternalInterface</span><span class="hljs-selector-class">.call</span>()执行<span class="hljs-selector-tag">javascript</span>代码 </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">2、通过<span class="hljs-selector-tag">loadMovie</span>()等方式可以载入外部<span class="hljs-selector-tag">flash</span>文件执行 </div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><p>这两类问题都是需要通过参数接收外面传入的数据，在flash内部没有对数据进行严格的控制造成的。</p><p>例子：</p><pre><code class="copyable hljs kotlin"><ol class="hljs-ln" style="width: 752px;"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">this</span>.movieName = root.loaderInfo.parameters.movieName;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">this</span>.flashReady_Callback = <span class="hljs-string">"SWFUpload.instances[\""</span> + <span class="hljs-keyword">this</span>.movieName + <span class="hljs-string">"\"].flashReady"</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">ExternalCall.Simple(<span class="hljs-keyword">this</span>.flashReady_Callback);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">public</span> static function Simple(arg0:String){</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    ExternalInterface.call(arg0);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">    <span class="hljs-keyword">return</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">}</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="copy-code-btn">复制代码</span></div></div></li></ol></code></pre><p>接收到外部传入的movieName没有进行处理，最后通过ExternalInterface.call()进行执行，这样就能够执行任意的javascript代码，如果在调用flash的时候设置的不够安全就是XSS漏洞。</p><p>所以在flash编程中如果需要通过参数接收外部传入的数据，一定要对数据进行严格的检查，这样才能保证flash安全性。</p><p>参考文档：</p><p>Flash应用安全规范 <a href="https://link.juejin.im?target=http%3A%2F%2Fwww.80sec.com%2Fflash-security-polic.html" rel="nofollow" data-token="6eeca20b4ec7ea0c53731ad6b272cbb4">www.80sec.com/flash-secur…</a></p><p>flash跨域策略文件crossdomain.xml配置详解 <a href="https://link.juejin.im?target=http%3A%2F%2Fhi.baidu.com%2Fcncxz%2Fblog%2Fitem%2F7be889fa8f47a20c6c22eb3a.html" rel="nofollow" data-token="b37ee55937da51a4ff61626bb7b03018">hi.baidu.com/cncxz/blog/…</a></p><p>Cross-domain Policy File Specification <a href="https://link.juejin.im?target=http%3A%2F%2Fwww.senocular.com%2Fpub%2Fadobe%2Fcrossdomain%2Fpolicyfiles.html" rel="nofollow" data-token="33ee93182a9f7631100080ffe3fab0a0">www.senocular.com/pub/adobe/c…</a></p><p></p></div>                                    </div>
                    </div>


</div>


</body></html>